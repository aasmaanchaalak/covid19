{"version":3,"sources":["images/cover_face.svg","images/handwash.svg","images/dont_touch_face.svg","images/handrub.svg","images/face_mask.svg","images/social_distancing.svg","views/CurfewMessage.js","userpages/home/Home.js","userpages/social_distancing/SocialDistancing.js","userpages/self_quarantine/SelfQuarantine.js","userpages/myths/Myths.js","views/sim/options.js","views/sim/collisions.js","views/sim/Ball.js","views/sim/Simulation.js","userpages/simulation/Simulation.js","views/header/Header.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["module","exports","JanataCurfewComponent","t","this","props","className","React","Component","JanataCurfewTrans","withTranslation","JanataCurfew","fallback","HomeComponent","title","src","frameBorder","allow","allowFullScreen","handwash","alt","coverFace","dTouchFace","handRub","socialDistancing","faceMask","HomeTrans","Home","SocialDistancingComponent","href","rel","target","SocialDistancingTrans","SocialDistancing","SelfQuarantineComponent","SelfQuarantineTrans","SelfQuarantine","MythsComponent","MythsTrans","Myths","DEFAULT_FILTERS","death","stayHome","COLORS","recovered","infected","well","STATES","STARTING_BALLS","atan2","Math","cos","sin","sqrt","calculateChangeDirection","dx","dy","angle","ax","ay","checkCollision","diameter","Ball","runState","x","y","id","state","sketch","hasMovement","vx","random","vy","timeInfected","hasCollision","survivor","filters","TICKS_TO_RECOVER","results","others","i","length","otherBall","BALL_RADIUS","width","height","color","noStroke","fill","ellipse","matchMedia","window","isDesktop","matches","Simulation","graphPoint","graphList","balls","updateGraph","rects","Object","entries","map","count","percentatge","rect","join","newGraphPoint","graphRef","current","insertAdjacentHTML","resetValues","isDesktopNewValue","innerHTML","resetRun","tick","updateCount","keys","countersRef","forEach","innerText","startBalls","Array","from","config","STATIC_PEOPLE_PERCENTATGE","createCanvas","parentRef","parent","setup","addListener","e","draw","background","ball","checkState","checkCollisions","move","render","createRef","canvasRef","motion_percentage","ref","version","xmlns","aria-labelledby","role","SimulationComponent","SimulationTrans","HeaderComponent","event","i18n","lang","value","changeLanguage","console","log","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","onChange","defaultValue","language","HeaderTrans","Header","App","basename","exact","path","component","SD","SQ","Boolean","location","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","interpolation","escapeValue","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f653dd9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover_face.8458c828.svg\";","module.exports = __webpack_public_path__ + \"static/media/handwash.2708ccaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/dont_touch_face.2f3c3d90.svg\";","module.exports = __webpack_public_path__ + \"static/media/handrub.f0a5d838.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_mask.0a2b4dab.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_distancing.f11225ad.svg\";","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nclass JanataCurfewComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"imp-message\">\n                    <h1>{t('sd.jan_curfew_message')}</h1>\n                    {<span>Everyone is advised to stay indoor and practice self quarantine.</span>}\n                </div>\n            </>\n        );\n    }\n}\n\nconst JanataCurfewTrans = withTranslation()(JanataCurfewComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function JanataCurfew() {\n  return (\n    <Suspense fallback=\"loading\">\n      <JanataCurfewTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './Home.scss'\n// import Content from './mk.md'\n\nimport coverFace from '../../images/cover_face.svg'\nimport handwash from '../../images/handwash.svg'\nimport dTouchFace from '../../images/dont_touch_face.svg'\nimport handRub from '../../images/handrub.svg'\nimport faceMask from '../../images/face_mask.svg'\nimport socialDistancing from '../../images/social_distancing.svg'\n\nclass HomeComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                    <CurfewMessage/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <iframe className=\"embed-video\" title=\"Information WHO\" src={t('home.resources.who')} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                        </div>\n                        <div className=\"col-md-6 info-box\">\n                            <h2>{t('home.what_is_corona')}</h2>\n                            {t('home.what_is_corona_answer')} <code>{t('home.what_is_corona_punch')}</code>\n                        </div>\n                    </div>\n                    <div className=\"prevent-box\">\n                        <h1>{t('home.how_to_prevent_infection')}</h1>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={handwash} alt=\"Handwash\"/>\n                                <h3>{t('home.handwash')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={coverFace} alt=\"cover your face\"/>\n                                <h3>{t('home.cover_face')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={dTouchFace} alt=\"Handwash\"/>\n                                <h3>{t('home.dont_touch_face')}</h3>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={handRub} alt=\"Handwash\"/>\n                                <h3>{t('home.handrub')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={socialDistancing} alt=\"Handwash\"/>\n                                <h3>{t('home.social_distancing')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={faceMask} alt=\"Handwash\"/>\n                                <h3>{t('home.mask')}</h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                \n                {/* <UserEngagementForm/>\n                <CityGraphics/>\n                <MarkdownContent className=\"content\" text={Content} /> */}\n            </>\n        );\n    }\n}\n\nconst HomeTrans = withTranslation()(HomeComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Home() {\n  return (\n    <Suspense fallback=\"loading\">\n      <HomeTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './SocialDistancing.scss'\n\nclass SocialDistancingComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                  <CurfewMessage/>\n                  <div className=\"row\">\n                  <div className=\"col-md-8 info-box\">\n                      <h1>{t('sd.what_is_sd')}</h1>\n                      <p>{t('sd.what_is_sd_ans')}</p>\n\n                      <p>{t('sd.what_is_sd_ans-2')}</p>\n                      <ul>\n                        <li>{t('sd.what_is_sd_ans-2-opt1')}</li>\n                        <li>{t('sd.what_is_sd_ans-2-opt2')}</li>\n                        <li>{t('sd.what_is_sd_ans-2-opt3')}</li>\n                        <li>{t('sd.what_is_sd_ans-2-opt4')}</li>\n                      </ul>\n                      <div className=\"source\"><a href=\"https://www.hopkinsmedicine.org/health/conditions-and-diseases/coronavirus/coronavirus-social-distancing-and-self-quarantine\" rel=\"noopener noreferrer\" target=\"_blank\">Johns Hopkins Medicine</a></div>\n                    </div>\n                    <div className=\"col-md-4 image-box\">\n                      <iframe className=\"social-dis-video\" title=\"Information WHO\" src=\"https://www.youtube.com/embed/53R4wbhrrLA\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                      {/* <img className=\"minor-image\" src={socialDistancing} alt=\"Handwash\"/> */}\n                    </div>\n                  </div>\n                  \n                  <div className=\"info-box extra-margin-top\">\n\n                    \n                    <h1>How does Ministry of Health, India defines it?</h1>\n                    <p>\n                      Social distancing is a non-pharmaceutical infection prevention and control intervention\n                      implemented to avoid/decrease contact between those who are infected with a disease causing\n                      pathogen and those who are not, so as to stop or slow down the rate and extent of disease\n                      transmission in a community. This eventually leads to decrease in spread, morbidity and\n                      mortality due to the disease.\n                    </p>\n                    <iframe className=\"social-dis-video\" title=\"Information WHO\" src={t('sd.resources.what_is_video')} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                  </div>\n                  \n                </div>\n            </>\n        );\n    }\n}\n\nconst SocialDistancingTrans = withTranslation()(SocialDistancingComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function SocialDistancing() {\n  return (\n    <Suspense fallback=\"loading\">\n      <SocialDistancingTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\n//import './SelfQuarantine.scss'\n\nclass SelfQuarantineComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                  <CurfewMessage/>\n                  <div className=\"row\">\n                  <div className=\"col-md-12 info-box\">\n                      <h1>{t('sq.what_is_sq')}</h1>\n                      <p>{t('sq.what_is_sq_ans')}</p>\n\n                      <p>{t('sq.what_is_sq_ans-2')}</p>\n\n                      <p>{t('sq.involves')}</p>\n                      <ul>\n                        <li>{t('sq.involves-1')}</li>\n                        <li>{t('sq.involves-2')}</li>\n                        <li>{t('sq.involves-3')}</li>\n                        <li>{t('sq.involves-4')}</li>\n                        <li>{t('sq.involves-5')}</li>\n                      </ul>\n                      <div className=\"source\"><a href=\"https://www.hopkinsmedicine.org/health/conditions-and-diseases/coronavirus/coronavirus-social-distancing-and-self-quarantine\" rel=\"noopener noreferrer\" target=\"_blank\">Johns Hopkins Medicine</a></div>\n                    </div>\n                  </div>\n                  \n                  {/* <div className=\"info-box extra-margin-top\">\n\n                    \n                    <h1>How does Ministry of Health, India defines it?</h1>\n                    <p>\n                      Social distancing is a non-pharmaceutical infection prevention and control intervention\n                      implemented to avoid/decrease contact between those who are infected with a disease causing\n                      pathogen and those who are not, so as to stop or slow down the rate and extent of disease\n                      transmission in a community. This eventually leads to decrease in spread, morbidity and\n                      mortality due to the disease.\n                    </p>\n                    <iframe className=\"social-dis-video\" title=\"Information WHO\" src={t('sd.resources.what_is_video')} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                  </div> */}\n\n                  <div className=\"row\">\n                    <div className=\"col-md-4\"></div>\n                    <div className=\"col-md-8\">\n                        \n                    </div>\n                  </div>\n                  \n                </div>\n            </>\n        );\n    }\n}\n\nconst SelfQuarantineTrans = withTranslation()(SelfQuarantineComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function SelfQuarantine() {\n  return (\n    <Suspense fallback=\"loading\">\n      <SelfQuarantineTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './Myths.scss'\n\nclass MythsComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                    <CurfewMessage/>\n                    <div className=\"row myths\">\n                        <div className=\"col-md-6 info-box\">\n                            <h2>Cold weather and snow CANNOT kill the CoronaVirus</h2>\n                            <h2>Hand dryers are NOT effective in killing the CoronaVirus.</h2>\n                        </div>\n                        <div className=\"col-md-6 info-box\">\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nconst MythsTrans = withTranslation()(MythsComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Myths() {\n  return (\n    <Suspense fallback=\"loading\">\n      <MythsTrans />\n    </Suspense>\n  );\n}\n","export const DEFAULT_FILTERS = {\n  death: true,\n  stayHome: true\n}\n\nexport const CANVAS_SIZE = {\n  height: 880,\n  width: 360\n}\n\nexport const DESKTOP_CANVAS_SIZE = {\n  height: 400,\n  width: 800\n}\n\nexport const BALL_RADIUS = 5\nexport const COLORS = {\n  death: '#c50000',\n  recovered: '#D88DBC',\n  infected: '#5ABA4A',\n  well: '#63C8F2'\n}\n\nexport const STATES = {\n  infected: 'infected',\n  well: 'well',\n  recovered: 'recovered',\n  death: 'death'\n}\n\nexport const COUNTERS = {\n  ...STATES,\n  'max-concurrent-infected': 'max-concurrent-infected'\n}\n\nexport const STARTING_BALLS = {\n  [STATES.infected]: 1,\n  [STATES.well]: 199,\n  [STATES.recovered]: 0,\n  [STATES.death]: 0,\n  'max-concurrent-infected': 0\n}\n\nexport const MORTALITY_PERCENTATGE = 5\nexport const SPEED = 1\nexport const TOTAL_TICKS = 1600\nexport const TICKS_TO_RECOVER = 500\n//export const STATIC_PEOPLE_PERCENTATGE = 90","const { atan2, cos, sin, sqrt } = Math\n\nexport const calculateChangeDirection = ({ dx, dy }) => {\n  const angle = atan2(dy, dx)\n  const ax = cos(angle)\n  const ay = sin(angle)\n  return { ax, ay }\n}\n\nexport const checkCollision = ({ dx, dy, diameter }) => {\n  const distance = sqrt(dx * dx + dy * dy)\n  return distance < diameter\n}","import {\n  BALL_RADIUS,\n  COLORS,\n  MORTALITY_PERCENTATGE,\n  TICKS_TO_RECOVER,\n  SPEED,\n  STATES\n} from './options.js'\nimport { checkCollision, calculateChangeDirection } from './collisions.js'\n\nconst diameter = BALL_RADIUS * 2\n\nexport class Ball {\n  constructor ({ x, y, id, state, sketch, hasMovement }, runState) {\n    this.x = x\n    this.y = y\n    this.vx = sketch.random(-1, 1) * SPEED\n    this.vy = sketch.random(-1, 1) * SPEED\n    this.sketch = sketch\n    this.id = id\n    this.state = state\n    this.timeInfected = 0\n    this.hasMovement = hasMovement\n    this.hasCollision = true\n    this.survivor = false\n    this.runState = runState\n  }\n\n  checkState () {\n    if (this.state === STATES.infected) {\n      if (this.runState.filters.death && !this.survivor && this.timeInfected >= TICKS_TO_RECOVER / 2) {\n        this.survivor = this.sketch.random(100) >= MORTALITY_PERCENTATGE\n        if (!this.survivor) {\n          this.hasMovement = false\n          this.state = STATES.death\n          this.runState.results[STATES.infected]--\n          this.runState.results[STATES.death]++\n          return\n        }\n      }\n\n      if (this.timeInfected >= TICKS_TO_RECOVER) {\n        this.state = STATES.recovered\n        this.runState.results[STATES.infected]--\n        this.runState.results[STATES.recovered]++\n      } else {\n        this.timeInfected++\n      }\n    }\n  }\n\n  checkCollisions ({ others }) {\n    if (this.state === STATES.death) return\n\n    for (let i = this.id + 1; i < others.length; i++) {\n      const otherBall = others[i]\n      const { state, x, y } = otherBall\n      if (state === STATES.death) continue\n\n      const dx = x - this.x\n      const dy = y - this.y\n\n      if (checkCollision({ dx, dy, diameter: BALL_RADIUS * 2 })) {\n        const { ax, ay } = calculateChangeDirection({ dx, dy })\n\n        this.vx -= ax\n        this.vy -= ay\n        otherBall.vx = ax\n        otherBall.vy = ay\n\n        // both has same state, so nothing to do\n        if (this.state === state) return\n        // if any is recovered, then nothing happens\n        if (this.state === STATES.recovered || state === STATES.recovered) return\n        // then, if some is infected, then we make both infected\n        if (this.state === STATES.infected || state === STATES.infected) {\n          this.state = otherBall.state = STATES.infected\n          this.runState.results[STATES.infected]++\n          this.runState.results[STATES.well]--\n        }\n      }\n    }\n  }\n\n  move () {\n    if (!this.hasMovement) return\n\n    this.x += this.vx\n    this.y += this.vy\n\n    // check horizontal walls\n    if (\n      (this.x + BALL_RADIUS > this.sketch.width && this.vx > 0) ||\n      (this.x - BALL_RADIUS < 0 && this.vx < 0)) {\n      this.vx *= -1\n    }\n\n    // check vertical walls\n    if (\n      (this.y + BALL_RADIUS > this.sketch.height && this.vy > 0) ||\n      (this.y - BALL_RADIUS < 0 && this.vy < 0)) {\n      this.vy *= -1\n    }\n  }\n\n  render () {\n    const color = COLORS[this.state]\n    this.sketch.noStroke()\n    this.sketch.fill(color)\n    this.sketch.ellipse(this.x, this.y, diameter, diameter)\n  }\n}","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Sketch from \"react-p5\";\n\nimport {\n  BALL_RADIUS,\n  CANVAS_SIZE,\n  DESKTOP_CANVAS_SIZE,\n  STARTING_BALLS,\n  STATES,\n  COUNTERS,\n  COLORS,\n  DEFAULT_FILTERS,\n  TOTAL_TICKS,\n  resetRun\n} from './options.js'\n\nimport { Ball } from './Ball.js'\nimport './Simulation.scss'\n\nconst matchMedia = window.matchMedia('(min-width: 800px)')\n\nlet isDesktop = matchMedia.matches\n\nclass Simulation extends React.Component {\n\n    graphPoint = 0\n    graphList = ''\n    balls = []\n\n    constructor(props) {\n        super(props)\n\n        this.countersRef = {\n            infected: React.createRef(),\n            well: React.createRef(),\n            recovered: React.createRef(),\n            death: React.createRef()\n        }\n\n        this.graphRef = React.createRef()\n        this.canvasRef = React.createRef()\n\n        this.runState = { \n            filters: { ...DEFAULT_FILTERS },\n            results: { ...STARTING_BALLS },\n            config: {\n                STATIC_PEOPLE_PERCENTATGE: props.motion_percentage\n            },\n            tick: 0\n        }\n    }\n\n    updateGraph = () => {\n        let y = 0\n        const rects = Object.entries(this.runState.results).map(([state, count]) => {\n            const color = COLORS[state]\n            if (count > 0) {\n                const percentatge = count / 200 * 100\n                const rect = `<rect height=\"${percentatge}\" y=\"${y}\" width=\"1\" fill=\"${color}\"></rect>`\n                y += percentatge\n                return rect\n            }\n            return ''\n        }).join('')\n\n        const newGraphPoint = `<g transform=\"translate(${this.graphPoint},0)\">${rects}</g>`\n        this.graphPoint++\n\n\n        this.graphRef.current.insertAdjacentHTML('beforeend', newGraphPoint)\n    }\n\n    resetValues = (isDesktopNewValue = isDesktop) => {\n        this.graphRef.current.innerHTML = ''\n        //replayElement.style.display = 'none'\n        this.graphPoint = 0\n        isDesktop = isDesktopNewValue\n        this.resetRun()\n    }\n\n    resetRun = () => {\n        this.runState.results = { ...STARTING_BALLS }\n        this.runState.tick = 0\n    }\n\n    updateCount = (sketch) => {\n        if (this.runState.tick < TOTAL_TICKS) {\n            // calculate max concurrent infected\n            if (this.runState.results[STATES.infected] > this.runState.results['max-concurrent-infected']) {\n                this.runState.results['max-concurrent-infected']++\n            }\n\n            Object.keys(this.countersRef).forEach((state) => {\n                this.countersRef[state].current.innerText = this.runState.results[state]\n            })\n\n            if (isDesktop) {\n                this.runState.tick % 2 === 0 && this.updateGraph()\n            } else {\n                this.runState.tick % 4 === 0 && this.updateGraph()\n            }\n        }\n\n        if (this.runState.tick === TOTAL_TICKS) {\n            this.startBalls(sketch)\n            this.resetValues()\n            //replayElement.style.display = 'flex'\n        } else {\n            this.runState.tick++\n        }\n    }\n\n    startBalls = (sketch) => {\n        let id = 0\n        this.balls = []\n        Object.keys(STARTING_BALLS).forEach(state => {\n            Array.from({ length: STARTING_BALLS[state] }, () => {\n                const hasMovement = this.runState.filters.stayHome ? sketch.random(0, 100) < this.runState.config.STATIC_PEOPLE_PERCENTATGE || state === STATES.infected : true\n\n                this.balls[id] = new Ball({\n                    id,\n                    sketch,\n                    state,\n                    hasMovement,\n                    x: sketch.random(BALL_RADIUS, sketch.width - BALL_RADIUS),\n                    y: sketch.random(BALL_RADIUS, sketch.height - BALL_RADIUS)\n                }, this.runState)\n                id++\n            })\n        })\n    }\n\n    createCanvas = (sketch, parentRef) => {\n        const { height, width } = isDesktop ? DESKTOP_CANVAS_SIZE : CANVAS_SIZE\n        sketch.createCanvas(550, 450).parent(parentRef)\n    }\n\n    setup = (sketch, parentRef) => {\n        this.createCanvas(sketch, parentRef)\n        this.startBalls(sketch)\n\n        matchMedia.addListener(e => {\n            isDesktop = e.matches\n            this.createCanvas(sketch, parentRef)\n            this.startBalls(sketch)\n            this.resetValues()\n        })\n\n        /* replayButton.onclick = () => {\n            this.startBalls(sketch)\n            resetValues()\n        }\n\n        deathFilter.onclick = () => {\n            this.runState.filters.death = !this.runState.filters.death\n            document.getElementById('death-count').classList.toggle('show', this.runState.filters.death)\n            this.startBalls(sketch)\n            resetValues()\n        }\n\n        stayHomeFilter.onchange = () => {\n            this.runState.filters.stayHome = !this.runState.filters.stayHome\n            this.startBalls(sketch)\n            resetValues()\n        } */\n    }\n\n    draw = (sketch) => {\n        sketch.background('white')\n        this.balls.forEach(ball => {\n            ball.checkState()\n            ball.checkCollisions({ others: this.balls })\n            ball.move()\n            ball.render()\n        })\n        this.updateCount(sketch)\n    }\n\n\n    render() {\n        return (\n            <div className=\"viz-box\">\n                <div className=\"count\">\n                    <div className=\"healthy\">Healthy<br /><span ref={this.countersRef.well}></span></div>\n                    <div className=\"sick\">Sick<br /><span ref={this.countersRef.infected}>0</span></div>\n                    <div className=\"recovered\">Recovered<br /><span ref={this.countersRef.recovered}>0</span></div>\n                    <div className=\"deaths\">Deaths<br /><span ref={this.countersRef.death}>0</span></div>\n                </div>\n                <svg ref={this.graphRef} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" height=\"100\" width=\"100%\" aria-labelledby=\"Graph of virus spread\" role=\"img\">\n                    <title>Graph of virus spread</title>\n                </svg>\n                <Sketch ref={this.canvasRef} setup={this.setup} draw={this.draw} />\n            </div>\n        );\n    }\n}\n\n\nexport default Simulation\n/* export const SimulationTrans = withTranslation()(SimulationComponent)\nexport default SimulationTrans */\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\n/* export default function Simulation() {\n  return (\n    <Suspense fallback=\"loading\">\n      <SimulationTrans />\n    </Suspense>\n  );\n} */\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\nimport SimulationView from '../../views/sim/Simulation'\n\nimport './Simulation.scss'\n\nclass SimulationComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                    <CurfewMessage/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 right-border\">\n                            <h2>Without Social Distancing</h2>\n                            <SimulationView motion_percentage={99}/>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <h2>With Social Distancing</h2>\n                            <SimulationView motion_percentage={0}/>\n                        </div>\n                    </div>\n                    <span>Inspiration: Washington Post</span><br/>\n                    <span>Code: github/@midudev</span>\n                </div>\n            </>\n        );\n    }\n}\n\nconst SimulationTrans = withTranslation()(SimulationComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Simulation() {\n  return (\n    <Suspense fallback=\"loading\">\n      <SimulationTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport './Header.scss'\n\nclass HeaderComponent extends React.Component {\n\n    changeLanguage(event, i18n) {\n        let lang = event.target.value\n        i18n.changeLanguage(lang);\n        console.log('language: ' + lang)\n    }\n    render() {\n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n                    \n                        <ul>\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <Link to=\"#\">Active Funds</Link>\n                            </li>\n                            <li>\n                                <Link to=\"#\">Volunteer</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/simulation\">Simulation</Link>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"#\">Get Help</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"\">WHO</Link>\n                                        <Link to=\"\">Ministry of Health</Link>\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"#\">Learn</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"/sd\">What is Social Distancing?</Link>\n                                        {/* <a href=\"https://www.mohfw.gov.in/pdf/SocialDistancingAdvisorybyMOHFW.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">What is Social Distancing and Janata Curfew?</a> */}\n                                        <Link to=\"/sq\">How one should practice Self Quarantine</Link>\n                                        <a href=\"https://www.mohfw.gov.in/pdf/Mask-Eng.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to wear a mask?</a>\n                                        <a href=\"https://www.mohfw.gov.in/pdf/FINAL_14_03_2020_ENg.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to get tested for covid-19?</a>\n                                        <Link to=\"/myths\">Myths</Link>\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                        <div className=\"language-box\">\n                            Language:\n                            <select onChange={(e) => this.changeLanguage(e, this.props.i18n)} defaultValue={this.props.i18n.language}>\n                                <option value=\"en\">English</option>\n                                <option value=\"in_urd\">اردو</option>\n                                <option value=\"in_hi\">हिंदी</option>\n                                <option value=\"in_knn\">ಕೆನಡಾ</option>\n                                <option value=\"in_tam\">தமிழ்</option>\n                                <option value=\"in_od\">ଓଡ଼ିଆ</option>\n                                <option value=\"in_punjabi\">ਪੰਜਾਬੀ</option>\n                            </select>\n                        </div>\n\n\n                    </div>\n                </nav>\n                \n            </header>\n            \n        )\n    }\n}\n\nconst HeaderTrans = withTranslation()(HeaderComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Header() {\n  return (\n    <Suspense fallback=\"loading\">\n      <HeaderTrans />\n    </Suspense>\n  );\n}\n","import React from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom'\n\nimport './App.scss';\n\n\nimport Home from './userpages/home/Home'\nimport SD from './userpages/social_distancing/SocialDistancing'\nimport SQ from './userpages/self_quarantine/SelfQuarantine'\nimport Myths from './userpages/myths/Myths'\nimport Simulation from './userpages/simulation/Simulation'\n\nimport Header from './views/header/Header'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Router basename='/'>\n        <Header/>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/sd\" component={SD} />\n          <Route path=\"/sq\" component={SQ} />\n          <Route path=\"/myths\" component={Myths} />\n          <Route path=\"/simulation\" component={Simulation} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    backend: {\n        loadPath: '/covid19/locales/{{lng}}/{{ns}}.json'\n    },\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}