{"version":3,"sources":["images/cover_face.svg","images/handwash.svg","images/dont_touch_face.svg","images/handrub.svg","images/face_mask.svg","images/social_distancing.svg","images/colab.svg","images/telegram.svg","images/github.svg","views/CurfewMessage.js","userpages/home/Home.js","userpages/social_distancing/SocialDistancing.js","userpages/self_quarantine/SelfQuarantine.js","userpages/myths/Myths.js","views/sim/options.js","views/sim/collisions.js","views/sim/Ball.js","views/sim/Simulation.js","userpages/simulation/Simulation.js","userpages/funds/Funds.js","userpages/volunteer/Volunteer.js","userpages/stories/Stories.js","userpages/us/Us.js","userpages/map/Cholo.js","userpages/map/MapDistrict.js","views/header/Header.js","views/footer/Footer.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["module","exports","JanataCurfewComponent","t","this","props","className","React","Component","JanataCurfewTrans","withTranslation","JanataCurfew","fallback","HomeComponent","data","CovidData","item","countries","stats","updateDate","Date","header","timestamp","console","log","toLocaleString","activePositiveCases","curedCases","deathCases","totalPositiveCases","otherCases","href","rel","target","title","src","frameBorder","allow","allowFullScreen","handwash","alt","coverFace","dTouchFace","handRub","socialDistancing","faceMask","HomeTrans","Home","SocialDistancingComponent","SocialDistancingTrans","SocialDistancing","SelfQuarantineComponent","SelfQuarantineTrans","SelfQuarantine","MythsComponent","MythsTrans","Myths","DEFAULT_FILTERS","death","stayHome","CANVAS_SIZE","height","width","DESKTOP_CANVAS_SIZE","COLORS","recovered","infected","well","STATES","STARTING_BALLS","atan2","Math","cos","sin","sqrt","calculateChangeDirection","dx","dy","angle","ax","ay","checkCollision","diameter","Ball","runState","x","y","id","state","sketch","hasMovement","vx","random","vy","timeInfected","hasCollision","survivor","filters","TICKS_TO_RECOVER","results","others","i","length","otherBall","BALL_RADIUS","color","noStroke","fill","ellipse","matchMedia","window","isDesktop","matches","Simulation","graphPoint","graphList","balls","updateGraph","rects","Object","entries","map","count","percentatge","rect","join","newGraphPoint","graphRef","current","insertAdjacentHTML","resetValues","isDesktopNewValue","innerHTML","resetRun","tick","updateCount","keys","countersRef","forEach","innerText","startBalls","Array","from","config","STATIC_PEOPLE_PERCENTATGE","createCanvas","parentRef","parent","setup","addListener","e","draw","background","ball","checkState","checkCollisions","move","render","createRef","canvasRef","motion_percentage","ref","version","xmlns","aria-labelledby","role","SimulationComponent","SimulationTrans","FundsComponent","staticState","fundsData","FData","cols","rows","rowCount","undefined","push","key","name","org","desc","region","cat","link","searchString","value","res","toLowerCase","includes","setState","type","placeholder","onChange","handleSearchInput","renderItems","FundsTrans","Funds","VolunteerComponent","volData","VData","VolunteerTrans","Volunteer","StoriesComponent","expanded","truncated","dialogDisplay","handleClose","bind","StoriesData","dialog","story","category","idx","Chip","size","variant","icon","label","LocationSearching","onClick","handleReadClick","Dialog","open","onClose","aria-describedby","maxWidth","DialogTitle","DialogContent","DialogContentText","StoriesTrans","Stories","UsComponent","handleNext","activeStep","handleBack","handleReset","step","telegram","github","steps","getSteps","colab","Stepper","orientation","index","Step","StepLabel","StepContent","getStepContent","Button","disabled","Paper","square","elevation","Typography","UsTrans","Us","Cholo","svgRef","svg","d3","refs","node","getBoundingClientRect","mapData","max","range","projection","center","translate","scale","path","self","append","attr","selectAll","topojson","districtTopoJson","objects","district_geojson","features","enter","d","districtName","properties","dtname","ceil","on","parseInt","classed","onHoverRegion","datum","plot","MapDistrictComponent","mapDataStates","maxDistrictCount","displayDistrict","stateCode","stateData","covidData","states","s","code","districts","extractData","st_code","str","toUpperCase","substr","replace","$1","disData","min","hover","state_code_to_name","MapDistrictTrans","MapDistrict","HeaderComponent","event","i18n","lang","changeLanguage","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","FormControl","margin","InputLabel","htmlFor","Select","native","language","inputProps","TextField","defaultValue","HeaderTrans","Header","FooterComponent","FooterTrans","Footer","App","basename","exact","component","SD","SQ","Boolean","location","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","interpolation","escapeValue","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3e3ebdf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover_face.8458c828.svg\";","module.exports = __webpack_public_path__ + \"static/media/handwash.2708ccaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/dont_touch_face.2f3c3d90.svg\";","module.exports = __webpack_public_path__ + \"static/media/handrub.f0a5d838.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_mask.0a2b4dab.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_distancing.f11225ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/colab.7ca9adbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.1420d9c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.01e16c11.svg\";","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nclass JanataCurfewComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"imp-message\">\n                    <h1>{t('sd.jan_curfew_message')}</h1>\n                    {<span>{t('sd.jan_curfew_submessage')}</span>}\n                </div>\n            </>\n        );\n    }\n}\n\nconst JanataCurfewTrans = withTranslation()(JanataCurfewComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function JanataCurfew() {\n  return (\n    <Suspense fallback=\"loading\">\n      <JanataCurfewTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './Home.scss'\n// import Content from './mk.md'\n\nimport coverFace from '../../images/cover_face.svg'\nimport handwash from '../../images/handwash.svg'\nimport dTouchFace from '../../images/dont_touch_face.svg'\nimport handRub from '../../images/handrub.svg'\nimport faceMask from '../../images/face_mask.svg'\nimport socialDistancing from '../../images/social_distancing.svg'\n\nimport CovidData from './covid.json'\n\nclass HomeComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n\n        let data = CovidData.item.countries[0].stats\n        let updateDate = new Date(CovidData.item.header.timestamp*1000)\n        console.log(updateDate)\n        \n        return (\n            <>\n                <div className=\"container\">\n                    <CurfewMessage/>\n                    \n                    <div className=\"stats-container\">\n                        \n                        <p className=\"update-date\">Updated at: {updateDate.toLocaleString()}</p>\n                        <div className=\"row\">\n                            <div className=\"col-md-3\">\n                                <div className=\"stats-box active\">\n                                    <span className=\"title\">Active Cases</span>\n                                    <span className=\"number\">{data.activePositiveCases}</span>\n                                </div>\n                            </div>\n                            <div className=\"col-md-3\">\n                                <div className=\"stats-box cured\">\n                                    <span className=\"title\">Cured Cases</span>\n                                    <span className=\"number\">{data.curedCases}</span>\n                                </div>\n                            </div>\n                            <div className=\"col-md-3\">\n                                <div className=\"stats-box death\">\n                                    <span className=\"title\">Deaths</span>\n                                    <span className=\"number\">{data.deathCases}</span>\n                                </div>\n                            </div>\n                            <div className=\"col-md-3\">\n                                <div className=\"stats-box others\">\n                                    <span className=\"title\">Total Cases</span>\n                                    <span className=\"number\">{data.totalPositiveCases}</span>\n                                </div>\n                            </div>\n                        </div>\n                        <p className=\"other-cases\">Other Cases: {data.otherCases}</p>\n                        <div className=\"source\"><a href=\"https://www.mohfw.gov.in/\" rel=\"noopener noreferrer\" target=\"_blank\">Ministry of Health and Family Welfare</a></div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <iframe className=\"embed-video\" title=\"Information WHO\" src={t('home.resources.who')} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                        </div>\n                        <div className=\"col-md-6 info-box\">\n                            <h2>{t('home.what_is_corona')}</h2>\n                            {t('home.what_is_corona_answer')} <code>{t('home.what_is_corona_punch')}</code>\n                            <div className=\"source\"><a href=\"https://www.who.int/news-room/q-a-detail/q-a-coronaviruses\" rel=\"noopener noreferrer\" target=\"_blank\">World Health Organization</a></div>\n                        </div>\n                    </div>\n                    <div className=\"prevent-box\">\n                        <h1>{t('home.how_to_prevent_infection')}</h1>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={handwash} alt=\"Handwash\"/>\n                                <h3>{t('home.handwash')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={coverFace} alt=\"cover your face\"/>\n                                <h3>{t('home.cover_face')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={dTouchFace} alt=\"Handwash\"/>\n                                <h3>{t('home.dont_touch_face')}</h3>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={handRub} alt=\"Handwash\"/>\n                                <h3>{t('home.handrub')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={socialDistancing} alt=\"Handwash\"/>\n                                <h3>{t('home.social_distancing')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={faceMask} alt=\"Handwash\"/>\n                                <h3>{t('home.mask')}</h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                \n                {/* <UserEngagementForm/>\n                <CityGraphics/>\n                <MarkdownContent className=\"content\" text={Content} /> */}\n            </>\n        );\n    }\n}\n\nconst HomeTrans = withTranslation()(HomeComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Home() {\n  return (\n    <Suspense fallback=\"loading\">\n      <HomeTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './SocialDistancing.scss'\n\nclass SocialDistancingComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                  <CurfewMessage/>\n                  <div className=\"row\">\n                  <div className=\"col-md-8 info-box\">\n                      <h1>{t('sd.what_is_sd')}</h1>\n                      <p>{t('sd.what_is_sd_ans')}</p>\n\n                      <p>{t('sd.what_is_sd_ans-2')}</p>\n                      <ul>\n                        <li>{t('sd.what_is_sd_ans-2-opt1')}</li>\n                        <li>{t('sd.what_is_sd_ans-2-opt2')}</li>\n                        <li>{t('sd.what_is_sd_ans-2-opt3')}</li>\n                        <li>{t('sd.what_is_sd_ans-2-opt4')}</li>\n                      </ul>\n                      <div className=\"source\"><a href=\"https://www.hopkinsmedicine.org/health/conditions-and-diseases/coronavirus/coronavirus-social-distancing-and-self-quarantine\" rel=\"noopener noreferrer\" target=\"_blank\">Johns Hopkins Medicine</a></div>\n                    </div>\n                    <div className=\"col-md-4 image-box\">\n                      <iframe className=\"social-dis-video\" title=\"Information WHO\" src=\"https://www.youtube.com/embed/53R4wbhrrLA\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                      {/* <img className=\"minor-image\" src={socialDistancing} alt=\"Handwash\"/> */}\n                    </div>\n                  </div>\n                  \n                  <div className=\"info-box extra-margin-top\">\n\n                    \n                    <h1>How does Ministry of Health, India defines it?</h1>\n                    <p>\n                      Social distancing is a non-pharmaceutical infection prevention and control intervention\n                      implemented to avoid/decrease contact between those who are infected with a disease causing\n                      pathogen and those who are not, so as to stop or slow down the rate and extent of disease\n                      transmission in a community. This eventually leads to decrease in spread, morbidity and\n                      mortality due to the disease.\n                    </p>\n                    <iframe className=\"social-dis-video\" title=\"Information WHO\" src={t('sd.resources.what_is_video')} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                  </div>\n                  \n                </div>\n            </>\n        );\n    }\n}\n\nconst SocialDistancingTrans = withTranslation()(SocialDistancingComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function SocialDistancing() {\n  return (\n    <Suspense fallback=\"loading\">\n      <SocialDistancingTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\n//import './SelfQuarantine.scss'\n\nclass SelfQuarantineComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                  <CurfewMessage/>\n                  <div className=\"row\">\n                  <div className=\"col-md-12 info-box\">\n                      <h1>{t('sq.what_is_sq')}</h1>\n                      <p>{t('sq.what_is_sq_ans')}</p>\n\n                      <p>{t('sq.what_is_sq_ans-2')}</p>\n\n                      <p>{t('sq.involves')}</p>\n                      <ul>\n                        <li>{t('sq.involves-1')}</li>\n                        <li>{t('sq.involves-2')}</li>\n                        <li>{t('sq.involves-3')}</li>\n                        <li>{t('sq.involves-4')}</li>\n                        <li>{t('sq.involves-5')}</li>\n                      </ul>\n                      <div className=\"source\"><a href=\"https://www.hopkinsmedicine.org/health/conditions-and-diseases/coronavirus/coronavirus-social-distancing-and-self-quarantine\" rel=\"noopener noreferrer\" target=\"_blank\">Johns Hopkins Medicine</a></div>\n                    </div>\n                  </div>\n                  \n                  {/* <div className=\"info-box extra-margin-top\">\n\n                    \n                    <h1>How does Ministry of Health, India defines it?</h1>\n                    <p>\n                      Social distancing is a non-pharmaceutical infection prevention and control intervention\n                      implemented to avoid/decrease contact between those who are infected with a disease causing\n                      pathogen and those who are not, so as to stop or slow down the rate and extent of disease\n                      transmission in a community. This eventually leads to decrease in spread, morbidity and\n                      mortality due to the disease.\n                    </p>\n                    <iframe className=\"social-dis-video\" title=\"Information WHO\" src={t('sd.resources.what_is_video')} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                  </div> */}\n\n                  <div className=\"row\">\n                    <div className=\"col-md-4\"></div>\n                    <div className=\"col-md-8\">\n                        \n                    </div>\n                  </div>\n                  \n                </div>\n            </>\n        );\n    }\n}\n\nconst SelfQuarantineTrans = withTranslation()(SelfQuarantineComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function SelfQuarantine() {\n  return (\n    <Suspense fallback=\"loading\">\n      <SelfQuarantineTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './Myths.scss'\n\nclass MythsComponent extends React.Component {\n\n    render() {\n        //const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                    <CurfewMessage/>\n                    <div className=\"row myths\">\n                        <div className=\"col-md-6 info-box\">\n                            <h2>Cold weather and snow CANNOT kill the CoronaVirus</h2>\n                            <h2>Hand dryers are NOT effective in killing the CoronaVirus.</h2>\n                        </div>\n                        <div className=\"col-md-6 info-box\">\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nconst MythsTrans = withTranslation()(MythsComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Myths() {\n  return (\n    <Suspense fallback=\"loading\">\n      <MythsTrans />\n    </Suspense>\n  );\n}\n","export const DEFAULT_FILTERS = {\n  death: true,\n  stayHome: true\n}\n\nexport const CANVAS_SIZE = {\n  height: 880,\n  width: 360\n}\n\nexport const DESKTOP_CANVAS_SIZE = {\n  height: 550,\n  width: 430\n}\n\nexport const BALL_RADIUS = 5\nexport const COLORS = {\n  death: '#c50000',\n  recovered: '#D88DBC',\n  infected: '#5ABA4A',\n  well: '#63C8F2'\n}\n\nexport const STATES = {\n  infected: 'infected',\n  well: 'well',\n  recovered: 'recovered',\n  death: 'death'\n}\n\nexport const COUNTERS = {\n  ...STATES,\n  'max-concurrent-infected': 'max-concurrent-infected'\n}\n\nexport const STARTING_BALLS = {\n  [STATES.infected]: 1,\n  [STATES.well]: 199,\n  [STATES.recovered]: 0,\n  [STATES.death]: 0,\n  'max-concurrent-infected': 0\n}\n\nexport const MORTALITY_PERCENTATGE = 5\nexport const SPEED = 1\nexport const TOTAL_TICKS = 1600\nexport const TICKS_TO_RECOVER = 500\n//export const STATIC_PEOPLE_PERCENTATGE = 90","const { atan2, cos, sin, sqrt } = Math\n\nexport const calculateChangeDirection = ({ dx, dy }) => {\n  const angle = atan2(dy, dx)\n  const ax = cos(angle)\n  const ay = sin(angle)\n  return { ax, ay }\n}\n\nexport const checkCollision = ({ dx, dy, diameter }) => {\n  const distance = sqrt(dx * dx + dy * dy)\n  return distance < diameter\n}","import {\n  BALL_RADIUS,\n  COLORS,\n  MORTALITY_PERCENTATGE,\n  TICKS_TO_RECOVER,\n  SPEED,\n  STATES\n} from './options.js'\nimport { checkCollision, calculateChangeDirection } from './collisions.js'\n\nconst diameter = BALL_RADIUS * 2\n\nexport class Ball {\n  constructor ({ x, y, id, state, sketch, hasMovement }, runState) {\n    this.x = x\n    this.y = y\n    this.vx = sketch.random(-1, 1) * SPEED\n    this.vy = sketch.random(-1, 1) * SPEED\n    this.sketch = sketch\n    this.id = id\n    this.state = state\n    this.timeInfected = 0\n    this.hasMovement = hasMovement\n    this.hasCollision = true\n    this.survivor = false\n    this.runState = runState\n  }\n\n  checkState () {\n    if (this.state === STATES.infected) {\n      if (this.runState.filters.death && !this.survivor && this.timeInfected >= TICKS_TO_RECOVER / 2) {\n        this.survivor = this.sketch.random(100) >= MORTALITY_PERCENTATGE\n        if (!this.survivor) {\n          this.hasMovement = false\n          this.state = STATES.death\n          this.runState.results[STATES.infected]--\n          this.runState.results[STATES.death]++\n          return\n        }\n      }\n\n      if (this.timeInfected >= TICKS_TO_RECOVER) {\n        this.state = STATES.recovered\n        this.runState.results[STATES.infected]--\n        this.runState.results[STATES.recovered]++\n      } else {\n        this.timeInfected++\n      }\n    }\n  }\n\n  checkCollisions ({ others }) {\n    if (this.state === STATES.death) return\n\n    for (let i = this.id + 1; i < others.length; i++) {\n      const otherBall = others[i]\n      const { state, x, y } = otherBall\n      if (state === STATES.death) continue\n\n      const dx = x - this.x\n      const dy = y - this.y\n\n      if (checkCollision({ dx, dy, diameter: BALL_RADIUS * 2 })) {\n        const { ax, ay } = calculateChangeDirection({ dx, dy })\n\n        this.vx -= ax\n        this.vy -= ay\n        otherBall.vx = ax\n        otherBall.vy = ay\n\n        // both has same state, so nothing to do\n        if (this.state === state) return\n        // if any is recovered, then nothing happens\n        if (this.state === STATES.recovered || state === STATES.recovered) return\n        // then, if some is infected, then we make both infected\n        if (this.state === STATES.infected || state === STATES.infected) {\n          this.state = otherBall.state = STATES.infected\n          this.runState.results[STATES.infected]++\n          this.runState.results[STATES.well]--\n        }\n      }\n    }\n  }\n\n  move () {\n    if (!this.hasMovement) return\n\n    this.x += this.vx\n    this.y += this.vy\n\n    // check horizontal walls\n    if (\n      (this.x + BALL_RADIUS > this.sketch.width && this.vx > 0) ||\n      (this.x - BALL_RADIUS < 0 && this.vx < 0)) {\n      this.vx *= -1\n    }\n\n    // check vertical walls\n    if (\n      (this.y + BALL_RADIUS > this.sketch.height && this.vy > 0) ||\n      (this.y - BALL_RADIUS < 0 && this.vy < 0)) {\n      this.vy *= -1\n    }\n  }\n\n  render () {\n    const color = COLORS[this.state]\n    this.sketch.noStroke()\n    this.sketch.fill(color)\n    this.sketch.ellipse(this.x, this.y, diameter, diameter)\n  }\n}","import React from 'react';\nimport Sketch from \"react-p5\";\n\nimport {\n  BALL_RADIUS,\n  CANVAS_SIZE,\n  DESKTOP_CANVAS_SIZE,\n  STARTING_BALLS,\n  STATES,\n  COLORS,\n  DEFAULT_FILTERS,\n  TOTAL_TICKS\n} from './options.js'\n\nimport { Ball } from './Ball.js'\nimport './Simulation.scss'\n\nconst matchMedia = window.matchMedia('(min-width: 800px)')\n\nlet isDesktop = matchMedia.matches\n\nclass Simulation extends React.Component {\n\n    graphPoint = 0\n    graphList = ''\n    balls = []\n\n    constructor(props) {\n        super(props)\n\n        this.countersRef = {\n            infected: React.createRef(),\n            well: React.createRef(),\n            recovered: React.createRef(),\n            death: React.createRef()\n        }\n\n        this.graphRef = React.createRef()\n        this.canvasRef = React.createRef()\n\n        this.runState = { \n            filters: { ...DEFAULT_FILTERS },\n            results: { ...STARTING_BALLS },\n            config: {\n                STATIC_PEOPLE_PERCENTATGE: props.motion_percentage\n            },\n            tick: 0\n        }\n    }\n\n    updateGraph = () => {\n        let y = 0\n        const rects = Object.entries(this.runState.results).map(([state, count]) => {\n            const color = COLORS[state]\n            if (count > 0) {\n                const percentatge = count / 200 * 100\n                const rect = `<rect height=\"${percentatge}\" y=\"${y}\" width=\"1\" fill=\"${color}\"></rect>`\n                y += percentatge\n                return rect\n            }\n            return ''\n        }).join('')\n\n        const newGraphPoint = `<g transform=\"translate(${this.graphPoint},0)\">${rects}</g>`\n        this.graphPoint++\n\n\n        this.graphRef.current.insertAdjacentHTML('beforeend', newGraphPoint)\n    }\n\n    resetValues = (isDesktopNewValue = isDesktop) => {\n        this.graphRef.current.innerHTML = ''\n        //replayElement.style.display = 'none'\n        this.graphPoint = 0\n        isDesktop = isDesktopNewValue\n        this.resetRun()\n    }\n\n    resetRun = () => {\n        this.runState.results = { ...STARTING_BALLS }\n        this.runState.tick = 0\n    }\n\n    updateCount = (sketch) => {\n        if (this.runState.tick < TOTAL_TICKS) {\n            // calculate max concurrent infected\n            if (this.runState.results[STATES.infected] > this.runState.results['max-concurrent-infected']) {\n                this.runState.results['max-concurrent-infected']++\n            }\n\n            Object.keys(this.countersRef).forEach((state) => {\n                this.countersRef[state].current.innerText = this.runState.results[state]\n            })\n\n            if (isDesktop) {\n                this.runState.tick % 2 === 0 && this.updateGraph()\n            } else {\n                this.runState.tick % 4 === 0 && this.updateGraph()\n            }\n        }\n\n        if (this.runState.tick === TOTAL_TICKS) {\n            this.startBalls(sketch)\n            this.resetValues()\n            //replayElement.style.display = 'flex'\n        } else {\n            this.runState.tick++\n        }\n    }\n\n    startBalls = (sketch) => {\n        let id = 0\n        this.balls = []\n        Object.keys(STARTING_BALLS).forEach(state => {\n            Array.from({ length: STARTING_BALLS[state] }, () => {\n                const hasMovement = this.runState.filters.stayHome ? sketch.random(0, 100) < this.runState.config.STATIC_PEOPLE_PERCENTATGE || state === STATES.infected : true\n\n                this.balls[id] = new Ball({\n                    id,\n                    sketch,\n                    state,\n                    hasMovement,\n                    x: sketch.random(BALL_RADIUS, sketch.width - BALL_RADIUS),\n                    y: sketch.random(BALL_RADIUS, sketch.height - BALL_RADIUS)\n                }, this.runState)\n                id++\n\n                return null\n            })\n\n\n            return null\n        })\n    }\n\n    createCanvas = (sketch, parentRef) => {\n        const { height, width } = isDesktop ? DESKTOP_CANVAS_SIZE : CANVAS_SIZE\n        sketch.createCanvas(height, width).parent(parentRef)\n    }\n\n    setup = (sketch, parentRef) => {\n        this.createCanvas(sketch, parentRef)\n        this.startBalls(sketch)\n\n        matchMedia.addListener(e => {\n            isDesktop = e.matches\n            this.createCanvas(sketch, parentRef)\n            this.startBalls(sketch)\n            this.resetValues()\n        })\n\n        /* replayButton.onclick = () => {\n            this.startBalls(sketch)\n            resetValues()\n        }\n\n        deathFilter.onclick = () => {\n            this.runState.filters.death = !this.runState.filters.death\n            document.getElementById('death-count').classList.toggle('show', this.runState.filters.death)\n            this.startBalls(sketch)\n            resetValues()\n        }\n\n        stayHomeFilter.onchange = () => {\n            this.runState.filters.stayHome = !this.runState.filters.stayHome\n            this.startBalls(sketch)\n            resetValues()\n        } */\n    }\n\n    draw = (sketch) => {\n        sketch.background('white')\n        this.balls.forEach(ball => {\n            ball.checkState()\n            ball.checkCollisions({ others: this.balls })\n            ball.move()\n            ball.render()\n        })\n        this.updateCount(sketch)\n    }\n\n\n    render() {\n        return (\n            <div className=\"viz-box\">\n                <div className=\"count\">\n                    <div className=\"healthy\">Healthy<br /><span ref={this.countersRef.well}></span></div>\n                    <div className=\"sick\">Sick<br /><span ref={this.countersRef.infected}>0</span></div>\n                    <div className=\"recovered\">Recovered<br /><span ref={this.countersRef.recovered}>0</span></div>\n                    <div className=\"deaths\">Deaths<br /><span ref={this.countersRef.death}>0</span></div>\n                </div>\n                <svg ref={this.graphRef} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" height=\"100\" width=\"100%\" aria-labelledby=\"Graph of virus spread\" role=\"img\">\n                    <title>Graph of virus spread</title>\n                </svg>\n                <Sketch ref={this.canvasRef} setup={this.setup} draw={this.draw} />\n            </div>\n        );\n    }\n}\n\n\nexport default Simulation\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\nimport SimulationView from '../../views/sim/Simulation'\n\nimport './Simulation.scss'\n\nclass SimulationComponent extends React.Component {\n\n    render() {\n        //const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                    <CurfewMessage/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 right-border\">\n                            <h2>Without Social Distancing</h2>\n                            <SimulationView motion_percentage={99}/>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <h2>With Social Distancing</h2>\n                            <SimulationView motion_percentage={10}/>\n                        </div>\n                    </div>\n                    <span>Inspiration: <a href=\"https://www.washingtonpost.com/graphics/2020/world/corona-simulator/?fbclid=IwAR1oRYsEvnJgLsvfkAz5QVz1wsA7NBeTWPvPCuW_RLiS6Wj_SWU2WLHHzR4&utm_campaign=wp_main&utm_medium=social&utm_source=facebook\" target=\"_blank\" rel=\"noopener noreferrer\">Washington Post </a></span><br/>\n                    <span>Code: github/@midudev</span>\n                </div>\n            </>\n        );\n    }\n}\n\nconst SimulationTrans = withTranslation()(SimulationComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Simulation() {\n  return (\n    <Suspense fallback=\"loading\">\n      <SimulationTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './Funds.scss'\n\nimport FData from './funds.json'\n\n// import Content from './mk.md'\n\n/* import coverFace from '../../images/cover_face.svg'\nimport handwash from '../../images/handwash.svg'\nimport dTouchFace from '../../images/dont_touch_face.svg'\nimport handRub from '../../images/handrub.svg'\nimport faceMask from '../../images/face_mask.svg'\nimport socialDistancing from '../../images/social_distancing.svg' */\n\nclass FundsComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.staticState = {\n            fundsData: FData\n        }\n        this.state = {\n            fundsData: FData\n        }\n    }\n\n    renderItems() {\n        let cols = []\n        let rows = []\n        let rowCount = 1\n        for(let i in this.state.fundsData) {\n            let item = this.state.fundsData[i]\n            if(item === undefined) {\n                continue\n            }\n            cols.push(\n                <div className=\"col-md-4 item-box\" key={i}>\n                    <div className=\"text-item\">\n                        <h2>{item.name}</h2>\n                        <p>by {item.org}</p>\n                        <p>{item.desc}</p>\n                        <span className=\"region-name\">{item.region}</span>\n                        <span className=\"cat-name\">{item.cat}</span>\n                    </div>\n                    <div className=\"link-item\">\n                        <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\"><button>Donate/Contribute Now</button></a>\n                    </div>\n                </div>\n            )\n            if(cols.length === 3) {\n                rows.push(\n                    <div className=\"row row-margin-top\" key={rowCount}>\n                        {cols}\n                    </div>\n                )\n                cols = []\n                rowCount++\n            }\n        }\n        if(cols.length > 0) {\n            rows.push(\n                <div className=\"row extra-margin-top\" key={rowCount}>\n                    {cols}\n                </div>\n            )\n        }\n        return rows\n    }\n\n    handleSearchInput(e) {\n        let searchString = e.target.value\n        let res = []\n        this.staticState.fundsData.forEach(i => {\n            if( i.name.toLowerCase().includes(searchString.toLowerCase()) || \n                i.desc.toLowerCase().includes(searchString.toLowerCase()) || \n                i.cat.toLowerCase().includes(searchString.toLowerCase()) || \n                i.region.toLowerCase().includes(searchString.toLowerCase())\n            ) {\n                res.push(i)\n            }\n        })\n\n        this.setState({\n            fundsData: res\n        })\n    }\n\n    render() {\n        //const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container funds\">\n                    <CurfewMessage/>\n                    <h1>Active Funds</h1>\n                    <input className=\"form-control form-control-lg\" type=\"text\" placeholder=\"Search\" onChange={(e) => this.handleSearchInput(e)}/>\n                    {this.renderItems()}\n                </div>\n                \n                \n                {/* <UserEngagementForm/>\n                <CityGraphics/>\n                <MarkdownContent className=\"content\" text={Content} /> */}\n            </>\n        );\n    }\n}\n\nconst FundsTrans = withTranslation()(FundsComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Funds() {\n  return (\n    <Suspense fallback=\"loading\">\n      <FundsTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './Volunteer.scss'\n\nimport VData from './volunteer.json'\n\n// import Content from './mk.md'\n\n/* import coverFace from '../../images/cover_face.svg'\nimport handwash from '../../images/handwash.svg'\nimport dTouchFace from '../../images/dont_touch_face.svg'\nimport handRub from '../../images/handrub.svg'\nimport faceMask from '../../images/face_mask.svg'\nimport socialDistancing from '../../images/social_distancing.svg' */\n\nclass VolunteerComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.staticState = {\n            volData: VData\n        }\n        this.state = {\n            volData: VData\n        }\n    }\n\n    renderItems() {\n        let cols = []\n        let rows = []\n        let rowCount = 1\n        for(let i in this.state.volData) {\n            let item = this.state.volData[i]\n            if(item === undefined) {\n                continue\n            }\n            cols.push(\n                <div className=\"col-md-4 item-box\" key={i}>\n                    <div className=\"text-item\">\n                        <h2>{item.name}</h2>\n                        <p>by {item.org}</p>\n                        <p>{item.desc}</p>\n                        <span className=\"region-name\">{item.region}</span>\n                        <span className=\"cat-name\">{item.cat}</span>\n                    </div>\n                    <div className=\"link-item\">\n                        <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\"><button>Contribute Now</button></a>\n                    </div>\n                </div>\n            )\n            if(cols.length === 3) {\n                rows.push(\n                    <div className=\"row row-margin-top\" key={rowCount}>\n                        {cols}\n                    </div>\n                )\n                cols = []\n                rowCount++\n            }\n        }\n        if(cols.length > 0) {\n            rows.push(\n                <div className=\"row extra-margin-top\" key={rowCount}>\n                    {cols}\n                </div>\n            )\n        }\n        return rows\n    }\n\n    handleSearchInput(e) {\n        let searchString = e.target.value\n        let res = []\n        this.staticState.volData.forEach(i => {\n            if( i.name.toLowerCase().includes(searchString.toLowerCase()) || \n                i.desc.toLowerCase().includes(searchString.toLowerCase()) || \n                i.cat.toLowerCase().includes(searchString.toLowerCase()) || \n                i.region.toLowerCase().includes(searchString.toLowerCase())\n            ) {\n                res.push(i)\n            }\n        })\n\n        this.setState({\n            volData: res\n        })\n    }\n\n    render() {\n        //const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container vol\">\n                    <CurfewMessage/>\n                    <h1>Active Volunteering Opportunities</h1>\n                    <input className=\"form-control form-control-lg\" type=\"text\" placeholder=\"Search\" onChange={(e) => this.handleSearchInput(e)}/>\n                    {this.renderItems()}\n                </div>\n                \n                \n                {/* <UserEngagementForm/>\n                <CityGraphics/>\n                <MarkdownContent className=\"content\" text={Content} /> */}\n            </>\n        );\n    }\n}\n\nconst VolunteerTrans = withTranslation()(VolunteerComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Volunteer() {\n  return (\n    <Suspense fallback=\"loading\">\n      <VolunteerTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Chip } from '@material-ui/core';\nimport { LocationSearching } from '@material-ui/icons';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './Stories.scss'\n\nimport StoriesData from './stories.json'\n\nclass StoriesComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            expanded: false,\n            truncated: true,\n            dialogDisplay: false\n        };\n\n        this.handleClose = this.handleClose.bind(this);\n\n        this.staticState = {\n            StoriesData: StoriesData,\n            dialog: {\n                title: '',\n                story: ''\n            }\n        }\n        this.state = {\n            StoriesData: StoriesData\n        }\n    }\n\n    renderItems() {\n        let cols = []\n        let rows = []\n        let rowCount = 1\n        for(let i in this.state.StoriesData) {\n            let item = this.state.StoriesData[i]\n            if(item === undefined) {\n                continue\n            }\n\n            let cat = []\n            item.category.forEach((item, idx) => {\n                cat.push(\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        icon={<CenterFocusStrongIcon color=\"primary\"/>}\n                        label={item}\n                        key={idx}\n                        color=\"secondary\"\n                    />\n                )\n            })\n            cols.push(\n                <div className=\"col-md-6 stories-item\" key={i}>\n                    <h4>{item.title}</h4>\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        icon={<LocationSearching color=\"primary\"/>}\n                        label={item.region}\n                    />\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        icon={<PersonIcon color=\"primary\"/>}\n                        label={item.name === '' ? 'Anonymous' : item.name}\n                        color=\"primary\"\n                    />\n                    {cat}\n                    <div className=\"message\">\n                        {item.story}\n                    </div>\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={() => this.handleReadClick(i)}>Open in a Dialog</button>\n                </div>\n            )\n            if(cols.length === 3) {\n                rows.push(\n                    <div className=\"row stories-section\" key={rowCount}>\n                        {cols}\n                    </div>\n                )\n                cols = []\n                rowCount++\n            }\n        }\n        if(cols.length > 0) {\n            rows.push(\n                <div className=\"row stories-section\" key={rowCount}>\n                    {cols}\n                </div>\n            )\n        }\n        return rows\n    }\n\n    handleSearchInput(e) {\n        let searchString = e.target.value\n        let res = []\n        this.staticState.StoriesData.forEach(i => {\n            if( i.title.toLowerCase().includes(searchString.toLowerCase()) || \n                i.region.toLowerCase().includes(searchString.toLowerCase())\n            ) {\n                res.push(i)\n            }\n        })\n\n        this.setState({\n            StoriesData: res\n        })\n    }\n\n    handleReadClick(i) {\n        this.staticState.dialog = {\n            title: this.staticState.StoriesData[i].title,\n            story: this.staticState.StoriesData[i].story\n        }\n        \n        this.setState({\n            dialogDisplay: true\n        })\n    }\n\n    handleClose() {\n        this.setState({\n            dialogDisplay: false\n        })\n    }\n\n    render() {\n        //const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container stories\">\n                    <CurfewMessage/>\n                    <h1>Citizen Stories</h1>\n                    <h5>If you have an experience or story to share which can help someone, submit it here: <a href=\"http://stories.form.cov.social\" target=\"_blank\">stories.form.cov.social</a></h5>\n                    <input className=\"form-control form-control-lg\" type=\"text\" placeholder=\"Search\" onChange={(e) => this.handleSearchInput(e)}/>\n                    {this.renderItems()}\n                    <Dialog\n                        open={this.state.dialogDisplay || false}\n                        onClose={this.handleClose}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        maxWidth='md'\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">{this.staticState.dialog.title || ''}</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            {this.staticState.dialog.story}\n                        </DialogContentText>\n                        </DialogContent>\n                    </Dialog>\n                </div>\n            </>\n        );\n    }\n}\n\nconst StoriesTrans = withTranslation()(StoriesComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Stories() {\n  return (\n    <Suspense fallback=\"loading\">\n      <StoriesTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\n// import CurfewMessage from '../../views/CurfewMessage'\n\nimport './Us.scss'\n\nimport colab from '../../images/colab.svg'\nimport telegram from '../../images/telegram.svg'\nimport github from '../../images/github.svg'\n\n// import VData from './Us.json'\n\n// import Content from './mk.md'\n\n/* import coverFace from '../../images/cover_face.svg'\nimport handwash from '../../images/handwash.svg'\nimport dTouchFace from '../../images/dont_touch_face.svg'\nimport handRub from '../../images/handrub.svg'\nimport faceMask from '../../images/face_mask.svg'\nimport socialDistancing from '../../images/social_distancing.svg' */\n\nclass UsComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeStep: 0\n        }\n    }\n\n    getSteps() {\n        return ['Reaching out to us', 'Submitting an Idea or contributing to an existing one', 'Things you can contribute to'];\n    }\n\n    getStepContent(step) {\n        switch (step) {\n            case 0:\n            return  <div className=\"step-box\">\n                        <h3>You can either reach out to us on Telegram or through Github.</h3>\n                        <a href=\"https://t.me/covid_init\" target=\"_blank\"><img className=\"connect-icon\" src={telegram}/></a>\n                        <a href=\"https://github.com/upperwal/covid19\" target=\"_blank\"><img className=\"connect-icon\" src={github}/></a>\n                    </div>;\n            case 1:\n            return <div className=\"step-box\">\n                        <h3>You can submit a new idea by opening an issue on Github or start collaborating with someone by commenting on an existing one.</h3>\n                        <a href=\"https://github.com/upperwal/covid19/issues\" target=\"_blank\">Github Issues</a>\n                    </div>\n            case 2:\n            return <div className=\"step-box\">\n                        <h3>\n                            You can help us:\n                        </h3>\n                        <ul>\n                            <li>Add new ideas to the platform.</li>\n                            <li>Translate content in an Indian language.</li>\n                            <li>Write new content.</li>\n                            <li>Aggregate and preprocess data.</li>\n                            <li>Build amazing visualisations.</li>\n                            <li>Build interactive demos for educational purpose.</li>\n                            <li>Collect citizen stories.</li>\n                        </ul>\n                    </div>;\n            default:\n            return 'Unknown step';\n        }\n    }\n\n    handleNext = () => {\n        this.setState({\n            activeStep: this.state.activeStep + 1\n        })\n    };\n\n    handleBack = () => {\n        this.setState({\n            activeStep: this.state.activeStep - 1\n        })\n    };\n\n    handleReset = () => {\n        this.setState({\n            activeStep: 0\n        })\n    };\n\n    render() {\n        let steps = this.getSteps()\n        return (\n            <>\n                <div className=\"container us\">\n                    <h1>We are super excited to get you involved.</h1>\n                    <div className=\"row\">\n                        <div className=\"col-md-5\">\n                            <img src={colab}/>\n                        </div>\n                        <div className=\"col-md-7\">\n                            <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\n                                {steps.map((label, index) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                    <StepContent>\n                                    {this.getStepContent(index)}\n                                    <div>\n                                        <div>\n                                        <Button\n                                            disabled={this.state.activeStep === 0}\n                                            onClick={this.handleBack}\n                                            className=\"\"\n                                        >\n                                            Back\n                                        </Button>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={this.handleNext}\n                                            className=\"step-button\"\n                                        >\n                                            {this.state.activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                        </div>\n                                    </div>\n                                    </StepContent>\n                                </Step>\n                                ))}\n                            </Stepper>\n                            {this.state.activeStep === steps.length && (\n                                <Paper square elevation={0} className=\"\">\n                                <Typography>Looking forward to your contribution :)</Typography>\n                                <Button onClick={this.handleReset} className=\"\">\n                                    Reset\n                                </Button>\n                                </Paper>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                \n                \n                {/* <UserEngagementForm/>\n                <CityGraphics/>\n                <MarkdownContent className=\"content\" text={Content} /> */}\n            </>\n        );\n    }\n}\n\nconst UsTrans = withTranslation()(UsComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Us() {\n  return (\n    <Suspense fallback=\"loading\">\n      <UsTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\n\nimport './Cholo.scss'\n\nimport districtTopoJson from './district_topojson.json'\n\nclass Cholo extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.svgRef = React.createRef();\n    }\n\n    plot() {\n        \n        let svg = d3.select(this.refs.svgRef)\n\n        let node = svg.node().getBoundingClientRect()\n\n        let mapData = this.props.mapData;\n        let max = this.props.range.max\n        //console.log(mapData)\n\n        var projection = d3.geoMercator()\n            .center([81.966182,22.115736])\n            .translate([node.width/2, node.height/2])\n            .scale(900);\n    \n        var path = d3.geoPath().projection(projection);\n\n        var tooltip = d3.select('body').append('div')\n            .attr('class', 'hidden tooltip');\n\n        let self = this\n\n        svg.append('g')\n            .attr('class', 'district')\n            .selectAll('path')\n            .data(topojson.feature(districtTopoJson, districtTopoJson.objects.district_geojson).features)\n            .enter()\n            .append('path')\n            .attr('class', function(d) {\n                let districtName = d.properties.dtname.toLowerCase()\n                if(!(districtName in mapData)) {\n                    return \"r0-9\"\n                }\n                let classNum = Math.ceil(mapData[districtName]/max*8)\n                return \"r\" + classNum + \"-9\";  \n                //console.log(classNum + ': ' + districtName, mapData[districtName], max)\n                //return 'gray-fill'\n                //return \"r\" + '5' + \"-9\";  \n            })\n            .attr('d', path)\n            .on('mousemove', function(d) {\n                let districtName = d.properties.dtname.toLowerCase()\n                var mouse = d3.mouse(svg.node()).map(function(d) {\n                    return parseInt(d);\n                });\n                d3.select(this).classed('highlighted-gray', true)\n                /* tooltip.classed('hidden', false)\n                    .attr('style', 'left:' + (mouse[0]) +\n                            'px; top:' + (mouse[1]+110) + 'px')\n                    .html(districtName + ': ' + (mapData[districtName] || 0)); */\n                self.props.onHoverRegion(d)\n            })\n            .on('mouseout', function() {\n                /* tooltip.classed('hidden', true); */\n                d3.select(this).classed('highlighted-gray', false)\n            })\n        \n        //console.log(topojson.mesh(districtTopoJson, districtTopoJson.objects.district_geojson).coordinates)\n        /* svg.append('g')\n            .attr('class', 'bo')\n            .selectAll('path')\n            .data([10,20,30])\n            .attr('stroke', '#000')\n            .attr('fill', 'none')\n            .attr('stroke-width', 2)\n            .attr(\n                'd',\n                path(topojson.mesh(districtTopoJson, districtTopoJson.objects.district_geojson))\n            ); */\n        \n        svg.append(\"path\")\n            .datum(topojson.mesh(districtTopoJson, districtTopoJson.objects.district_geojson))\n            .attr(\"class\", \"border\")\n            .attr(\"d\", path);\n    }\n\n    componentDidMount() {\n        this.plot()\n    }\n\n    render() {\n        // const { t } = this.props;\n\n        let center = [24.115736, 77.979682]\n        \n        return (\n            <>\n                <svg ref=\"svgRef\" width=\"100%\" height=\"600\"></svg>\n            </>\n        );\n    }\n}\nexport default Cholo\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ChoroplethMap from './Cholo';\n\nimport './MapDistrict.scss'\n\nimport covidData from './covid.json'\nimport state_code_to_name from './state_code_to_name.json'\n\nclass MapDistrictComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            mapData: {},\n            mapDataStates: {},\n            maxDistrictCount: 0,\n            displayDistrict: {\n                name: 'South Delhi',\n                stateCode: 'IN-DL'\n            }\n        }\n    }\n\n    extractData() {\n        let res = {}\n        let stateData = {}\n        let max = 0\n        covidData.item.countries[0].states.forEach(function(s) {\n            stateData[s.code] = s.stats\n            console.log(s)\n            if(s.districts === undefined) {\n                return\n            }\n            s.districts.forEach((d) => {\n                res[d.code] = d.stats.activePositiveCases\n                if(max < d.stats.activePositiveCases) {\n                    max = d.stats.activePositiveCases\n                }\n            })\n        })\n        this.setState({\n            mapData: res,\n            mapDataStates: stateData,\n            maxDistrictCount: max\n        })\n    }\n\n    componentWillMount() {\n        this.extractData()\n    }\n\n    hover(d) {\n        this.setState({\n            displayDistrict: {\n                name: d.properties.dtname,\n                stateCode: d.properties.st_code\n            }\n        })\n    }\n\n    toCamelCase(str) {\n        str = str.toLowerCase()\n        str = str[0].toUpperCase() + str.substr(1)\n        return str.replace(/ (.)/, function($1) {return ' ' + $1.toUpperCase()})\n            \n    }\n\n    render() {\n        // const { t } = this.props;\n\n        let center = [24.115736, 77.979682]\n\n        let districtName = this.state.displayDistrict.name || '-'\n        \n        let stateCode = this.state.displayDistrict.stateCode\n        let disData = this.state.mapDataStates[stateCode] || {}\n\n        console.log(stateCode)\n        \n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <h3>Map</h3>\n                            <ChoroplethMap \n                                mapData={this.state.mapData}\n                                range={{min: 0, max: this.state.maxDistrictCount}}\n                                onHoverRegion={(d) => this.hover(d)}\n                            />\n                        </div>\n                        <div className=\"col-md-6\">\n\n                            <div className=\"info-container-box\">\n                                <div className=\"info-container-box-title\">District</div>\n                                <h2>{districtName}</h2>\n                                <div className=\"row\">\n                                    <div className=\"col-md-3\">\n                                        <div className=\"stats-box active\">\n                                            <span className=\"title\">Active</span>\n                                            <span className=\"number\">{this.state.mapData[districtName.toLowerCase()] || '-'}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <div className=\"stats-box cured\">\n                                            <span className=\"title\">Cured</span>\n                                            <span className=\"number\">-</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <div className=\"stats-box death\">\n                                            <span className=\"title\">Deaths</span>\n                                            <span className=\"number\">-</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <div className=\"stats-box others\">\n                                            <span className=\"title\">Total</span>\n                                            <span className=\"number\">-</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div className=\"info-container-box\">\n                                <div className=\"info-container-box-title\">State</div>\n                                <h2>{state_code_to_name[stateCode]}</h2>\n                                <div className=\"row\">\n                                    <div className=\"col-md-3\">\n                                        <div className=\"stats-box active\">\n                                            <span className=\"title\">Active</span>\n                                            <span className=\"number\">{disData.activePositiveCases || '-'}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <div className=\"stats-box cured\">\n                                            <span className=\"title\">Cured</span>\n                                            <span className=\"number\">{disData.curedCases || '-'}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <div className=\"stats-box death\">\n                                            <span className=\"title\">Deaths</span>\n                                            <span className=\"number\">{disData.deathCases || '-'}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <div className=\"stats-box others\">\n                                            <span className=\"title\">Total</span>\n                                            <span className=\"number\">{disData.totalPositiveCases || '-'}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nconst MapDistrictTrans = withTranslation()(MapDistrictComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function MapDistrict() {\n  return (\n    <Suspense fallback=\"loading\">\n      <MapDistrictTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport './Header.scss'\n\nclass HeaderComponent extends React.Component {\n\n    changeLanguage(event, i18n) {\n        let lang = event.target.value\n        i18n.changeLanguage(lang);\n        console.log('language: ' + lang)\n    }\n    render() {\n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n                    \n                        <ul>\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"#\">Learn</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"/sd\">What is Social Distancing?</Link>\n                                        {/* <a href=\"https://www.mohfw.gov.in/pdf/SocialDistancingAdvisorybyMOHFW.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">What is Social Distancing and Janata Curfew?</a> */}\n                                        <Link to=\"/sq\">How one should practice Self Quarantine</Link>\n                                        <a href=\"https://www.mohfw.gov.in/pdf/Mask-Eng.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to wear a mask?</a>\n                                        <a href=\"https://www.mohfw.gov.in/pdf/FINAL_14_03_2020_ENg.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to get tested for covid-19?</a>\n                                        {/* <Link to=\"/myths\">Myths</Link> */}\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"#\">Get Help</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"\">WHO</Link>\n                                        <Link to=\"\">Ministry of Health</Link>\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"/us\">Contribute</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"/us\">Get involved with us</Link>\n                                        <Link to=\"/funds\">Active Funds</Link>\n                                        <Link to=\"/volunteer\">Volunteer</Link>\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <Link to=\"/stories\">Citizen Stories</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/simulation\">Simulation</Link>\n                            </li>\n                            \n                            \n                            \n                            \n                        </ul>\n                        <div>\n                            {/* Language:\n                            <select onChange={(e) => this.changeLanguage(e, this.props.i18n)} defaultValue={this.props.i18n.language}>\n                                <option value=\"en\">English</option>\n                                <option value=\"in_urd\">اردو</option>\n                                <option value=\"in_hi\">हिंदी</option>\n                                <option value=\"in_knn\">ಕೆನಡಾ</option>\n                                <option value=\"in_tam\">தமிழ்</option>\n                                <option value=\"in_od\">ଓଡ଼ିଆ</option>\n                                <option value=\"in_punjabi\">ਪੰਜਾਬੀ</option>\n                            </select> */}\n                            <FormControl variant=\"outlined\" className=\"header-box\" margin='dense'>\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Language</InputLabel>\n                            <Select\n                                native\n                                value={this.props.i18n.language}\n                                onChange={(e) => this.changeLanguage(e, this.props.i18n)}\n                                label=\"Language\"\n                                inputProps={{\n                                    name: 'language',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                            <option value=\"en\">English</option>\n                            <option value=\"in_urd\">اردو</option>\n                            <option value=\"in_hi\">हिंदी</option>\n                            <option value=\"in_knn\">ಕೆನಡಾ</option>\n                            <option value=\"in_tam\">தமிழ்</option>\n                            <option value=\"in_od\">ଓଡ଼ିଆ</option>\n                            <option value=\"in_punjabi\">ਪੰਜਾਬੀ</option>\n                            </Select>\n                        </FormControl>\n                        </div>\n\n                        <div>\n                            {/* District: */}\n                            <TextField\n                                label=\"District\"\n                                id=\"outlined-size-small\"\n                                defaultValue=\"\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                className=\"header-text header-box\"\n                            />\n                        </div>\n\n\n                    </div>\n                </nav>\n                \n            </header>\n            \n        )\n    }\n}\n\nconst HeaderTrans = withTranslation()(HeaderComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Header() {\n  return (\n    <Suspense fallback=\"loading\">\n      <HeaderTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport './Footer.scss'\n\nclass FooterComponent extends React.Component {\n    render() {\n        return (\n            <footer>\n                \n            </footer>\n            \n        )\n    }\n}\n\nconst FooterTrans = withTranslation()(FooterComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Footer() {\n  return (\n    <Suspense fallback=\"loading\">\n      <FooterTrans />\n    </Suspense>\n  );\n}\n","import React from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom'\n\nimport './App.scss';\n\n\nimport Home from './userpages/home/Home'\nimport SD from './userpages/social_distancing/SocialDistancing'\nimport SQ from './userpages/self_quarantine/SelfQuarantine'\nimport Myths from './userpages/myths/Myths'\nimport Simulation from './userpages/simulation/Simulation'\nimport Funds from './userpages/funds/Funds'\nimport Volunteer from './userpages/volunteer/Volunteer'\nimport Stories from './userpages/stories/Stories'\nimport Us from './userpages/us/Us'\nimport MapDistrict from './userpages/map/MapDistrict'\n\nimport Header from './views/header/Header'\nimport Footer from './views/footer/Footer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Router basename='/'>\n        <Header/>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/sd\" component={SD} />\n          <Route path=\"/sq\" component={SQ} />\n          <Route path=\"/myths\" component={Myths} />\n          <Route path=\"/simulation\" component={Simulation} />\n          <Route path=\"/funds\" component={Funds} />\n          <Route path=\"/volunteer\" component={Volunteer} />\n          <Route path=\"/stories\" component={Stories} />\n          <Route path=\"/us\" component={Us} />\n          <Route path=\"/map\" component={MapDistrict} />\n        </Switch>\n        <Footer/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    backend: {\n        loadPath: '/locales/{{lng}}/{{ns}}.json'\n    },\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}