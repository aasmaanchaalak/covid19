{"version":3,"sources":["images/cover_face.svg","images/handwash.svg","images/dont_touch_face.svg","images/handrub.svg","images/face_mask.svg","images/social_distancing.svg","images/colab.svg","images/telegram.svg","images/github.svg","../../../../SoketLabs/Projects/datalake/js-datalake/index.js","views/CurfewMessage.js","userpages/home/Home.js","userpages/social_distancing/SocialDistancing.js","userpages/self_quarantine/SelfQuarantine.js","userpages/myths/Myths.js","views/sim/options.js","views/sim/collisions.js","views/sim/Ball.js","views/sim/Simulation.js","userpages/simulation/Simulation.js","userpages/funds/Funds.js","userpages/volunteer/Volunteer.js","userpages/stories/Stories.js","userpages/us/Us.js","userpages/map/Cholo.js","userpages/map/MapDistrict.js","views/header/Header.js","views/footer/Footer.js","utils/Data.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["module","exports","Datalake","channel","pravahApiKey","this","key","count","body","Promise","resolve","reject","fetch","method","JSON","stringify","then","response","json","auth","undefined","error","access_token","token","dataResponse","data","JanataCurfewComponent","t","props","className","React","Component","JanataCurfewTrans","withTranslation","JanataCurfew","fallback","HomeComponent","val","statesList","stateCodeNameMap","theme","label","res","push","forEach","s","idx","mostAffected","dataDiff","indiaStats","worldStats","diffTimestamp","recoveryPath","worstHit","worldActive","totalPositiveCases","curedCases","deathCases","perActive","activePositiveCases","toFixed","perCured","perDead","rateTimePerCase","timestamp","india","doublingRate","cureDeathRatio","cureDeathRatioWorld","console","log","recoveryPathView","length","state_code","worstHitView","latestStats","pieData1","backgroundColor","hoverBackgroundColor","pieData2","sortedData","Object","keys","state","sort","a","b","value","i","stateColour","radarReturnArray","diffData","diffCountry","affectedStates","pie1","pie2","countryStats","diffStats","Date","now","worstAffectedStates","leastAffectStates","stateCode","worldData","improved","statesStats","radar","updateDate","toLocaleString","changeValue","otherCases","href","rel","target","mostAffectedView","updatesView","title","src","frameBorder","allow","allowFullScreen","handwash","alt","coverFace","dTouchFace","handRub","socialDistancing","faceMask","HomeTrans","Home","SocialDistancingComponent","SocialDistancingTrans","SocialDistancing","SelfQuarantineComponent","SelfQuarantineTrans","SelfQuarantine","MythsComponent","MythsTrans","Myths","DEFAULT_FILTERS","death","stayHome","CANVAS_SIZE","height","width","DESKTOP_CANVAS_SIZE","COLORS","recovered","infected","well","STATES","STARTING_BALLS","atan2","Math","cos","sin","sqrt","calculateChangeDirection","dx","dy","angle","ax","ay","checkCollision","diameter","Ball","runState","x","y","id","sketch","hasMovement","vx","random","vy","timeInfected","hasCollision","survivor","filters","TICKS_TO_RECOVER","results","others","otherBall","BALL_RADIUS","color","noStroke","fill","ellipse","matchMedia","window","isDesktop","matches","Simulation","graphPoint","graphList","balls","updateGraph","rects","entries","map","percentatge","rect","join","newGraphPoint","graphRef","current","insertAdjacentHTML","resetValues","isDesktopNewValue","innerHTML","resetRun","tick","updateCount","countersRef","innerText","startBalls","Array","from","config","STATIC_PEOPLE_PERCENTATGE","createCanvas","parentRef","parent","setup","addListener","e","draw","background","ball","checkState","checkCollisions","move","render","createRef","canvasRef","motion_percentage","ref","version","xmlns","aria-labelledby","role","SimulationComponent","SimulationTrans","FundsComponent","staticState","fundsData","FData","cols","rows","rowCount","item","name","org","desc","region","cat","link","searchString","toLowerCase","includes","setState","type","placeholder","onChange","handleSearchInput","renderItems","FundsTrans","Funds","VolunteerComponent","volData","VData","VolunteerTrans","Volunteer","StoriesComponent","expanded","truncated","dialogDisplay","handleClose","bind","StoriesData","dialog","story","category","Chip","size","variant","icon","LocationSearching","onClick","handleReadClick","Dialog","open","onClose","aria-describedby","maxWidth","DialogTitle","DialogContent","DialogContentText","StoriesTrans","Stories","UsComponent","handleNext","activeStep","handleBack","handleReset","step","telegram","github","steps","getSteps","colab","Stepper","orientation","index","Step","StepLabel","StepContent","getStepContent","Button","disabled","Paper","square","elevation","Typography","UsTrans","Us","Cholo","svgRef","svg","d3","refs","node","getBoundingClientRect","mapData","max","range","projection","center","translate","scale","path","self","append","attr","selectAll","topojson","districtTopoJson","objects","district_geojson","features","enter","d","districtName","properties","dtname","classNum","ceil","on","classed","onHoverRegion","datum","plot","Stats","stateData","disData","state_code_to_name","MapDistrictTrans","useState","mapStateDistrictData","setMapStateDistrictData","displayDistrict","setDisplayDistrict","useEffect","states","mapDataDistricts","min","maxDistrictCount","st_code","hover","mapDataStates","MapDistrict","HeaderComponent","event","i18n","lang","changeLanguage","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","FormControl","margin","InputLabel","htmlFor","Select","native","language","inputProps","TextField","defaultValue","HeaderTrans","Header","FooterComponent","FooterTrans","Footer","Data","डेटालेक","dlake","latest","p","Pipeline","add","args","pastMap","latestData","diffAndAggData","diff","sortupdate","k","reverse","slice","wroldData","execute","countries","stats","header","code","presentStats","pastStats","activePosStateArr","parseInt","funcs","func","f","App","basename","exact","component","SD","SQ","Boolean","location","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","interpolation","escapeValue","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9605203a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover_face.8458c828.svg\";","module.exports = __webpack_public_path__ + \"static/media/handwash.2708ccaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/dont_touch_face.2f3c3d90.svg\";","module.exports = __webpack_public_path__ + \"static/media/handrub.f0a5d838.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_mask.0a2b4dab.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_distancing.f11225ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/colab.7ca9adbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.1420d9c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.01e16c11.svg\";","const authServer = 'https://auth.pravah.io:5000/token'\nconst datalake = 'https://api.datalake.pravah.io:4000/latest'\n\nclass Datalake {\n    constructor(channel, pravahApiKey) {\n        this.channel = channel\n        this.key = pravahApiKey\n    }\n\n    async latest(count) {\n\n        let body = {\n            'authentication_token': this.key\n        };\n\n        return new Promise((resolve, reject) => {\n            fetch(authServer, {\n                method: 'POST',\n                body: JSON.stringify(body)\n            }).then(response => {\n                return response.json()\n            }).then(auth => {\n                if(auth.error === undefined) {\n                    return fetch(datalake, {\n                        method: 'POST',\n                        body: JSON.stringify({\n                            channel: this.channel,\n                            access_token: auth.token,\n                            'query': {\n                                'count': count\n                            }\n                        })\n                    })\n                } else {\n                    reject(auth)\n                }\n            }).then(dataResponse => {\n                return dataResponse.json()\n            }).then(data => {\n                resolve(data)\n            })\n        })\n\n        \n    }\n}\n\nexports.Datalake = Datalake","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nclass JanataCurfewComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"imp-message\">\n                    <h1>{t('sd.jan_curfew_message')}</h1>\n                    {<span>{t('sd.jan_curfew_submessage')}</span>}\n                </div>\n            </>\n        );\n    }\n}\n\nconst JanataCurfewTrans = withTranslation()(JanataCurfewComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function JanataCurfew() {\n  return (\n    <Suspense fallback=\"loading\">\n      <JanataCurfewTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {Pie} from 'react-chartjs-2';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './Home.scss'\n// import Content from './mk.md'\n\nimport stateColour from './state_code_to_colour.json'\nimport coverFace from '../../images/cover_face.svg'\nimport handwash from '../../images/handwash.svg'\nimport dTouchFace from '../../images/dont_touch_face.svg'\nimport handRub from '../../images/handrub.svg'\nimport faceMask from '../../images/face_mask.svg'\nimport socialDistancing from '../../images/social_distancing.svg'\n\nclass HomeComponent extends React.Component {\n\n\n    /* constructor(props) {\n        super(props)\n    } */\n\n    changeValue(val) {\n        if(val > 0) {\n            return '+' + val\n        } else {\n            return val\n        }\n    }\n\n    // getRandomInt(min, max){\n    //     min = Math.ceil(min);\n    //     max = Math.floor(max);\n    //     return Math.floor(Math.random() * (max - min + 1)) + min;\n    // }\n\n\n    mostAffectedView(statesList, stateCodeNameMap, theme, label) {\n        if(statesList === undefined) {\n            return ''\n        }\n        let res = []\n        res.push(<label key='label'>{label}</label>)\n        statesList.forEach((s, idx) => {\n            res.push(\n                <div key={idx} className={'name-value-container theme-' + theme}>\n                    <span className=\"value\">{s[1]}</span>\n                    <span className=\"name\">{stateCodeNameMap[s[0]]}</span>\n                </div>\n            )\n        })\n        \n        return res\n    }\n\n    updatesView(mostAffected, stateCodeNameMap, dataDiff, indiaStats, worldStats, diffTimestamp, recoveryPath, worstHit) {\n        if(mostAffected === undefined) {\n            return ''\n        }\n        let worldActive = worldStats.totalPositiveCases - worldStats.curedCases - worldStats.deathCases\n        let perActive = (indiaStats.activePositiveCases/indiaStats.totalPositiveCases*100).toFixed(2)\n        let perCured = (indiaStats.curedCases/indiaStats.totalPositiveCases*100).toFixed(2)\n        let perDead = (indiaStats.deathCases/indiaStats.totalPositiveCases*100).toFixed(2)\n        let rateTimePerCase = (dataDiff.timestamp/3600)/dataDiff.india.totalPositiveCases\n        let doublingRate = (rateTimePerCase*indiaStats.totalPositiveCases/24).toFixed(1)\n        let cureDeathRatio = (indiaStats.curedCases/indiaStats.deathCases).toFixed(1)\n        let cureDeathRatioWorld = (worldStats.curedCases/worldStats.deathCases).toFixed(1)\n        console.log(mostAffected, stateCodeNameMap, dataDiff, indiaStats, worldStats, recoveryPath, worstHit)\n\n        let recoveryPathView = []\n        recoveryPath.forEach((s, idx) => {\n            if((recoveryPath.length!==1) && (idx === recoveryPath.length - 1)){\n                recoveryPathView.push(<span key=\"and\">{' and '}</span>)\n            }/*  else {\n                recoveryPathView.push(<span key={'comma-' + idx}>{', '}</span>)\n            } */\n            recoveryPathView.push(\n                <div key={idx} className={'name-value-container theme-blue'}>\n                    <span className=\"value\">{s.activePositiveCases}</span>\n                    <span className=\"name\">{stateCodeNameMap[s.state_code]}</span>\n                </div>\n            )\n            //recoveryPathView.push(<span key={idx}><span key={idx} className=\"highlight-test-red\">{stateCodeNameMap[s]}</span> <span className=\"highlight highlight-inverted-red highlight-bold\">{dataDiff[s].activePositiveCases}</span></span>)\n            \n        })\n\n        let worstHitView = []\n        worstHit.forEach((s, idx) => {\n            if((worstHit.length!==1) && (idx === worstHit.length - 1)){\n                worstHitView.push(<span key=\"and\">{' and '}</span>)\n            }/*  else {\n                recoveryPathView.push(<span key={'comma-' + idx}>{', '}</span>)\n            } */\n            worstHitView.push(\n                <div key={idx} className={'name-value-container theme-red'}>\n                    <span className=\"value\">{s.activePositiveCases}</span>\n                    <span className=\"name\">{stateCodeNameMap[s.state_code]}</span>\n                </div>\n            )\n            //recoveryPathView.push(<span key={idx}><span key={idx} className=\"highlight-test-red\">{stateCodeNameMap[s]}</span> <span className=\"highlight highlight-inverted-red highlight-bold\">{dataDiff[s].activePositiveCases}</span></span>)\n            \n        })\n\n        return (\n            <>\n                <div className=\"heading\">\n                    <h3 className=\"highlight-bold\">Updates from the past {(diffTimestamp / (3600)).toFixed(0)} hours</h3>\n                </div>\n                <ul>\n                    <li>\n                        <span className=\"highlight-test-red\">{stateCodeNameMap[mostAffected[0][0]]}</span> is the worst affected state with <span className=\"highlight-test-red\">{mostAffected[0][1]} active cases</span> and an <span className=\"highlight highlight-red highlight-bold\">increase of {dataDiff[mostAffected[0][0]].activePositiveCases}</span> cases in the <span className=\"highlight highlight-red highlight-bold\">past {(diffTimestamp / (3600)).toFixed(0)} hours.</span>\n                    </li>\n                    <li>\n                        States like {recoveryPathView} have shown reduction in active cases and hopefully are on a path to normality.\n                    </li>\n                    <li>\n                        {worstHitView} have shown the highest increment in the active cases in the past {(diffTimestamp / (3600)).toFixed(0)} hours.\n                    </li>\n                    <li>India till date has <span className=\"highlight-test-red\">{indiaStats.activePositiveCases} active cases</span> which is <span className=\"highlight highlight-red highlight-bold\">{(indiaStats.activePositiveCases/worldActive*100).toFixed(2)} % of the worldwide active cases.</span></li>\n                    <li>\n                        Out of the total infected, <span className=\"highlight-test-red\">{perActive} % are active cases</span>, <span className=\"highlight highlight-blue highlight-bold\">{perCured} % people are cured</span> and <span className=\"highlight-test-red\">{perDead} % people have died.</span>\n                    </li>\n                    <li>\n                        Infected cases in India are <span className=\"highlight highlight-red highlight-bold\">doubling every {doublingRate} days</span> with <span className=\"highlight-test-red\">{(1/rateTimePerCase).toFixed(0)} people getting identified every hour.</span>\n                    </li>\n                    <li>\n                        India currently has <span className=\"highlight highlight-red highlight-bold\">{cureDeathRatio} cure to death ratio</span> as compared to <span className=\"highlight-test-red\">{cureDeathRatioWorld} worldwide.</span>\n                    </li>\n                </ul>\n            </>\n        )\n    }\n\n    \n    radar(latestStats, stateCodeNameMap) {\n\n        let pieData1 = {\n            'labels': [],\n            'datasets': [\n                {\n                    data: [],\n                    backgroundColor: [],\n                    hoverBackgroundColor: []\n                }\n            ]\n        }\n        let pieData2 = {\n            'labels': [],\n            'datasets': [\n                {\n                    data: [],\n                    backgroundColor: [],\n                    hoverBackgroundColor: []\n                }\n            ]\n        }\n        let sortedData =[]\n        Object.keys(latestStats).forEach(state => {\n            sortedData.push({\n                'id': state,\n                'value': latestStats[state]['totalPositiveCases'] || 0\n            })\n        })\n        sortedData.sort((a,b) => {\n            return b.value - a.value\n        })\n        for(let i=0; i<8; ++i){\n            pieData1['labels'].push(stateCodeNameMap[sortedData[i]['id']])\n            pieData1['datasets'][0]['data'].push(sortedData[i]['value'])\n            pieData1['datasets'][0]['backgroundColor'].push(stateColour[sortedData[i]['id']])\n            pieData1['datasets'][0]['hoverBackgroundColor'].push(stateColour[sortedData[i]['id']])\n        }\n\n        sortedData =[]\n        Object.keys(latestStats).forEach(state => {\n            sortedData.push({\n                'id': state,\n                'value': latestStats[state]['activePositiveCases'] || 0\n            })\n        })\n        sortedData.sort((a,b) => {\n            return b.value - a.value\n        })\n        for(let i=0; i<8; ++i){\n            pieData2['labels'].push(stateCodeNameMap[sortedData[i]['id']])\n            pieData2['datasets'][0]['data'].push(sortedData[i]['value'])\n            pieData2['datasets'][0]['backgroundColor'].push(stateColour[sortedData[i]['id']])\n            pieData2['datasets'][0]['hoverBackgroundColor'].push(stateColour[sortedData[i]['id']])\n        }\n\n        let radarReturnArray = []\n        radarReturnArray.push(pieData1)\n        radarReturnArray.push(pieData2)\n    \n        return radarReturnArray\n    }\n\n    render() {\n        const { t } = this.props;\n\n        let data = {}\n        let diffData = {}\n        let diffCountry = {}\n        let diffTimestamp;\n        let affectedStates = {};\n        let stateCodeNameMap;\n        let worldStats = {};\n        let recoveryPath = {};\n        let worstHit={};\n        let latestStats = {}\n        let pie1 = {}\n        let pie2 = {}\n        //let statesStats;\n        \n        if(this.props.data.timestamp !== undefined) {\n            console.log(this.props.data)\n            data = {\n                timestamp: this.props.data.timestamp,\n                ...this.props.data.countryStats\n            }\n            diffData = this.props.data.diffStats\n            diffCountry = this.props.data.diffStats.india\n            diffTimestamp = this.props.data.diffStats.timestamp + ((Date.now()/1000) - this.props.data.timestamp)\n            affectedStates = {\n                worstAffectedStates: this.props.data.worstAffectedStates,\n                leastAffectStates: this.props.data.leastAffectStates\n            }\n            stateCodeNameMap = this.props.data.stateCode\n            worldStats = this.props.data.worldData\n            recoveryPath = this.props.data.improved\n            worstHit = this.props.data.worstHit\n            latestStats = this.props.data.statesStats\n\n            console.log(stateCodeNameMap)\n            pie1= this.radar(latestStats, stateCodeNameMap)[0]\n            pie2= this.radar(latestStats, stateCodeNameMap)[1]\n            \n            \n            //statesStats = this.props.data.statesStats\n        }\n        let updateDate = new Date(data.timestamp*1000)\n\n        \n        return (\n            <>\n                <div className=\"container\">\n                    <CurfewMessage/>\n                    \n                    <div className=\"stats-container\">\n                        \n                        <p className=\"update-date\">Updated at: {updateDate.toLocaleString()} [changes since {(diffTimestamp / (3600)).toFixed(1)} hours]</p>\n                        <div className=\"row\">\n                            <div className=\"col-md-3\">\n                                <div className=\"stats-box active\">\n                                    <span className=\"title\">Active Cases</span>\n                                    <span className=\"number\">{data.activePositiveCases || '-'}\n                                        <span className=\"change-in-value\"> [{this.changeValue(diffCountry.activePositiveCases)}]</span>\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"col-md-3\">\n                                <div className=\"stats-box cured\">\n                                    <span className=\"title\">Cured Cases</span>\n                                    <span className=\"number\">{data.curedCases || '-'}\n                                        <span className=\"change-in-value\"> [{this.changeValue(diffCountry.curedCases)}]</span>\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"col-md-3\">\n                                <div className=\"stats-box death\">\n                                    <span className=\"title\">Deaths</span>\n                                    <span className=\"number\">{data.deathCases || '-'}\n                                        <span className=\"change-in-value\"> [{this.changeValue(diffCountry.deathCases)}]</span>\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"col-md-3\">\n                                <div className=\"stats-box others\">\n                                    <span className=\"title\">Total Cases</span>\n                                    <span className=\"number\">{data.totalPositiveCases || '-'}\n                                        <span className=\"change-in-value\"> [{this.changeValue(diffCountry.totalPositiveCases)}]</span>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                        <p className=\"other-cases\">Other Cases: {data.otherCases}</p>\n                        <div className=\"source\"><a href=\"https://www.mohfw.gov.in/\" rel=\"noopener noreferrer\" target=\"_blank\">Ministry of Health and Family Welfare</a></div>\n                        \n                    </div>\n\n                    <div className=\"summary\">\n                        <div className=\"affected-region\">\n                            {this.mostAffectedView(affectedStates.leastAffectStates, stateCodeNameMap, 'blue', 'Least Affected States (Active  Cases)')}\n                            <br/>\n                            {this.mostAffectedView(affectedStates.worstAffectedStates, stateCodeNameMap, 'red', 'Most Affected States (Active  Cases)')}\n                        </div>\n                        <hr/>\n                        {this.updatesView(\n                            affectedStates.worstAffectedStates, \n                            stateCodeNameMap,\n                            diffData,\n                            data,\n                            worldStats,\n                            diffTimestamp,\n                            recoveryPath,\n                            worstHit\n                        )}\n                    </div>\n\n                    <div className=\"row stats-viz\">\n                        <div className=\"col-md-6 viz-chart\">\n                            <h4 className=\"center\">Total Cases </h4>\n                            <h6 className=\"center\"> 8 States with most cases </h6>\n                            <Pie data={pie1} />\n                        </div>\n                        <div className=\"col-md-6 viz-chart\">\n                            <h4 className=\"center\">Active Positive Cases</h4>\n                            <h6 className=\"center\"> 8 States with most cases </h6>\n                            <Pie data={pie2} />\n                        </div>\n                        {/* <div className=\"col-md-4\">\n                            <h4>PIE </h4>\n                            <Pie data={pie1} />\n                        </div> */}\n                    </div>\n\n                    {/* <ChartRace \n                        data={[\n                            { id: '0', title: 'Ayfonkarahisar', value: this.getRandomInt(10, 500), color: '#50c4fe' },\n                            { id: 1, title: 'Kayseri', value: this.getRandomInt(10, 500), color: '#3fc42d' },\n                            { id: 2, title: 'Muğla', value: this.getRandomInt(10, 500), color: '#c33178' },\n                            { id: 3, title: 'Uşak', value: this.getRandomInt(10, 500), color: '#423bce' },\n                            { id: 4, title: 'Sivas', value: this.getRandomInt(10, 500), color: '#c8303b' },\n                            { id: 5, title: 'Konya', value: this.getRandomInt(10, 500), color: '#2c2c2c' }\n                        ]}\n                        backgroundColor=\"#fffffff8\"\n                        width = \"700\"\n                        valueStyle={{ font: 'normal 400 11px Arial', color: '#FF0000' }}\n                    /> */}\n\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <iframe className=\"embed-video\" title=\"Information WHO\" src={t('home.resources.who')} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                        </div>\n                        <div className=\"col-md-6 info-box\">\n                            <h2>{t('home.what_is_corona')}</h2>\n                            {t('home.what_is_corona_answer')} <code>{t('home.what_is_corona_punch')}</code>\n                            <div className=\"source\"><a href=\"https://www.who.int/news-room/q-a-detail/q-a-coronaviruses\" rel=\"noopener noreferrer\" target=\"_blank\">World Health Organization</a></div>\n                        </div>\n                    </div>\n                    <div className=\"prevent-box\">\n                        <h1>{t('home.how_to_prevent_infection')}</h1>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={handwash} alt=\"Handwash\"/>\n                                <h3>{t('home.handwash')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={coverFace} alt=\"cover your face\"/>\n                                <h3>{t('home.cover_face')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={dTouchFace} alt=\"Handwash\"/>\n                                <h3>{t('home.dont_touch_face')}</h3>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={handRub} alt=\"Handwash\"/>\n                                <h3>{t('home.handrub')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={socialDistancing} alt=\"Handwash\"/>\n                                <h3>{t('home.social_distancing')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={faceMask} alt=\"Handwash\"/>\n                                <h3>{t('home.mask')}</h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                \n                {/* <UserEngagementForm/>\n                <CityGraphics/>\n                <MarkdownContent className=\"content\" text={Content} /> */}\n            </>\n        );\n    }\n}\n\nconst HomeTrans = withTranslation()(HomeComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Home(props) {\n    return (\n        <Suspense fallback=\"loading\">\n        <HomeTrans data={props.data}/>\n        </Suspense>\n    );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './SocialDistancing.scss'\n\nclass SocialDistancingComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                  <CurfewMessage/>\n                  <div className=\"row\">\n                  <div className=\"col-md-8 info-box\">\n                      <h1>{t('sd.what_is_sd')}</h1>\n                      <p>{t('sd.what_is_sd_ans')}</p>\n\n                      <p>{t('sd.what_is_sd_ans-2')}</p>\n                      <ul>\n                        <li>{t('sd.what_is_sd_ans-2-opt1')}</li>\n                        <li>{t('sd.what_is_sd_ans-2-opt2')}</li>\n                        <li>{t('sd.what_is_sd_ans-2-opt3')}</li>\n                        <li>{t('sd.what_is_sd_ans-2-opt4')}</li>\n                      </ul>\n                      <div className=\"source\"><a href=\"https://www.hopkinsmedicine.org/health/conditions-and-diseases/coronavirus/coronavirus-social-distancing-and-self-quarantine\" rel=\"noopener noreferrer\" target=\"_blank\">Johns Hopkins Medicine</a></div>\n                    </div>\n                    <div className=\"col-md-4 image-box\">\n                      <iframe className=\"social-dis-video\" title=\"Information WHO\" src=\"https://www.youtube.com/embed/53R4wbhrrLA\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                      {/* <img className=\"minor-image\" src={socialDistancing} alt=\"Handwash\"/> */}\n                    </div>\n                  </div>\n                  \n                  <div className=\"info-box extra-margin-top\">\n\n                    \n                    <h1>How does Ministry of Health, India defines it?</h1>\n                    <p>\n                      Social distancing is a non-pharmaceutical infection prevention and control intervention\n                      implemented to avoid/decrease contact between those who are infected with a disease causing\n                      pathogen and those who are not, so as to stop or slow down the rate and extent of disease\n                      transmission in a community. This eventually leads to decrease in spread, morbidity and\n                      mortality due to the disease.\n                    </p>\n                    <iframe className=\"social-dis-video\" title=\"Information WHO\" src={t('sd.resources.what_is_video')} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                  </div>\n                  \n                </div>\n            </>\n        );\n    }\n}\n\nconst SocialDistancingTrans = withTranslation()(SocialDistancingComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function SocialDistancing() {\n  return (\n    <Suspense fallback=\"loading\">\n      <SocialDistancingTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\n//import './SelfQuarantine.scss'\n\nclass SelfQuarantineComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                  <CurfewMessage/>\n                  <div className=\"row\">\n                  <div className=\"col-md-12 info-box\">\n                      <h1>{t('sq.what_is_sq')}</h1>\n                      <p>{t('sq.what_is_sq_ans')}</p>\n\n                      <p>{t('sq.what_is_sq_ans-2')}</p>\n\n                      <p>{t('sq.involves')}</p>\n                      <ul>\n                        <li>{t('sq.involves-1')}</li>\n                        <li>{t('sq.involves-2')}</li>\n                        <li>{t('sq.involves-3')}</li>\n                        <li>{t('sq.involves-4')}</li>\n                        <li>{t('sq.involves-5')}</li>\n                      </ul>\n                      <div className=\"source\"><a href=\"https://www.hopkinsmedicine.org/health/conditions-and-diseases/coronavirus/coronavirus-social-distancing-and-self-quarantine\" rel=\"noopener noreferrer\" target=\"_blank\">Johns Hopkins Medicine</a></div>\n                    </div>\n                  </div>\n                  \n                  {/* <div className=\"info-box extra-margin-top\">\n\n                    \n                    <h1>How does Ministry of Health, India defines it?</h1>\n                    <p>\n                      Social distancing is a non-pharmaceutical infection prevention and control intervention\n                      implemented to avoid/decrease contact between those who are infected with a disease causing\n                      pathogen and those who are not, so as to stop or slow down the rate and extent of disease\n                      transmission in a community. This eventually leads to decrease in spread, morbidity and\n                      mortality due to the disease.\n                    </p>\n                    <iframe className=\"social-dis-video\" title=\"Information WHO\" src={t('sd.resources.what_is_video')} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                  </div> */}\n\n                  <div className=\"row\">\n                    <div className=\"col-md-4\"></div>\n                    <div className=\"col-md-8\">\n                        \n                    </div>\n                  </div>\n                  \n                </div>\n            </>\n        );\n    }\n}\n\nconst SelfQuarantineTrans = withTranslation()(SelfQuarantineComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function SelfQuarantine() {\n  return (\n    <Suspense fallback=\"loading\">\n      <SelfQuarantineTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './Myths.scss'\n\nclass MythsComponent extends React.Component {\n\n    render() {\n        //const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                    <CurfewMessage/>\n                    <div className=\"row myths\">\n                        <div className=\"col-md-6 info-box\">\n                            <h2>Cold weather and snow CANNOT kill the CoronaVirus</h2>\n                            <h2>Hand dryers are NOT effective in killing the CoronaVirus.</h2>\n                        </div>\n                        <div className=\"col-md-6 info-box\">\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nconst MythsTrans = withTranslation()(MythsComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Myths() {\n  return (\n    <Suspense fallback=\"loading\">\n      <MythsTrans />\n    </Suspense>\n  );\n}\n","export const DEFAULT_FILTERS = {\n  death: true,\n  stayHome: true\n}\n\nexport const CANVAS_SIZE = {\n  height: 880,\n  width: 360\n}\n\nexport const DESKTOP_CANVAS_SIZE = {\n  height: 550,\n  width: 430\n}\n\nexport const BALL_RADIUS = 5\nexport const COLORS = {\n  death: '#c50000',\n  recovered: '#D88DBC',\n  infected: '#5ABA4A',\n  well: '#63C8F2'\n}\n\nexport const STATES = {\n  infected: 'infected',\n  well: 'well',\n  recovered: 'recovered',\n  death: 'death'\n}\n\nexport const COUNTERS = {\n  ...STATES,\n  'max-concurrent-infected': 'max-concurrent-infected'\n}\n\nexport const STARTING_BALLS = {\n  [STATES.infected]: 1,\n  [STATES.well]: 199,\n  [STATES.recovered]: 0,\n  [STATES.death]: 0,\n  'max-concurrent-infected': 0\n}\n\nexport const MORTALITY_PERCENTATGE = 5\nexport const SPEED = 1\nexport const TOTAL_TICKS = 1600\nexport const TICKS_TO_RECOVER = 500\n//export const STATIC_PEOPLE_PERCENTATGE = 90","const { atan2, cos, sin, sqrt } = Math\n\nexport const calculateChangeDirection = ({ dx, dy }) => {\n  const angle = atan2(dy, dx)\n  const ax = cos(angle)\n  const ay = sin(angle)\n  return { ax, ay }\n}\n\nexport const checkCollision = ({ dx, dy, diameter }) => {\n  const distance = sqrt(dx * dx + dy * dy)\n  return distance < diameter\n}","import {\n  BALL_RADIUS,\n  COLORS,\n  MORTALITY_PERCENTATGE,\n  TICKS_TO_RECOVER,\n  SPEED,\n  STATES\n} from './options.js'\nimport { checkCollision, calculateChangeDirection } from './collisions.js'\n\nconst diameter = BALL_RADIUS * 2\n\nexport class Ball {\n  constructor ({ x, y, id, state, sketch, hasMovement }, runState) {\n    this.x = x\n    this.y = y\n    this.vx = sketch.random(-1, 1) * SPEED\n    this.vy = sketch.random(-1, 1) * SPEED\n    this.sketch = sketch\n    this.id = id\n    this.state = state\n    this.timeInfected = 0\n    this.hasMovement = hasMovement\n    this.hasCollision = true\n    this.survivor = false\n    this.runState = runState\n  }\n\n  checkState () {\n    if (this.state === STATES.infected) {\n      if (this.runState.filters.death && !this.survivor && this.timeInfected >= TICKS_TO_RECOVER / 2) {\n        this.survivor = this.sketch.random(100) >= MORTALITY_PERCENTATGE\n        if (!this.survivor) {\n          this.hasMovement = false\n          this.state = STATES.death\n          this.runState.results[STATES.infected]--\n          this.runState.results[STATES.death]++\n          return\n        }\n      }\n\n      if (this.timeInfected >= TICKS_TO_RECOVER) {\n        this.state = STATES.recovered\n        this.runState.results[STATES.infected]--\n        this.runState.results[STATES.recovered]++\n      } else {\n        this.timeInfected++\n      }\n    }\n  }\n\n  checkCollisions ({ others }) {\n    if (this.state === STATES.death) return\n\n    for (let i = this.id + 1; i < others.length; i++) {\n      const otherBall = others[i]\n      const { state, x, y } = otherBall\n      if (state === STATES.death) continue\n\n      const dx = x - this.x\n      const dy = y - this.y\n\n      if (checkCollision({ dx, dy, diameter: BALL_RADIUS * 2 })) {\n        const { ax, ay } = calculateChangeDirection({ dx, dy })\n\n        this.vx -= ax\n        this.vy -= ay\n        otherBall.vx = ax\n        otherBall.vy = ay\n\n        // both has same state, so nothing to do\n        if (this.state === state) return\n        // if any is recovered, then nothing happens\n        if (this.state === STATES.recovered || state === STATES.recovered) return\n        // then, if some is infected, then we make both infected\n        if (this.state === STATES.infected || state === STATES.infected) {\n          this.state = otherBall.state = STATES.infected\n          this.runState.results[STATES.infected]++\n          this.runState.results[STATES.well]--\n        }\n      }\n    }\n  }\n\n  move () {\n    if (!this.hasMovement) return\n\n    this.x += this.vx\n    this.y += this.vy\n\n    // check horizontal walls\n    if (\n      (this.x + BALL_RADIUS > this.sketch.width && this.vx > 0) ||\n      (this.x - BALL_RADIUS < 0 && this.vx < 0)) {\n      this.vx *= -1\n    }\n\n    // check vertical walls\n    if (\n      (this.y + BALL_RADIUS > this.sketch.height && this.vy > 0) ||\n      (this.y - BALL_RADIUS < 0 && this.vy < 0)) {\n      this.vy *= -1\n    }\n  }\n\n  render () {\n    const color = COLORS[this.state]\n    this.sketch.noStroke()\n    this.sketch.fill(color)\n    this.sketch.ellipse(this.x, this.y, diameter, diameter)\n  }\n}","import React from 'react';\nimport Sketch from \"react-p5\";\n\nimport {\n  BALL_RADIUS,\n  CANVAS_SIZE,\n  DESKTOP_CANVAS_SIZE,\n  STARTING_BALLS,\n  STATES,\n  COLORS,\n  DEFAULT_FILTERS,\n  TOTAL_TICKS\n} from './options.js'\n\nimport { Ball } from './Ball.js'\nimport './Simulation.scss'\n\nconst matchMedia = window.matchMedia('(min-width: 800px)')\n\nlet isDesktop = matchMedia.matches\n\nclass Simulation extends React.Component {\n\n    graphPoint = 0\n    graphList = ''\n    balls = []\n\n    constructor(props) {\n        super(props)\n\n        this.countersRef = {\n            infected: React.createRef(),\n            well: React.createRef(),\n            recovered: React.createRef(),\n            death: React.createRef()\n        }\n\n        this.graphRef = React.createRef()\n        this.canvasRef = React.createRef()\n\n        this.runState = { \n            filters: { ...DEFAULT_FILTERS },\n            results: { ...STARTING_BALLS },\n            config: {\n                STATIC_PEOPLE_PERCENTATGE: props.motion_percentage\n            },\n            tick: 0\n        }\n    }\n\n    updateGraph = () => {\n        let y = 0\n        const rects = Object.entries(this.runState.results).map(([state, count]) => {\n            const color = COLORS[state]\n            if (count > 0) {\n                const percentatge = count / 200 * 100\n                const rect = `<rect height=\"${percentatge}\" y=\"${y}\" width=\"1\" fill=\"${color}\"></rect>`\n                y += percentatge\n                return rect\n            }\n            return ''\n        }).join('')\n\n        const newGraphPoint = `<g transform=\"translate(${this.graphPoint},0)\">${rects}</g>`\n        this.graphPoint++\n\n\n        this.graphRef.current.insertAdjacentHTML('beforeend', newGraphPoint)\n    }\n\n    resetValues = (isDesktopNewValue = isDesktop) => {\n        this.graphRef.current.innerHTML = ''\n        //replayElement.style.display = 'none'\n        this.graphPoint = 0\n        isDesktop = isDesktopNewValue\n        this.resetRun()\n    }\n\n    resetRun = () => {\n        this.runState.results = { ...STARTING_BALLS }\n        this.runState.tick = 0\n    }\n\n    updateCount = (sketch) => {\n        if (this.runState.tick < TOTAL_TICKS) {\n            // calculate max concurrent infected\n            if (this.runState.results[STATES.infected] > this.runState.results['max-concurrent-infected']) {\n                this.runState.results['max-concurrent-infected']++\n            }\n\n            Object.keys(this.countersRef).forEach((state) => {\n                this.countersRef[state].current.innerText = this.runState.results[state]\n            })\n\n            if (isDesktop) {\n                this.runState.tick % 2 === 0 && this.updateGraph()\n            } else {\n                this.runState.tick % 4 === 0 && this.updateGraph()\n            }\n        }\n\n        if (this.runState.tick === TOTAL_TICKS) {\n            this.startBalls(sketch)\n            this.resetValues()\n            //replayElement.style.display = 'flex'\n        } else {\n            this.runState.tick++\n        }\n    }\n\n    startBalls = (sketch) => {\n        let id = 0\n        this.balls = []\n        Object.keys(STARTING_BALLS).forEach(state => {\n            Array.from({ length: STARTING_BALLS[state] }, () => {\n                const hasMovement = this.runState.filters.stayHome ? sketch.random(0, 100) < this.runState.config.STATIC_PEOPLE_PERCENTATGE || state === STATES.infected : true\n\n                this.balls[id] = new Ball({\n                    id,\n                    sketch,\n                    state,\n                    hasMovement,\n                    x: sketch.random(BALL_RADIUS, sketch.width - BALL_RADIUS),\n                    y: sketch.random(BALL_RADIUS, sketch.height - BALL_RADIUS)\n                }, this.runState)\n                id++\n\n                return null\n            })\n\n\n            return null\n        })\n    }\n\n    createCanvas = (sketch, parentRef) => {\n        const { height, width } = isDesktop ? DESKTOP_CANVAS_SIZE : CANVAS_SIZE\n        sketch.createCanvas(height, width).parent(parentRef)\n    }\n\n    setup = (sketch, parentRef) => {\n        this.createCanvas(sketch, parentRef)\n        this.startBalls(sketch)\n\n        matchMedia.addListener(e => {\n            isDesktop = e.matches\n            this.createCanvas(sketch, parentRef)\n            this.startBalls(sketch)\n            this.resetValues()\n        })\n\n        /* replayButton.onclick = () => {\n            this.startBalls(sketch)\n            resetValues()\n        }\n\n        deathFilter.onclick = () => {\n            this.runState.filters.death = !this.runState.filters.death\n            document.getElementById('death-count').classList.toggle('show', this.runState.filters.death)\n            this.startBalls(sketch)\n            resetValues()\n        }\n\n        stayHomeFilter.onchange = () => {\n            this.runState.filters.stayHome = !this.runState.filters.stayHome\n            this.startBalls(sketch)\n            resetValues()\n        } */\n    }\n\n    draw = (sketch) => {\n        sketch.background('white')\n        this.balls.forEach(ball => {\n            ball.checkState()\n            ball.checkCollisions({ others: this.balls })\n            ball.move()\n            ball.render()\n        })\n        this.updateCount(sketch)\n    }\n\n\n    render() {\n        return (\n            <div className=\"viz-box\">\n                <div className=\"count\">\n                    <div className=\"healthy\">Healthy<br /><span ref={this.countersRef.well}></span></div>\n                    <div className=\"sick\">Sick<br /><span ref={this.countersRef.infected}>0</span></div>\n                    <div className=\"recovered\">Recovered<br /><span ref={this.countersRef.recovered}>0</span></div>\n                    <div className=\"deaths\">Deaths<br /><span ref={this.countersRef.death}>0</span></div>\n                </div>\n                <svg ref={this.graphRef} version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" height=\"100\" width=\"100%\" aria-labelledby=\"Graph of virus spread\" role=\"img\">\n                    <title>Graph of virus spread</title>\n                </svg>\n                <Sketch ref={this.canvasRef} setup={this.setup} draw={this.draw} />\n            </div>\n        );\n    }\n}\n\n\nexport default Simulation\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\nimport SimulationView from '../../views/sim/Simulation'\n\nimport './Simulation.scss'\n\nclass SimulationComponent extends React.Component {\n\n    render() {\n        //const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                    <CurfewMessage/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 right-border\">\n                            <h2>Without Social Distancing</h2>\n                            <SimulationView motion_percentage={99}/>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <h2>With Social Distancing</h2>\n                            <SimulationView motion_percentage={10}/>\n                        </div>\n                    </div>\n                    <span>Inspiration: <a href=\"https://www.washingtonpost.com/graphics/2020/world/corona-simulator/?fbclid=IwAR1oRYsEvnJgLsvfkAz5QVz1wsA7NBeTWPvPCuW_RLiS6Wj_SWU2WLHHzR4&utm_campaign=wp_main&utm_medium=social&utm_source=facebook\" target=\"_blank\" rel=\"noopener noreferrer\">Washington Post </a></span><br/>\n                    <span>Code: github/@midudev</span>\n                </div>\n            </>\n        );\n    }\n}\n\nconst SimulationTrans = withTranslation()(SimulationComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Simulation() {\n  return (\n    <Suspense fallback=\"loading\">\n      <SimulationTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './Funds.scss'\n\nimport FData from './funds.json'\n\n// import Content from './mk.md'\n\n/* import coverFace from '../../images/cover_face.svg'\nimport handwash from '../../images/handwash.svg'\nimport dTouchFace from '../../images/dont_touch_face.svg'\nimport handRub from '../../images/handrub.svg'\nimport faceMask from '../../images/face_mask.svg'\nimport socialDistancing from '../../images/social_distancing.svg' */\n\nclass FundsComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.staticState = {\n            fundsData: FData\n        }\n        this.state = {\n            fundsData: FData\n        }\n    }\n\n    renderItems() {\n        let cols = []\n        let rows = []\n        let rowCount = 1\n        for(let i in this.state.fundsData) {\n            let item = this.state.fundsData[i]\n            if(item === undefined) {\n                continue\n            }\n            cols.push(\n                <div className=\"col-md-4 item-box\" key={i}>\n                    <div className=\"text-item\">\n                        <h2>{item.name}</h2>\n                        <p>by {item.org}</p>\n                        <p>{item.desc}</p>\n                        <span className=\"region-name\">{item.region}</span>\n                        <span className=\"cat-name\">{item.cat}</span>\n                    </div>\n                    <div className=\"link-item\">\n                        <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\"><button>Donate/Contribute Now</button></a>\n                    </div>\n                </div>\n            )\n            if(cols.length === 3) {\n                rows.push(\n                    <div className=\"row row-margin-top\" key={rowCount}>\n                        {cols}\n                    </div>\n                )\n                cols = []\n                rowCount++\n            }\n        }\n        if(cols.length > 0) {\n            rows.push(\n                <div className=\"row extra-margin-top\" key={rowCount}>\n                    {cols}\n                </div>\n            )\n        }\n        return rows\n    }\n\n    handleSearchInput(e) {\n        let searchString = e.target.value\n        let res = []\n        this.staticState.fundsData.forEach(i => {\n            if( i.name.toLowerCase().includes(searchString.toLowerCase()) || \n                i.desc.toLowerCase().includes(searchString.toLowerCase()) || \n                i.cat.toLowerCase().includes(searchString.toLowerCase()) || \n                i.region.toLowerCase().includes(searchString.toLowerCase())\n            ) {\n                res.push(i)\n            }\n        })\n\n        this.setState({\n            fundsData: res\n        })\n    }\n\n    render() {\n        //const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container funds\">\n                    <CurfewMessage/>\n                    <h1>Active Funds</h1>\n                    <input className=\"form-control form-control-lg\" type=\"text\" placeholder=\"Search\" onChange={(e) => this.handleSearchInput(e)}/>\n                    {this.renderItems()}\n                </div>\n                \n                \n                {/* <UserEngagementForm/>\n                <CityGraphics/>\n                <MarkdownContent className=\"content\" text={Content} /> */}\n            </>\n        );\n    }\n}\n\nconst FundsTrans = withTranslation()(FundsComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Funds() {\n  return (\n    <Suspense fallback=\"loading\">\n      <FundsTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './Volunteer.scss'\n\nimport VData from './volunteer.json'\n\n// import Content from './mk.md'\n\n/* import coverFace from '../../images/cover_face.svg'\nimport handwash from '../../images/handwash.svg'\nimport dTouchFace from '../../images/dont_touch_face.svg'\nimport handRub from '../../images/handrub.svg'\nimport faceMask from '../../images/face_mask.svg'\nimport socialDistancing from '../../images/social_distancing.svg' */\n\nclass VolunteerComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.staticState = {\n            volData: VData\n        }\n        this.state = {\n            volData: VData\n        }\n    }\n\n    renderItems() {\n        let cols = []\n        let rows = []\n        let rowCount = 1\n        for(let i in this.state.volData) {\n            let item = this.state.volData[i]\n            if(item === undefined) {\n                continue\n            }\n            cols.push(\n                <div className=\"col-md-4 item-box\" key={i}>\n                    <div className=\"text-item\">\n                        <h2>{item.name}</h2>\n                        <p>by {item.org}</p>\n                        <p>{item.desc}</p>\n                        <span className=\"region-name\">{item.region}</span>\n                        <span className=\"cat-name\">{item.cat}</span>\n                    </div>\n                    <div className=\"link-item\">\n                        <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\"><button>Contribute Now</button></a>\n                    </div>\n                </div>\n            )\n            if(cols.length === 3) {\n                rows.push(\n                    <div className=\"row row-margin-top\" key={rowCount}>\n                        {cols}\n                    </div>\n                )\n                cols = []\n                rowCount++\n            }\n        }\n        if(cols.length > 0) {\n            rows.push(\n                <div className=\"row extra-margin-top\" key={rowCount}>\n                    {cols}\n                </div>\n            )\n        }\n        return rows\n    }\n\n    handleSearchInput(e) {\n        let searchString = e.target.value\n        let res = []\n        this.staticState.volData.forEach(i => {\n            if( i.name.toLowerCase().includes(searchString.toLowerCase()) || \n                i.desc.toLowerCase().includes(searchString.toLowerCase()) || \n                i.cat.toLowerCase().includes(searchString.toLowerCase()) || \n                i.region.toLowerCase().includes(searchString.toLowerCase())\n            ) {\n                res.push(i)\n            }\n        })\n\n        this.setState({\n            volData: res\n        })\n    }\n\n    render() {\n        //const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container vol\">\n                    <CurfewMessage/>\n                    <h1>Active Volunteering Opportunities</h1>\n                    <input className=\"form-control form-control-lg\" type=\"text\" placeholder=\"Search\" onChange={(e) => this.handleSearchInput(e)}/>\n                    {this.renderItems()}\n                </div>\n                \n                \n                {/* <UserEngagementForm/>\n                <CityGraphics/>\n                <MarkdownContent className=\"content\" text={Content} /> */}\n            </>\n        );\n    }\n}\n\nconst VolunteerTrans = withTranslation()(VolunteerComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Volunteer() {\n  return (\n    <Suspense fallback=\"loading\">\n      <VolunteerTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Chip } from '@material-ui/core';\nimport { LocationSearching } from '@material-ui/icons';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CenterFocusStrongIcon from '@material-ui/icons/CenterFocusStrong';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport CurfewMessage from '../../views/CurfewMessage'\n\nimport './Stories.scss'\n\nimport StoriesData from './stories.json'\n\nclass StoriesComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            expanded: false,\n            truncated: true,\n            dialogDisplay: false\n        };\n\n        this.handleClose = this.handleClose.bind(this);\n\n        this.staticState = {\n            StoriesData: StoriesData,\n            dialog: {\n                title: '',\n                story: ''\n            }\n        }\n        this.state = {\n            StoriesData: StoriesData\n        }\n    }\n\n    renderItems() {\n        let cols = []\n        let rows = []\n        let rowCount = 1\n        for(let i in this.state.StoriesData) {\n            let item = this.state.StoriesData[i]\n            if(item === undefined) {\n                continue\n            }\n\n            let cat = []\n            item.category.forEach((item, idx) => {\n                cat.push(\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        icon={<CenterFocusStrongIcon color=\"primary\"/>}\n                        label={item}\n                        key={idx}\n                        color=\"secondary\"\n                    />\n                )\n            })\n            cols.push(\n                <div className=\"col-md-6 stories-item\" key={i}>\n                    <h4>{item.title}</h4>\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        icon={<LocationSearching color=\"primary\"/>}\n                        label={item.region}\n                    />\n                    <Chip\n                        size=\"small\"\n                        variant=\"outlined\"\n                        icon={<PersonIcon color=\"primary\"/>}\n                        label={item.name === '' ? 'Anonymous' : item.name}\n                        color=\"primary\"\n                    />\n                    {cat}\n                    <div className=\"message\">\n                        {item.story}\n                    </div>\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={() => this.handleReadClick(i)}>Open in a Dialog</button>\n                </div>\n            )\n            if(cols.length === 3) {\n                rows.push(\n                    <div className=\"row stories-section\" key={rowCount}>\n                        {cols}\n                    </div>\n                )\n                cols = []\n                rowCount++\n            }\n        }\n        if(cols.length > 0) {\n            rows.push(\n                <div className=\"row stories-section\" key={rowCount}>\n                    {cols}\n                </div>\n            )\n        }\n        return rows\n    }\n\n    handleSearchInput(e) {\n        let searchString = e.target.value\n        let res = []\n        this.staticState.StoriesData.forEach(i => {\n            if( i.title.toLowerCase().includes(searchString.toLowerCase()) || \n                i.region.toLowerCase().includes(searchString.toLowerCase())\n            ) {\n                res.push(i)\n            }\n        })\n\n        this.setState({\n            StoriesData: res\n        })\n    }\n\n    handleReadClick(i) {\n        this.staticState.dialog = {\n            title: this.staticState.StoriesData[i].title,\n            story: this.staticState.StoriesData[i].story\n        }\n        \n        this.setState({\n            dialogDisplay: true\n        })\n    }\n\n    handleClose() {\n        this.setState({\n            dialogDisplay: false\n        })\n    }\n\n    render() {\n        //const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container stories\">\n                    <CurfewMessage/>\n                    <h1>Citizen Stories</h1>\n                    <h5>If you have an experience or story to share which can help someone, submit it here: <a href=\"http://stories.form.cov.social\" rel=\"noopener noreferrer\" target=\"_blank\">stories.form.cov.social</a></h5>\n                    <input className=\"form-control form-control-lg\" type=\"text\" placeholder=\"Search\" onChange={(e) => this.handleSearchInput(e)}/>\n                    {this.renderItems()}\n                    <Dialog\n                        open={this.state.dialogDisplay || false}\n                        onClose={this.handleClose}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        maxWidth='md'\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">{this.staticState.dialog.title || ''}</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            {this.staticState.dialog.story}\n                        </DialogContentText>\n                        </DialogContent>\n                    </Dialog>\n                </div>\n            </>\n        );\n    }\n}\n\nconst StoriesTrans = withTranslation()(StoriesComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Stories() {\n  return (\n    <Suspense fallback=\"loading\">\n      <StoriesTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\n// import CurfewMessage from '../../views/CurfewMessage'\n\nimport './Us.scss'\n\nimport colab from '../../images/colab.svg'\nimport telegram from '../../images/telegram.svg'\nimport github from '../../images/github.svg'\n\n// import VData from './Us.json'\n\n// import Content from './mk.md'\n\n/* import coverFace from '../../images/cover_face.svg'\nimport handwash from '../../images/handwash.svg'\nimport dTouchFace from '../../images/dont_touch_face.svg'\nimport handRub from '../../images/handrub.svg'\nimport faceMask from '../../images/face_mask.svg'\nimport socialDistancing from '../../images/social_distancing.svg' */\n\nclass UsComponent extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            activeStep: 0\n        }\n    }\n\n    getSteps() {\n        return ['Reaching out to us', 'Submitting an Idea or contributing to an existing one', 'Things you can contribute to'];\n    }\n\n    getStepContent(step) {\n        switch (step) {\n            case 0:\n            return  <div className=\"step-box\">\n                        <h3>You can either reach out to us on Telegram or through Github.</h3>\n                        <a href=\"https://t.me/covid_init\" rel=\"noopener noreferrer\" target=\"_blank\"><img alt=\"\" className=\"connect-icon\" src={telegram}/></a>\n                        <a href=\"https://github.com/upperwal/covid19\" rel=\"noopener noreferrer\" target=\"_blank\"><img className=\"connect-icon\" alt=\"\" src={github}/></a>\n                    </div>;\n            case 1:\n            return <div className=\"step-box\">\n                        <h3>You can submit a new idea by opening an issue on Github or start collaborating with someone by commenting on an existing one.</h3>\n                        <a href=\"https://github.com/upperwal/covid19/issues\" rel=\"noopener noreferrer\" target=\"_blank\">Github Issues</a>\n                    </div>\n            case 2:\n            return <div className=\"step-box\">\n                        <h3>\n                            You can help us:\n                        </h3>\n                        <ul>\n                            <li>Add new ideas to the platform.</li>\n                            <li>Translate content in an Indian language.</li>\n                            <li>Write new content.</li>\n                            <li>Aggregate and preprocess data.</li>\n                            <li>Build amazing visualisations.</li>\n                            <li>Build interactive demos for educational purpose.</li>\n                            <li>Collect citizen stories.</li>\n                        </ul>\n                    </div>;\n            default:\n            return 'Unknown step';\n        }\n    }\n\n    handleNext = () => {\n        this.setState({\n            activeStep: this.state.activeStep + 1\n        })\n    };\n\n    handleBack = () => {\n        this.setState({\n            activeStep: this.state.activeStep - 1\n        })\n    };\n\n    handleReset = () => {\n        this.setState({\n            activeStep: 0\n        })\n    };\n\n    render() {\n        let steps = this.getSteps()\n        return (\n            <>\n                <div className=\"container us\">\n                    <h1>We are super excited to get you involved.</h1>\n                    <div className=\"row\">\n                        <div className=\"col-md-5\">\n                            <img src={colab} alt=\"\"/>\n                        </div>\n                        <div className=\"col-md-7\">\n                            <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\n                                {steps.map((label, index) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                    <StepContent>\n                                    {this.getStepContent(index)}\n                                    <div>\n                                        <div>\n                                        <Button\n                                            disabled={this.state.activeStep === 0}\n                                            onClick={this.handleBack}\n                                            className=\"\"\n                                        >\n                                            Back\n                                        </Button>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={this.handleNext}\n                                            className=\"step-button\"\n                                        >\n                                            {this.state.activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                        </div>\n                                    </div>\n                                    </StepContent>\n                                </Step>\n                                ))}\n                            </Stepper>\n                            {this.state.activeStep === steps.length && (\n                                <Paper square elevation={0} className=\"\">\n                                <Typography>Looking forward to your contribution :)</Typography>\n                                <Button onClick={this.handleReset} className=\"\">\n                                    Reset\n                                </Button>\n                                </Paper>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                \n                \n                {/* <UserEngagementForm/>\n                <CityGraphics/>\n                <MarkdownContent className=\"content\" text={Content} /> */}\n            </>\n        );\n    }\n}\n\nconst UsTrans = withTranslation()(UsComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Us() {\n  return (\n    <Suspense fallback=\"loading\">\n      <UsTrans />\n    </Suspense>\n  );\n}\n","import React from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\n\nimport './Cholo.scss'\n\nimport districtTopoJson from './district_topojson.json'\n\nclass Cholo extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.svgRef = React.createRef();\n    }\n\n    plot() {\n        \n        let svg = d3.select(this.refs.svgRef)\n\n        let node = svg.node().getBoundingClientRect()\n\n        let mapData = this.props.mapData;\n        let max = this.props.range.max\n\n        var projection = d3.geoMercator()\n            .center([81.966182,22.115736])\n            .translate([node.width/2, node.height/2])\n            .scale(900);\n    \n        var path = d3.geoPath().projection(projection);\n\n        /* var tooltip = d3.select('body').append('div')\n            .attr('class', 'hidden tooltip'); */\n\n        let self = this\n\n        svg.append('g')\n            .attr('class', 'district')\n            .selectAll('path')\n            .data(topojson.feature(districtTopoJson, districtTopoJson.objects.district_geojson).features)\n            .enter()\n            .append('path')\n            .attr('class', function(d) {\n                let districtName = d.properties.dtname.toLowerCase()\n                if(!(districtName in mapData)) {\n                    return \"r0-9\"\n                }\n                let classNum = Math.ceil(mapData[districtName]/max*8)\n                console.log(mapData[districtName], classNum, mapData[districtName]/max*8, max)\n                return \"r\" + classNum + \"-9\";  \n                //console.log(classNum + ': ' + districtName, mapData[districtName], max)\n                //return 'gray-fill'\n                //return \"r\" + '5' + \"-9\";  \n            })\n            .attr('d', path)\n            .on('mousemove', function(d) {\n                // let districtName = d.properties.dtname.toLowerCase()\n                /* var mouse = d3.mouse(svg.node()).map(function(d) {\n                    return parseInt(d);\n                }); */\n                d3.select(this).classed('highlighted-gray', true)\n                /* tooltip.classed('hidden', false)\n                    .attr('style', 'left:' + (mouse[0]) +\n                            'px; top:' + (mouse[1]+110) + 'px')\n                    .html(districtName + ': ' + (mapData[districtName] || 0)); */\n                self.props.onHoverRegion(d)\n            })\n            .on('mouseout', function() {\n                /* tooltip.classed('hidden', true); */\n                d3.select(this).classed('highlighted-gray', false)\n            })\n        \n        //console.log(topojson.mesh(districtTopoJson, districtTopoJson.objects.district_geojson).coordinates)\n        /* svg.append('g')\n            .attr('class', 'bo')\n            .selectAll('path')\n            .data([10,20,30])\n            .attr('stroke', '#000')\n            .attr('fill', 'none')\n            .attr('stroke-width', 2)\n            .attr(\n                'd',\n                path(topojson.mesh(districtTopoJson, districtTopoJson.objects.district_geojson))\n            ); */\n        \n        svg.append(\"path\")\n            .datum(topojson.mesh(districtTopoJson, districtTopoJson.objects.district_geojson))\n            .attr(\"class\", \"border\")\n            .attr(\"d\", path);\n    }\n\n    componentDidMount() {\n        this.plot()\n    }\n\n    render() {\n        // const { t } = this.props;\n\n        /* let center = [24.115736, 77.979682] */\n\n        console.log('Cholo')\n        \n        return (\n            <>\n                <svg ref=\"svgRef\" width=\"100%\" height=\"600\"></svg>\n            </>\n        );\n    }\n}\nexport default Cholo\n","import React, { useState, useEffect, Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ChoroplethMap from './Cholo';\n\nimport './MapDistrict.scss'\n\nimport state_code_to_name from './state_code_to_name.json'\n\nconst Stats = (props) => {\n    const stateData = props.data.stateData\n    const disData = props.data.disData\n    const districtName = props.data.districtName\n    const stateCode = props.data.stateCode\n\n    console.log(stateCode)\n    console.log(stateData)\n    console.log(disData)\n    return(\n        <>\n            <div className=\"info-container-box\">\n                <div className=\"info-container-box-title\">District</div>\n                <h2>{districtName}</h2>\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <div className=\"stats-box active\">\n                            <span className=\"title\">Active</span>\n                            <span className=\"number\">{disData[districtName.toLowerCase()] || '-'}</span>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"stats-box cured\">\n                            <span className=\"title\">Cured</span>\n                            <span className=\"number\">-</span>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"stats-box death\">\n                            <span className=\"title\">Deaths</span>\n                            <span className=\"number\">-</span>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"stats-box others\">\n                            <span className=\"title\">Total</span>\n                            <span className=\"number\">-</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"info-container-box\">\n                <div className=\"info-container-box-title\">State</div>\n                <h2>{state_code_to_name[stateCode]}</h2>\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <div className=\"stats-box active\">\n                            <span className=\"title\">Active</span>\n                            <span className=\"number\">{stateData[stateCode].activePositiveCases || '-'}</span>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"stats-box cured\">\n                            <span className=\"title\">Cured</span>\n                            <span className=\"number\">{stateData[stateCode].curedCases || '-'}</span>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"stats-box death\">\n                            <span className=\"title\">Deaths</span>\n                            <span className=\"number\">{stateData[stateCode].deathCases || '-'}</span>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n                        <div className=\"stats-box others\">\n                            <span className=\"title\">Total</span>\n                            <span className=\"number\">{stateData[stateCode].totalPositiveCases || '-'}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nfunction MapDistrictComponent(props) {\n\n    //const [maxDistrictCount, setMaxDistrictCount] = useState(0)\n    const [mapStateDistrictData, setMapStateDistrictData] = useState({})\n    const [displayDistrict, setDisplayDistrict] = useState({\n        name: 'South Delhi',\n        stateCode: 'IN-DL'\n    })\n\n    /* constructor(props) {\n        super(props)\n        this.state = {\n            displayDistrict: {\n                name: 'South Delhi',\n                stateCode: 'IN-DL'\n            }\n        }\n    } */\n\n    /* extractData() {\n        let res = {}\n        let stateData = {}\n        let max = 0\n        covidData.item.countries[0].states.forEach(function(s) {\n            stateData[s.code] = s.stats\n            if(s.districts === undefined) {\n                return\n            }\n            s.districts.forEach((d) => {\n                res[d.code] = d.stats.activePositiveCases\n                if(max < d.stats.activePositiveCases) {\n                    max = d.stats.activePositiveCases\n                }\n            })\n        })\n        this.setState({\n            mapData: res,\n            mapDataStates: stateData,\n            maxDistrictCount: max\n        })\n    } */\n\n    /* componentWillMount() {\n        this.extractData()\n    } */\n\n    /* function toCamelCase(str) {\n        str = str.toLowerCase()\n        str = str[0].toUpperCase() + str.substr(1)\n        return str.replace(/ (.)/, function($1) {return ' ' + $1.toUpperCase()})\n            \n    } */\n\n    \n\n    \n        // const { t } = this.props;\n\n        /* let districtName = displayDistrict.name || '-'\n        \n        let stateCode = {}\n        let disData = {}\n        let stateData = {\n            mapData: {}\n        }\n        if(this.props.data.states !== undefined) {\n            stateData = this.props.data.states\n            stateCode = displayDistrict.stateCode\n            disData = this.props.data.states.mapDataStates[stateCode] || {}\n        }\n         \n        this.statsView = <Stats/> */\n\n        function hover(d) {\n            setDisplayDistrict({\n                name: d.properties.dtname,\n                stateCode: d.properties.st_code\n            })\n        }\n\n        function mapView() {\n            if(mapStateDistrictData.mapDataDistricts === undefined) {\n                return <h1>Loading...</h1>\n            } else {\n                return (\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <h3>Map</h3>\n                            <ChoroplethMap \n                                mapData={mapStateDistrictData.mapDataDistricts}\n                                range={{min: 0, max: mapStateDistrictData.maxDistrictCount}}\n                                onHoverRegion={(d) => hover(d)}\n                            />\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Stats\n                                data = {{\n                                    stateData: mapStateDistrictData.mapDataStates,\n                                    disData: mapStateDistrictData.mapDataDistricts,\n                                    districtName: displayDistrict.name,\n                                    stateCode: displayDistrict.stateCode\n                                }}\n                            />\n                        </div>\n                    </div>\n                );\n            }\n        }\n\n        useEffect(() => {\n            if(props.data.states !== undefined) {\n                setMapStateDistrictData(props.data.states)\n            }\n        }, [props.data.states])\n        \n        return (\n            <>\n                <div className=\"container\">\n                    {mapView()}\n                </div>\n            </>\n        );\n}\n\nconst MapDistrictTrans = withTranslation()(MapDistrictComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function MapDistrict(props) {\n    return (\n        <Suspense fallback=\"loading\">\n        <MapDistrictTrans data={props.data}/>\n        </Suspense>\n    );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport './Header.scss'\n\nclass HeaderComponent extends React.Component {\n\n    changeLanguage(event, i18n) {\n        let lang = event.target.value\n        i18n.changeLanguage(lang);\n        console.log('language: ' + lang)\n    }\n    render() {\n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n                    \n                        <ul>\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"#\">Learn</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"/sd\">What is Social Distancing?</Link>\n                                        {/* <a href=\"https://www.mohfw.gov.in/pdf/SocialDistancingAdvisorybyMOHFW.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">What is Social Distancing and Janata Curfew?</a> */}\n                                        <Link to=\"/sq\">How one should practice Self Quarantine</Link>\n                                        <a href=\"https://www.mohfw.gov.in/pdf/Mask-Eng.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to wear a mask?</a>\n                                        <a href=\"https://www.mohfw.gov.in/pdf/FINAL_14_03_2020_ENg.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to get tested for covid-19?</a>\n                                        {/* <Link to=\"/myths\">Myths</Link> */}\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"#\">Get Help</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"\">WHO</Link>\n                                        <Link to=\"\">Ministry of Health</Link>\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"/us\">Contribute</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"/us\">Get involved with us</Link>\n                                        <Link to=\"/funds\">Active Funds</Link>\n                                        <Link to=\"/volunteer\">Volunteer</Link>\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <Link to=\"/stories\">Citizen Stories</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/simulation\">Simulation</Link>\n                            </li>\n                            \n                            \n                            \n                            \n                        </ul>\n                        <div>\n                            {/* Language:\n                            <select onChange={(e) => this.changeLanguage(e, this.props.i18n)} defaultValue={this.props.i18n.language}>\n                                <option value=\"en\">English</option>\n                                <option value=\"in_urd\">اردو</option>\n                                <option value=\"in_hi\">हिंदी</option>\n                                <option value=\"in_knn\">ಕೆನಡಾ</option>\n                                <option value=\"in_tam\">தமிழ்</option>\n                                <option value=\"in_od\">ଓଡ଼ିଆ</option>\n                                <option value=\"in_punjabi\">ਪੰਜਾਬੀ</option>\n                            </select> */}\n                            <FormControl variant=\"outlined\" className=\"header-box\" margin='dense'>\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Language</InputLabel>\n                            <Select\n                                native\n                                value={this.props.i18n.language}\n                                onChange={(e) => this.changeLanguage(e, this.props.i18n)}\n                                label=\"Language\"\n                                inputProps={{\n                                    name: 'language',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                            <option value=\"en\">English</option>\n                            <option value=\"in_urd\">اردو</option>\n                            <option value=\"in_hi\">हिंदी</option>\n                            <option value=\"in_knn\">ಕೆನಡಾ</option>\n                            <option value=\"in_tam\">தமிழ்</option>\n                            <option value=\"in_od\">ଓଡ଼ିଆ</option>\n                            <option value=\"in_punjabi\">ਪੰਜਾਬੀ</option>\n                            </Select>\n                        </FormControl>\n                        </div>\n\n                        <div>\n                            {/* District: */}\n                            <TextField\n                                label=\"District\"\n                                id=\"outlined-size-small\"\n                                defaultValue=\"\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                className=\"header-text header-box\"\n                            />\n                        </div>\n\n\n                    </div>\n                </nav>\n                \n            </header>\n            \n        )\n    }\n}\n\nconst HeaderTrans = withTranslation()(HeaderComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Header() {\n  return (\n    <Suspense fallback=\"loading\">\n      <HeaderTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './Footer.scss'\n\nclass FooterComponent extends React.Component {\n    render() {\n        return (\n            <footer>\n                \n            </footer>\n            \n        )\n    }\n}\n\nconst FooterTrans = withTranslation()(FooterComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Footer() {\n  return (\n    <Suspense fallback=\"loading\">\n      <FooterTrans />\n    </Suspense>\n  );\n}\n","import dlake from 'pravah-datalake'\nimport stateCode from './state_code_to_name.json'\nimport wroldData from './world_data.json'\n\nclass Data {\n    latest() {\n        let डेटालेक = new dlake.Datalake('/Covid19District', '1cDpdkE2Qvq26OvUAxkXswmHcXEPUBS6Wcig6ERQvPrQ')\n        return new Promise((resolve, reject) => {\n            डेटालेक.latest(3).then(res => {\n\n                let p = new Pipeline()\n                p.add('mapping_past_data', (args) => {\n                    return {\n                        pastMap: this.mapData(args[1].item),\n                        latestData: args[0].item\n                    }\n                    \n                }).add('diff_agg', (args) => {\n                    return this.diffAndAggData(args.pastMap, args.latestData)\n                }).add('improved_data', args => {\n                    let diff = args.diffStats\n                    let improved = []\n                    let sortupdate=[]\n                    Object.keys(diff).forEach(k => {\n                        // if(diff[k].activePositiveCases < 0) {\n                        //     improved.push(k)\n                        // }\n                        if(k === 'india' || k === 'timestamp') {\n                            return\n                        }\n                        sortupdate.push({...diff[k], 'state_code': k})\n                    })\n                    sortupdate.sort((a, b) => {\n                        return a.activePositiveCases - b.activePositiveCases\n                    })\n\n                    for(let i=0; i<sortupdate.length; i++) {\n                        if(sortupdate[i].activePositiveCases >= 0) {\n                            break\n                        }\n                        improved.push(sortupdate[i])\n                    }\n                    return {\n                        ...args,\n                        improved: improved,\n                        worstHit: sortupdate.reverse().slice(0, 6)\n\n                    }\n                }).add('static_data', args => {\n                    return {\n                        ...args,\n                        stateCode: stateCode,\n                        worldData: wroldData\n                    }\n                })\n                resolve(p.execute(res))\n            })\n            \n        })\n    }\n\n    mapData(d) {\n        let res = {}\n        res['india'] = d.countries[0].stats\n        res['timestamp'] = d.header.timestamp\n\n        d.countries[0].states.forEach(s => {\n            res[s.code] = s.stats\n        })\n        console.log(res)\n\n        return res\n    }\n\n    diff(presentStats, pastStats) {\n        return {\n            'curedCases': (presentStats.curedCases || 0) - ((pastStats || {}).curedCases || 0),\n            'totalPositiveCases': (presentStats.totalPositiveCases || 0) - ((pastStats || {}).totalPositiveCases || 0),\n            'activePositiveCases': (presentStats.activePositiveCases || 0) - ((pastStats || {}).activePositiveCases || 0),\n            'deathCases': (presentStats.deathCases || 0) - ((pastStats || {}).deathCases || 0)\n        }\n    }\n\n    diffAndAggData(pastMap, latestData) {\n        // Aggregate\n        let worstAffectedStates = [];\n        let leastAffectStates = [];\n\n        // Detailed\n        let statesStats = {}\n\n        // Diff\n        let diffStats = {}\n\n        // Temp\n        let activePosStateArr = []\n        latestData.countries[0].states.forEach(s => {\n            if(s.stats.activePositiveCases !== undefined) {\n                statesStats[s.code] = s.stats\n                activePosStateArr.push([s.code, s.stats.activePositiveCases || 0])\n                diffStats[s.code] = this.diff(s.stats, pastMap[s.code])\n            }\n        })\n        diffStats['timestamp'] = latestData.header.timestamp - pastMap.timestamp\n        diffStats['india'] = this.diff(latestData.countries[0].stats, pastMap['india'])\n\n        activePosStateArr = activePosStateArr.sort((a, b) => {\n            return (a[1] - b[1]) \n        })\n\n        worstAffectedStates = activePosStateArr.slice(activePosStateArr.length - 6).reverse()\n        leastAffectStates = activePosStateArr.slice(0, 6)\n\n        /* let min = activePosStateArr[0][1]\n        for(let i=0; i < activePosStateArr.length; i++) {\n            if(activePosStateArr[i][1] > min) {\n                break\n            }\n            leastAffectStates.push(activePosStateArr[i][0])\n        }\n\n        let max = activePosStateArr[activePosStateArr.length - 1][1]\n        for(let i=activePosStateArr.length - 1; i > -1; i--) {\n            if(activePosStateArr[i][1] < max) {\n                break\n            }\n            worstAffectedStates.push(activePosStateArr[i][0])\n        } */\n        \n\n        return {\n            worstAffectedStates: worstAffectedStates,\n            leastAffectStates: leastAffectStates,\n            statesStats: statesStats,\n            pastMap: pastMap,\n            diffStats: diffStats,\n            countryStats: latestData.countries[0].stats,\n            timestamp: parseInt(latestData.header.timestamp)\n        }\n\n        /* let res = {};\n        let stateData = {};\n        let max = 0;\n        let maxStateActiveCount = 0;\n        let worstState;\n        states.forEach(function(s) {\n            stateData[s.code] = s.stats\n            if(maxStateActiveCount < s.stats.activePositiveCases || 0) {\n                worstState = s\n            }\n            if(s.districts === undefined) {\n                return\n            }\n            s.districts.forEach((d) => {\n                res[d.code] = d.stats.activePositiveCases\n                if(max < d.stats.activePositiveCases) {\n                    max = d.stats.activePositiveCases\n                }\n            })\n        })\n        return {\n            mapDataDistricts: res,\n            mapDataStates: stateData,\n            maxDistrictCount: max,\n            worstState: worstState\n        } */\n    }\n}\n\nclass Pipeline {\n    constructor() {\n        this.funcs = []\n    }\n    add(name, func) {\n        this.funcs.push(func)\n        return this\n    }\n\n    execute(x) {\n        let y = x\n        this.funcs.forEach(f => {\n            y = f(y)\n        })\n        return y\n    }\n}\n\nexport default Data","import React from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom'\n\nimport './App.scss';\n\n\nimport Home from './userpages/home/Home'\nimport SD from './userpages/social_distancing/SocialDistancing'\nimport SQ from './userpages/self_quarantine/SelfQuarantine'\nimport Myths from './userpages/myths/Myths'\nimport Simulation from './userpages/simulation/Simulation'\nimport Funds from './userpages/funds/Funds'\nimport Volunteer from './userpages/volunteer/Volunteer'\nimport Stories from './userpages/stories/Stories'\nimport Us from './userpages/us/Us'\nimport MapDistrict from './userpages/map/MapDistrict'\n\nimport Header from './views/header/Header'\nimport Footer from './views/footer/Footer'\n\nimport Data from './utils/Data'\n\nclass App extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tdata: {}\n\t\t}\n\t}\n\n  \tcomponentDidMount() {\n\t\tlet डेटा = new Data()\n\t\tडेटा.latest().then(d => {\n\t\t\tthis.setState({\n\t\t\t\tdata: d\n\t\t\t})\n\t\t})\n\t}\n\n  \trender() {\n\t\t  return (\n\t\t\t<div className=\"App\">\n\t\t\t\n\t\t\t\t<Router basename='/'>\n\t\t\t\t\t<Header/>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact \n\t\t\t\t\t\t\tpath=\"/\" \n\t\t\t\t\t\t\trender={(props) => <Home {...props} data={this.state.data} /> }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route path=\"/sd\" component={SD} />\n\t\t\t\t\t\t<Route path=\"/sq\" component={SQ} />\n\t\t\t\t\t\t<Route path=\"/myths\" component={Myths} />\n\t\t\t\t\t\t<Route path=\"/simulation\" component={Simulation} />\n\t\t\t\t\t\t<Route path=\"/funds\" component={Funds} />\n\t\t\t\t\t\t<Route path=\"/volunteer\" component={Volunteer} />\n\t\t\t\t\t\t<Route path=\"/stories\" component={Stories} />\n\t\t\t\t\t\t<Route path=\"/us\" component={Us} />\n\t\t\t\t\t\t<Route \n\t\t\t\t\t\t\tpath=\"/map\" \n\t\t\t\t\t\t\trender={(props) => <MapDistrict {...props} data={this.state.data}/>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Switch>\n\t\t\t\t\t<Footer/>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    backend: {\n        loadPath: '/locales/{{lng}}/{{ns}}.json'\n    },\n    fallbackLng: 'en',\n    debug: false,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}