{"version":3,"sources":["userpages/home/coronavirus.svg","userpages/list/scene.yaml","userpages/fraud/fraud.svg","images/cover_face.svg","images/handwash.svg","images/dont_touch_face.svg","images/handrub.svg","images/face_mask.svg","images/social_distancing.svg","utils/LocationServices.jsx","views/CurfewMessage.js","userpages/home/Home.jsx","userpages/list/Map.jsx","userpages/list/MapListPage.jsx","userpages/fraud/Fraud.jsx","views/header/Header.js","views/footer/Footer.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["module","exports","LocationServices","this","getLocation","callback","navigator","geolocation","getCurrentPosition","res","coords","console","log","getDistrict","locationObject","fetch","longitude","latitude","then","json","district","features","text","JanataCurfewComponent","t","props","className","React","Component","withTranslation","HomeTrans","searchOptions","title","short","chipArr","forEach","s","idx","push","key","to","Chip","avatar","Avatar","label","onClick","undefined","data","locationState","src","CovidIcon","alt","Autocomplete","id","options","getOptionLabel","option","style","renderInput","params","TextField","fullWidth","placeholder","required","variant","size","icon","color","Home","fallback","Map","useState","mapState","setMapState","drawerState","setDrawerState","activeMarkerState","setActiveMarkerState","findResponseState","setFindResponseState","useEffect","lat","lon","method","headers","body","JSON","stringify","item","length","Object","keys","center","map","L","tap","Tangram","leafletLayer","scene","attribution","addTo","latLon","greenIcon","iconUrl","iconSize","iconAnchor","popupAnchor","redIcon","blueIcon","d","updates","stock_availability","marker","location","coordinates","reverse","customId","on","e","target","renderMarkers","setView","renderMap","panTo","LatLng","open","renderAvailabilityView","next_restock_date","Date","str","toLocaleDateString","toLocaleTimeString","getReadableDate","IconButton","aria-label","value","find","v","Fragment","Drawer","anchor","onClose","event","type","name","fontSize","href","address","time","min","Math","round","floor","getUpdateTimeDiffMin","date_updated","Divider","poc","n","phone","renderPoC","dangerouslySetInnerHTML","__html","comments","replace","a","b","renderDetailedView","MapListPage","match","FraudTrans","searchInput","useRef","searchResults","setSearchResults","openSnackbar","message","snackbar","setSnackbar","openDialog","setOpenDialog","account","upi","details","region","r_email","r_phone","formValues","setFormValues","handleChangeForm","handleClose","reason","handleCloseDialog","FraudLogo","Grid","container","spacing","xs","inputRef","Button","current","renderSearchSummary","Table","TableHead","TableRow","TableCell","align","TableBody","r","date_added","entity_name","comment","renderSearchResult","renderTable","Dialog","aria-labelledby","DialogTitle","DialogContent","autoFocus","margin","onChange","multiline","rows","marginTop","fontFamily","DialogContentText","DialogActions","_id","Snackbar","autoHideDuration","elevation","severity","Fraud","HeaderComponent","i18n","lang","changeLanguage","data-toggle","data-target","aria-controls","aria-expanded","rel","FormControl","InputLabel","htmlFor","Select","native","language","inputProps","defaultValue","FooterComponent","FooterTrans","Footer","App","setLocationState","basename","exact","path","render","Boolean","window","hostname","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","interpolation","escapeValue","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac8a98d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coronavirus.69dd660c.svg\";","module.exports = __webpack_public_path__ + \"static/media/scene.8eebac77.yaml\";","module.exports = __webpack_public_path__ + \"static/media/fraud.334eb474.svg\";","module.exports = __webpack_public_path__ + \"static/media/cover_face.8458c828.svg\";","module.exports = __webpack_public_path__ + \"static/media/handwash.2708ccaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/dont_touch_face.2f3c3d90.svg\";","module.exports = __webpack_public_path__ + \"static/media/handrub.f0a5d838.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_mask.0a2b4dab.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_distancing.f11225ad.svg\";","\nvar LocationServices = function() {\n    this.getLocation = function(callback) {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(function(res) {\n                callback(res.coords)\n            });\n        } else {\n            console.log(\"Geolocation is not supported by this browser.\")\n        }\n    }\n\n    this.getDistrict = function(callback) {\n        this.getLocation(function(locationObject) {\n            fetch('https://api.mapbox.com/geocoding/v5/mapbox.places/'+locationObject.longitude+','+locationObject.latitude+'.json?types=district&access_token=pk.eyJ1IjoidXBwZXJ3YWwiLCJhIjoiY2lxNmVvcGo4MDA3MGZ2bTY1b255OW14dSJ9.h18VG_xCO7yQXMajIqKyHg')\n            .then(res => res.json())\n            .then(res => {\n                callback({\n                    locationObject: locationObject,\n                    district: res.features[0].text\n                })\n                console.log(res.features[0].text)\n            })\n        })\n        \n    }\n}\n\nexport default LocationServices\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nclass JanataCurfewComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"imp-message\">\n                    <h1>{t('sd.jan_curfew_message')}</h1>\n                    {<span>{t('sd.jan_curfew_submessage')}</span>}\n                </div>\n            </>\n        );\n    }\n}\n\nconst JanataCurfewTrans = withTranslation()(JanataCurfewComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function JanataCurfew() {\n  return (\n    <Suspense fallback=\"loading\">\n      <JanataCurfewTrans />\n    </Suspense>\n  );\n}\n","import React, { useState, Suspense } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { withTranslation } from 'react-i18next';\nimport {Pie} from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\n\nimport CurfewMessage from '../../views/CurfewMessage';\nimport LocationServices from '../../utils/LocationServices';\n\nimport './Home.scss'\n// import Content from './mk.md'\n\nimport CovidIcon from './coronavirus.svg';\nimport stateColour from './state_code_to_colour.json'\nimport coverFace from '../../images/cover_face.svg'\nimport handwash from '../../images/handwash.svg'\nimport dTouchFace from '../../images/dont_touch_face.svg'\nimport handRub from '../../images/handrub.svg'\nimport faceMask from '../../images/face_mask.svg'\nimport socialDistancing from '../../images/social_distancing.svg'\n\nfunction HomeComponent(props) {\n    const searchOptions = [\n        { title: 'Oxygen Cylinder', short: 'O2'},\n        { title: 'ICU Bed', short: 'I'},\n        { title: 'Ventilator Bed', short: 'V'}\n    ]\n\n        \n    var chipArr = []\n    searchOptions.forEach((s, idx) => {\n        chipArr.push(\n            <Link key={idx} to={'/list/' + s.title}>\n                <Chip avatar={<Avatar>{s.short}</Avatar>} label={s.title} onClick={() => {}} />\n            </Link>\n        )\n    })\n    let district = 'Identifying...';\n    if(props.data.locationState.district != undefined) {\n        district = props.data.locationState.district;\n    }\n\n\n    return (\n        <section className=\"Home\">\n            <div className=\"container\">\n                {/* <CurfewMessage/> */}\n\n                <img src={CovidIcon} alt=\"\"/>\n\n                <div className=\"seek-container\">\n                    <h1 className=\"seek-message\">I am looking for </h1>\n                    <Autocomplete\n                        id=\"seek-input\"\n                        options={searchOptions}\n                        getOptionLabel={(option) => option.title}\n                        style={{}}\n                        renderInput={(params) => <TextField {...params} fullWidth={true} placeholder=\"Start typing for suggestions\" required={true} label=\"\" variant=\"outlined\" />}\n                    />\n                    <div className=\"chip-container\">\n                        {chipArr}\n                    </div>\n                </div>\n\n                <div className=\"location-identification-container\">\n                    <p>We need your location to give you good search results. You location is neither saved or shared with anyone.</p>\n                    {/* <p>Your District: </p> */}\n                    <Chip\n                        variant=\"outlined\"\n                        size=\"small\"\n                        icon={<MyLocationIcon />}\n                        label={district}\n                        color=\"primary\"\n                    />\n                </div>\n                \n                \n                {/* <div className=\"stats-container\">\n                    \n                    <p className=\"update-date\">Updated at: {updateDate.toLocaleString()} [changes since {(diffTimestamp / (3600)).toFixed(1)} hours]</p>\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                            <div className=\"stats-box active\">\n                                <span className=\"title\">Active Cases</span>\n                                <span className=\"number\">{data.activePositiveCases || '-'}\n                                    <span className=\"change-in-value\"> [{this.changeValue(diffCountry.activePositiveCases)}]</span>\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className=\"stats-box cured\">\n                                <span className=\"title\">Cured Cases</span>\n                                <span className=\"number\">{data.curedCases || '-'}\n                                    <span className=\"change-in-value\"> [{this.changeValue(diffCountry.curedCases)}]</span>\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className=\"stats-box death\">\n                                <span className=\"title\">Deaths</span>\n                                <span className=\"number\">{data.deathCases || '-'}\n                                    <span className=\"change-in-value\"> [{this.changeValue(diffCountry.deathCases)}]</span>\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className=\"stats-box others\">\n                                <span className=\"title\">Total Cases</span>\n                                <span className=\"number\">{data.totalPositiveCases || '-'}\n                                    <span className=\"change-in-value\"> [{this.changeValue(diffCountry.totalPositiveCases)}]</span>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"other-cases\">Other Cases: {data.otherCases}</p>\n                    <div className=\"source\"><a href=\"https://www.mohfw.gov.in/\" rel=\"noopener noreferrer\" target=\"_blank\">Ministry of Health and Family Welfare</a></div>\n                    \n                </div>\n\n                <div className=\"summary\">\n                    <div className=\"affected-region\">\n                        {this.mostAffectedView(affectedStates.leastAffectStates, stateCodeNameMap, 'blue', 'Least Affected States (Active  Cases)')}\n                        <br/>\n                        {this.mostAffectedView(affectedStates.worstAffectedStates, stateCodeNameMap, 'red', 'Most Affected States (Active  Cases)')}\n                    </div>\n                    <hr/>\n                    {this.updatesView(\n                        affectedStates.worstAffectedStates, \n                        stateCodeNameMap,\n                        diffData,\n                        data,\n                        worldStats,\n                        diffTimestamp,\n                        recoveryPath,\n                        worstHit\n                    )}\n                </div>\n\n                <div className=\"row stats-viz\">\n                    <div className=\"col-md-6 viz-chart\">\n                        <h4 className=\"center\">Total Cases </h4>\n                        <h6 className=\"center\"> 8 States with most cases </h6>\n                        <Pie data={pie1} />\n                    </div>\n                    <div className=\"col-md-6 viz-chart\">\n                        <h4 className=\"center\">Active Positive Cases</h4>\n                        <h6 className=\"center\"> 8 States with most cases </h6>\n                        <Pie data={pie2} />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <iframe className=\"embed-video\" title=\"Information WHO\" src={t('home.resources.who')} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </div>\n                    <div className=\"col-md-6 info-box\">\n                        <h2>{t('home.what_is_corona')}</h2>\n                        {t('home.what_is_corona_answer')} <code>{t('home.what_is_corona_punch')}</code>\n                        <div className=\"source\"><a href=\"https://www.who.int/news-room/q-a-detail/q-a-coronaviruses\" rel=\"noopener noreferrer\" target=\"_blank\">World Health Organization</a></div>\n                    </div>\n                </div>\n                <div className=\"prevent-box\">\n                    <h1>{t('home.how_to_prevent_infection')}</h1>\n                    <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            <img className=\"minor-image\" src={handwash} alt=\"Handwash\"/>\n                            <h3>{t('home.handwash')}</h3>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <img className=\"minor-image\" src={coverFace} alt=\"cover your face\"/>\n                            <h3>{t('home.cover_face')}</h3>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <img className=\"minor-image\" src={dTouchFace} alt=\"Handwash\"/>\n                            <h3>{t('home.dont_touch_face')}</h3>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            <img className=\"minor-image\" src={handRub} alt=\"Handwash\"/>\n                            <h3>{t('home.handrub')}</h3>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <img className=\"minor-image\" src={socialDistancing} alt=\"Handwash\"/>\n                            <h3>{t('home.social_distancing')}</h3>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <img className=\"minor-image\" src={faceMask} alt=\"Handwash\"/>\n                            <h3>{t('home.mask')}</h3>\n                        </div>\n                    </div>\n                </div> */}\n            </div>\n            \n        </section>\n    );\n}\n\nconst HomeTrans = withTranslation()(HomeComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Home(props) {\n    console.log(props)\n    return (\n        <Suspense fallback=\"loading\">\n        <HomeTrans data={props}/>\n        </Suspense>\n    );\n}\n","import React, { useRef, useEffect, useLayoutEffect, useState } from 'react';\nimport L from 'leaflet'\nimport Tangram from 'tangram'\nimport { Link } from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nimport 'leaflet/dist/leaflet.css'\nimport './Map.scss'\n\nimport Data from './res.json';\n\nimport scene from './scene.yaml';\n\nfunction Map(props) {\n\n    // console.log(props.item)\n\n    const [mapState, setMapState] = useState({})\n    const [drawerState, setDrawerState] = useState(false)\n    const [activeMarkerState, setActiveMarkerState] = useState(0)\n    const [findResponseState, setFindResponseState] = useState(undefined)\n    \n\n    const trafficLightMarkerMap = {};\n    const laneTypeMap = {};\n    const markerMap = {};\n    const trafficSignalMap = {};\n\n    useEffect(() => {\n        if(props.locationState.locationObject != undefined) {\n            var lat = props.locationState.locationObject.latitude\n            var lon = props.locationState.locationObject.longitude\n            \n            fetch('http://localhost:4000/v1/info/find', {\n                method: 'POST',\n                headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    \"tags\": props.item,\n                    \"location\": {\n                        \"type\": \"Point\",\n                        \"coordinates\": [lon, lat]\n                    },\n                    \"max_distance\": 1000000\n                })\n            }).then(res => res.json())\n            .then(res => {\n                if(res.length != 0) {\n                    setFindResponseState(res)\n                } else {\n                    console.log('Sorry. Coudn\\'t find any resources.')\n                }\n            })\n        }\n    }, [props])\n\n    useEffect(() => {\n\n        if(props.locationState.locationObject != undefined && findResponseState != undefined) {\n            var lat = props.locationState.locationObject.latitude\n            var lon = props.locationState.locationObject.longitude\n\n            if(Object.keys(mapState).length === 0) {\n                renderMap([lat, lon])\n            } else {\n                mapState.panTo(new L.LatLng(lat, lon));\n            }\n        }\n        \n    }, [findResponseState])\n\n    // useEffect(() => {\n    //     console.log(findResponseState)\n    //     renderMarkers(mapState)\n    // }, [])\n\n    function renderMap(center) {\n        var zoomDefault = 13\n        var map = L.map('MapPlot', {\n            tap: false\n        });\n        var tangramLayer = Tangram.leafletLayer({\n            scene: scene,\n            attribution: '<a href=\"https://mapzen.com/tangram\" target=\"_blank\">Tangram</a> | &copy; OSM contributors'\n        });\n        tangramLayer.addTo(map);\n        \n        console.log(props)\n        let latLon = center == undefined ? [28.3781432, 77.3066081] : center\n\n        \n        renderMarkers(map)\n        \n        map.setView(latLon, zoomDefault);\n\n        setMapState(map)\n    }\n\n    function renderMarkers(map) {\n        var greenIcon = L.icon({\n            iconUrl: 'marker-avail.png',\n\n            iconSize:     [20, 27], // size of the icon\n            iconAnchor:   [3, 28], // point of the icon which will correspond to marker's location\n            popupAnchor:  [1, -10] // point from which the popup should open relative to the iconAnchor\n        });\n        var redIcon = L.icon({\n            iconUrl: 'marker-outs.png',\n\n            iconSize:     [20, 27], // size of the icon\n            iconAnchor:   [3, 28], // point of the icon which will correspond to marker's location\n            popupAnchor:  [1, -10] // point from which the popup should open relative to the iconAnchor\n        });\n        var blueIcon = L.icon({\n            iconUrl: 'marker-verified.png',\n\n            iconSize:     [20, 27], // size of the icon\n            iconAnchor:   [3, 28], // point of the icon which will correspond to marker's location\n            popupAnchor:  [1, -10] // point from which the popup should open relative to the iconAnchor\n        });\n        console.log(findResponseState)\n        if(findResponseState != undefined) {\n            findResponseState.forEach((d,idx) => {\n                var icon = blueIcon\n                if(d.updates != undefined && d.updates.stock_availability > 0) {\n                    icon = greenIcon\n                } else if(d.updates != undefined && d.updates.stock_availability == 0) {\n                    icon = redIcon\n                }\n                var marker = L.marker(d.location.coordinates.reverse(), {customId: idx, icon: icon}).addTo(map);\n                marker.on('click', (e) => {\n                    setActiveMarkerState(e.target.options.customId)\n                    setDrawerState(true)\n                    console.log(e.target.options.customId)})\n                // marker.bindPopup(\"<b>Hello world!</b><br>I am a popup.\")\n            })\n        }\n    }\n\n    function computeIconSize(zoomLevel) {\n        var width = zoomLevel * 1.8\n        return [width, 2.7*width]\n    }\n\n    function getCustomIcon(zoomDefault) {\n        return L.Icon.extend({\n\t\t\toptions: {\n\t\t\t\ticonSize:     computeIconSize(zoomDefault),\n\t\t\t\tshadowSize:   [50, 64],\n\t\t\t\ticonAnchor:   [10, 25],\n\t\t\t\tshadowAnchor: [4, 62],\n\t\t\t\tpopupAnchor:  [0, 0]\n\t\t\t}\n\t\t});\n    }\n\n    // function getRedLightIcon(zoomDefault) {\n    //     var red_light = '<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 187.705 643.732\"><path d=\"M107.7,635.732H80.1a4.269,4.269,0,0,1-4.3-4.3V48A17.669,17.669,0,0,1,93.5,30.3h.8A17.669,17.669,0,0,1,112,48V631.431A4.268,4.268,0,0,1,107.7,635.732Z\" style=\"fill:#4e5a61\"/><path d=\"M179.8,14.3V568.532a6.231,6.231,0,0,1-6.2,6.2H14.3a6.231,6.231,0,0,1-6.2-6.2V14.3a6.231,6.231,0,0,1,6.2-6.2H173.6A6.1,6.1,0,0,1,179.8,14.3Z\" style=\"fill:#4e5a61\"/><path d=\"M179.8,14.3V568.532a6.231,6.231,0,0,1-6.2,6.2H44.4a6.231,6.231,0,0,1-6.2-6.2V14.3a6.231,6.231,0,0,1,6.2-6.2H173.6A6.1,6.1,0,0,1,179.8,14.3Z\" style=\"fill:#5f6c75\"/><path d=\"M147.6,93.9A53.841,53.841,0,0,1,107,146a51.664,51.664,0,0,1-13.1,1.6,53.7,53.7,0,0,1,0-107.4A56.608,56.608,0,0,1,107,41.8,53.841,53.841,0,0,1,147.6,93.9Z\" style=\"fill:#d63030\"/><path d=\"M147.6,225.5A53.841,53.841,0,0,1,107,277.6a51.664,51.664,0,0,1-13.1,1.6,53.7,53.7,0,0,1,0-107.4,56.608,56.608,0,0,1,13.1,1.6A53.667,53.667,0,0,1,147.6,225.5Z\" style=\"fill:#494949\"/><path d=\"M147.6,357A53.841,53.841,0,0,1,107,409.1a51.664,51.664,0,0,1-13.1,1.6,53.7,53.7,0,0,1,0-107.4,56.608,56.608,0,0,1,13.1,1.6A53.667,53.667,0,0,1,147.6,357Z\" style=\"fill:#494949\"/><path d=\"M147.6,93.9A53.841,53.841,0,0,1,107,146a53.729,53.729,0,0,1,0-104.2A53.841,53.841,0,0,1,147.6,93.9Z\" style=\"fill:#f95353\"/><path d=\"M147.6,225.5A53.841,53.841,0,0,1,107,277.6a53.729,53.729,0,0,1,0-104.2A53.667,53.667,0,0,1,147.6,225.5Z\" style=\"fill:#282828\"/><path d=\"M147.6,357A53.841,53.841,0,0,1,107,409.1a53.729,53.729,0,0,1,0-104.2A53.667,53.667,0,0,1,147.6,357Z\" style=\"fill:#282828\"/><path d=\"M173.6,0H14.3A14.3,14.3,0,0,0,0,14.3V123.2a8,8,0,0,0,16,0V16.1H171.7V178.9a8,8,0,1,0,16,0V14.3A14,14,0,0,0,173.6,0Z\"/><path d=\"M179.8,201a8.024,8.024,0,0,0-8,8V566.632H16.1V153.3a8,8,0,0,0-16,0V568.432a14.3,14.3,0,0,0,14.3,14.3H67.9v48.7a12.291,12.291,0,0,0,12.3,12.3h27.6a12.291,12.291,0,0,0,12.3-12.3v-48.7h53.5a14.3,14.3,0,0,0,14.3-14.3V209A8.045,8.045,0,0,0,179.8,201ZM104,627.732H83.9v-45H104Z\"/><path d=\"M155.7,93.9c0-43.8-44.8-73.9-85.3-57C13.5,60.6,22.6,144.8,84,154.8,121.4,161.1,155.7,131.9,155.7,93.9ZM104,49.4c38.5,8.7,48.6,59.1,16.1,81.9a45.569,45.569,0,0,1-52.3,0C27.4,103,54.8,38.3,104,49.4Z\"/><path d=\"M104,286.4c59.9-9.8,70.7-91.2,16.1-116.8-41-19.3-87.9,11-87.9,55.9A61.842,61.842,0,0,0,104,286.4ZM67.8,188.1c30.3-21.3,71.8.8,71.8,37.4A45.654,45.654,0,0,1,83.9,270C45.4,261.3,35.3,210.8,67.8,188.1Z\"/><path d=\"M34.8,374.8a8.036,8.036,0,1,0,15.4-4.6c-12.4-41.3,34.5-75.4,69.9-50.6A45.572,45.572,0,0,1,139.6,357c0,38.7-45.9,60.3-75.6,34.4a7.96,7.96,0,0,0-11.3.8,8.086,8.086,0,0,0,.8,11.4c40.2,35,102.3,5.8,102.3-46.5,0-45.3-47.3-74.9-87.9-55.9A61.457,61.457,0,0,0,34.8,374.8Z\"/><path d=\"M147.6,488.641a53.841,53.841,0,0,1-40.6,52.1,51.664,51.664,0,0,1-13.1,1.6,53.7,53.7,0,0,1,0-107.4,56.608,56.608,0,0,1,13.1,1.6A53.667,53.667,0,0,1,147.6,488.641Z\" style=\"fill:#494949\"/><path d=\"M147.6,488.641a53.841,53.841,0,0,1-40.6,52.1,53.729,53.729,0,0,1,0-104.2A53.667,53.667,0,0,1,147.6,488.641Z\" style=\"fill:#282828\"/><path d=\"M34.8,506.441a8.036,8.036,0,1,0,15.4-4.6c-12.4-41.3,34.5-75.4,69.9-50.6a45.572,45.572,0,0,1,19.5,37.4c0,38.7-45.9,60.3-75.6,34.4a7.96,7.96,0,0,0-11.3.8,8.086,8.086,0,0,0,.8,11.4c40.2,35,102.3,5.8,102.3-46.5,0-45.3-47.3-74.9-87.9-55.9A61.457,61.457,0,0,0,34.8,506.441Z\"/><line x1=\"94\" y1=\"387.65\" x2=\"94\" y2=\"334.527\" style=\"fill:none;stroke:#000;stroke-linecap:round;stroke-miterlimit:10;stroke-width:13px\"/><polygon points=\"115.819 359.388 94 337.556 72.181 359.388 72.181 340.861 94 319.043 115.819 340.861 115.819 359.388\"/><polyline points=\"70.177 508.694 70.177 485.047 113.043 484.145\" style=\"fill:none;stroke:#000;stroke-linecap:round;stroke-miterlimit:10;stroke-width:13px\"/><polygon points=\"88.646 506.482 110.014 484.209 87.728 462.854 106.251 462.465 128.523 483.82 107.169 506.092 88.646 506.482\"/></svg>'\n    //     var url = \"data:image/svg+xml,\" + encodeURIComponent(red_light);\n\n    //     var CustomIcon = getCustomIcon(zoomDefault)\n    //     return new CustomIcon({iconUrl: url});\n    // }\n\n    const searchOptions = [\n        { title: 'Oxygen Cylinder', short: 'O2'},\n        { title: 'ICU Bed', short: 'I'},\n        { title: 'Ventilator Bed', short: 'V'}\n    ]\n\n    const toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setDrawerState(open)\n    };\n\n    function renderPoC() {\n        var poc = []\n        findResponseState[activeMarkerState].poc.forEach((n, idx) => {\n            poc.push(\n                <div key={idx} className=\"item\">\n                    <p>{n.name}</p>\n                    <p><span className=\"available\"><a href={\"tel:\" + n.phone}>{n.phone}</a></span></p>\n                </div>\n            )\n        })\n\n        if(poc.length == 0) {\n            poc = <p>Sorry, no contact available.</p>\n        }\n\n        return (\n            <div className=\"detail-container\">\n                <ContactPhoneIcon/>\n                <h5>Point of Contact</h5>\n                <Divider />\n                {poc}\n            </div>\n        )\n    }\n\n    function getUpdateTimeDiffMin(time) {\n        let min = Math.round((new Date() - new Date(time)) / 60000)\n        let text = ''\n        let className = 'last-updated-green'\n        if(min > 30 && min < 60) {\n            className = 'last-updated-yellow'\n            text = min\n        } else if(min > 60 && min <= 1440) {\n            className = ''\n            text = Math.floor(min / 60) + ' hour(s) ' + Math.round(min % 60)\n        } else if(min > 1440) {\n            className = ''\n            text = Math.round(min / 1440) + ' day(s) ' + Math.floor(min / 60) + ' hour(s) ' + Math.round(min % 60)\n        }\n        return <div className={\"last-updated \" + className}>Updated {text} mins ago</div>\n    }\n\n    function getReadableDate(updates) {\n        if(updates.stock_availability == 0 && updates.next_restock_date != undefined) {\n            let d = new Date(updates.next_restock_date)\n            let str = d.toLocaleDateString() + ' ' + d.toLocaleTimeString('en-US')\n\n            return <small>Next available on {str}</small>\n        } else {\n            return ''\n        }\n    }\n\n    function renderAvailabilityView(updates) {\n        if(updates == undefined) {\n            return <span>Availability information not available</span>\n        }\n        let text = ''\n        let className = ''\n        if(updates.stock_availability > 0) {\n            text = 'Available (' + updates.stock_availability + ')'\n            className = 'available'\n        } else if(updates.stock_availability == -1) {\n            text = 'Availability information not available'\n            className = ''\n        } else {\n            text = 'Not Available'\n            className = 'not-available'\n        }\n        return (\n            <>\n                <span className={className}>{text}</span>\n                <br/>\n                {getReadableDate(updates)}\n            </>\n        )\n    }\n\n    function generateDirectionLink(d) {\n        d = d.coordinates\n        return 'https://www.google.com/maps/dir//' + d[0] + ',' + d[1]\n    }\n\n    function renderDetailedView() {\n        console.log(findResponseState)\n        if(findResponseState == undefined || findResponseState.length == 0) {\n            return 'Loading...'\n        } else {\n            return (\n                <>\n                    <h2>{findResponseState[activeMarkerState].name}</h2>\n                    \n                    <DirectionsIcon fontSize=\"small\"/><a className=\"direction-link\" href={generateDirectionLink(findResponseState[activeMarkerState].location)} target=\"_blank\">Get Direction</a>\n                    <p className=\"address\">{findResponseState[activeMarkerState].address}</p>\n                    \n                    {getUpdateTimeDiffMin(findResponseState[activeMarkerState].updates.date_updated)}\n                    <div className=\"detail-container\">\n                        <AddBoxIcon/>\n                        <h5>Availability</h5>\n                        <Divider />\n                        <div className=\"item\">\n                            <p>{props.item}</p>\n                            <p>{renderAvailabilityView(findResponseState[activeMarkerState].updates)}</p>\n                        </div>\n                    </div>\n                    \n                    {renderPoC()}\n\n                    <div className=\"detail-container\">\n                        <CommentIcon/>\n                        <h5>General Comment</h5>\n                        <Divider />\n                        <div className=\"comments-box\" dangerouslySetInnerHTML={{__html: findResponseState[activeMarkerState].comments.replace(/(?:ht|f)tps?:\\/\\/[-a-zA-Z0-9.]+\\.[a-zA-Z]{2,3}(?:\\/(?:[^\"<=]|=)*)?/g, (a, b) => {return '<a target=\"_blank\" href=\"' + a + '\">' + a + '</a>'})}}></div>\n                    </div>\n                </>\n            )\n        }\n    }\n\n\n\n    return (\n        <>\n            <div className=\"MapPlot-container\">\n                <section id=\"MapPlot\"></section>\n                <div className=\"overlay-container\">\n                    <div className=\"back-button\">\n                        <Link to=\"/\">\n                            <IconButton aria-label=\"delete\" >\n                                <ArrowBackIcon style={{ color: '#fff' }}/>\n                            </IconButton>\n                        </Link>\n                    </div>\n                    <div className=\"input-box\">\n                        <Autocomplete\n                            id=\"seek-input\"\n                            size=\"small\"\n                            fullWidth={true}\n                            value={searchOptions.find(v => v.title === props.item) || {}}\n                            options={searchOptions}\n                            getOptionLabel={(option) => option.title}\n                            style={{}}\n                            renderInput={(params) => <TextField {...params} fullWidth={true} placeholder=\"Start typing for suggestions\" required={true} label=\"\" variant=\"outlined\" />}\n                        />\n                    </div>\n                </div>\n            </div>\n            <React.Fragment>\n                {/* <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button> */}\n                <Drawer anchor=\"right\" open={drawerState} onClose={console.log} onClose={toggleDrawer(false)}>\n                    <div className=\"detail-info\">\n                        {renderDetailedView()}\n                    </div>\n                </Drawer>\n            </React.Fragment>\n        </>\n    )\n}\n\nexport default Map;\n","import React, { Suspense } from 'react';\nimport Map from './Map';\n\nfunction MapListPage(props) {\n    console.log(props)\n    return (\n        <Map locationState={props.locationState} item={props.match.params.item}/>\n    )\n}\n\nexport default MapListPage;\n","import React, { useRef, useState, Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport FraudLogo from './fraud.svg';\n\nimport './Fraud.scss'\n\nfunction FraudComponent(props) {\n\n    const searchInput = useRef('')\n    const [searchResults, setSearchResults] = useState(undefined)\n    const [snackbar, setSnackbar] = useState({\n        openSnackbar: false,\n        type: '',\n        message: ''\n    });\n    const [openDialog, setOpenDialog] = useState(false);\n    const [formValues, setFormValues] = useState({\n        name: '',\n        phone: '',\n        account: '',\n        upi: '',\n        details: '',\n        region: '',\n        r_email: '',\n        r_phone: '',\n    });\n\n    const handleChangeForm = name => event => {\n        setFormValues({ ...formValues, [name]: event.target.value });\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setSnackbar({...snackbar, openSnackbar: false});\n    };\n\n    const handleCloseDialog = () => {\n        setOpenDialog(false);\n    };\n\n    const handleClickOpenDialog = () => {\n        setOpenDialog(true);\n    };\n\n    const validateNewEntryForm = () => {\n        if(formValues.phone == '' && formValues.upi == '' && formValues.account == '') {\n            return false\n        }\n        return true\n    }\n\n    const handleNewSubmitButton = () => {\n        if(!validateNewEntryForm()) {\n            setSnackbar({\n                openSnackbar: true,\n                type: 'error',\n                message: 'One of the following should be set: Phone number, UPI or Account number'\n            })\n            return\n        }\n        fetch('http://13.235.221.186:4000/v1/info/addFraud', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"phone\": formValues.phone,\n                \"upi\": formValues.upi,\n                \"account_number\": formValues.account,\n                \"comment\": formValues.details,\n                \"entity_name\": formValues.name,\n                \"region\": {\n                    \"name\": formValues.region,\n                },\n                \"reported_by\": {\n                    \"phone\": formValues.r_phone,\n                    \"email\": formValues.r_email\n                }\n            })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if(res._id != undefined) {\n                    setSnackbar({\n                        openSnackbar: true,\n                        type: 'success',\n                        message: 'Thanks for helping us out. Scam id: ' + res._id\n                    })\n                    handleCloseDialog()\n                }\n             })\n    }\n\n    function getFraudSearchResults() {\n        if(searchInput.current.value == '') {\n            setSnackbar({\n                openSnackbar: true,\n                type: 'error',\n                message: 'Search query is empty'\n            })\n            return\n        }\n        fetch('http://13.235.221.186:4000/v1/info/findFraud', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"phone\": searchInput.current.value,\n                \"upi\": searchInput.current.value,\n                \"account_number\": searchInput.current.value\n            })\n        })\n            .then(res => res.json())\n            .then(setSearchResults)\n    }\n\n    function renderSearchSummary() {\n        let res = ''\n        if(searchResults != undefined) {\n            if(searchResults.length == 0) {\n                res = <div className=\"result-summary result-summary-ok\">\n                    There are no reports for this search query in our database. <b>You should verify the entiity before making any transaction.</b>\n                </div>\n            } else if(searchResults.length == 1) {\n                res = <div className=\"result-summary result-summary-fraud\">\n                    There is <b>1 report</b> against this search query.\n                </div>\n            } else if(searchResults.length > 1){\n                res = <div className=\"result-summary result-summary-fraud\">\n                    There are <b>{searchResults.length} reports</b> against this search query.\n                </div>\n            }\n            return res\n        }\n    }\n\n    function renderSearchResult() {\n        let res = []\n\n        if(searchResults != undefined) {\n            searchResults.forEach((r, idx) => {\n                let d = new Date(r.date_added)\n                res.push(\n                    <TableRow key={idx}>\n                        <TableCell align=\"right\">{idx + 1}</TableCell>\n                        <TableCell align=\"right\">{d.toLocaleDateString() + ' ' + d.toLocaleTimeString('en-US')}</TableCell>\n                        <TableCell align=\"right\">{r.entity_name || 'Unknown entity '}</TableCell>\n                        <TableCell align=\"right\">{r.comment}</TableCell>\n                    </TableRow>\n                )\n            })\n        }\n\n        return res\n    }\n\n    function renderTable() {\n        if(searchResults != undefined && searchResults.length > 0) {\n            return (\n                <div className=\"result-list\">\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"right\">#</TableCell>\n                                <TableCell align=\"right\">Date Reported</TableCell>\n                                <TableCell align=\"right\">Name</TableCell>\n                                <TableCell align=\"right\">Comment</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {renderSearchResult()}\n                        </TableBody>\n                    </Table>\n                </div>\n            )\n        } \n    }\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    return (\n        <section className=\"Fraud\">\n            <div className=\"container\">\n                <img className=\"fraud-logo\" src={FraudLogo} alt=\"\"/>\n                <h1>CoViD Scam Directory</h1>\n                <p>This is an initiative to help you identify fraud entities.</p>\n                <p className=\"click-link\" onClick={handleClickOpenDialog}>Add a new record</p>\n                <a href=\"https://github.com\" className=\"click-link\">API Access</a>\n                <br/>\n                <br/>\n                <div className=\"search-bar\">\n                    <Grid container spacing={1}>\n                        <Grid item xs={11}>\n                            <TextField \n                                fullWidth={true} \n                                placeholder=\"Enter a phone number, account number or UPI ID\" \n                                required={true} \n                                label=\"\" \n                                variant=\"outlined\" \n                                inputRef={searchInput}\n                            />\n                        </Grid>\n                        <Grid item xs={1}>\n                            <Button variant=\"outlined\" color=\"primary\" onClick={getFraudSearchResults}>\n                                GO\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </div>\n                {renderSearchSummary()}\n                {renderTable()}\n            </div>\n            <Dialog open={openDialog} onClose={handleCloseDialog} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">New Scam Entry</DialogTitle>\n                <DialogContent>\n                    {/* <DialogContentText>\n                        To subscribe to this website, please enter your email address here. We will send updates\n                        occasionally.\n                    </DialogContentText> */}\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Name of the scammer\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('name')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"phone\"\n                        label=\"Phone number of the scammer\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('phone')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"account\"\n                        label=\"Account number of the scammer\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('account')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"upi\"\n                        label=\"UPI of the scammer\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('upi')}\n                        fullWidth\n                    />\n                    <TextField\n                        multiline\n                        margin=\"dense\"\n                        id=\"details\"\n                        label=\"Details of the scam\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('details')}\n                        fullWidth\n                        rows={4}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"region\"\n                        label=\"City\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('region')}\n                        value={props.data.locationState.district}\n                        fullWidth\n                    />\n                    <h6 className=\"personal-details\" style={{marginTop: '30px', fontFamily: \"Roboto\"}}>Your details (Optional)</h6>\n                    <DialogContentText>\n                        These details will not be shared with the public but it might be used to file FIRs with the respective police department.\n                    </DialogContentText>\n                    <TextField\n                        margin=\"dense\"\n                        id=\"r_email\"\n                        label=\"Your email\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('r_email')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"r_phone\"\n                        label=\"You phone\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('r_phone')}\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleCloseDialog} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={handleNewSubmitButton} color=\"primary\">\n                    Submit\n                </Button>\n                </DialogActions>\n            </Dialog>\n            <Snackbar open={snackbar.openSnackbar} autoHideDuration={5000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity={snackbar.type}>\n                    {snackbar.message}\n                </Alert>\n            </Snackbar>\n        </section>\n    );\n}\n\nconst FraudTrans = withTranslation()(FraudComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Fraud(props) {\n    return (\n        <Suspense fallback=\"loading\">\n        <FraudTrans data={props}/>\n        </Suspense>\n    );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport './Header.scss'\n\nclass HeaderComponent extends React.Component {\n\n    changeLanguage(event, i18n) {\n        let lang = event.target.value\n        i18n.changeLanguage(lang);\n        console.log('language: ' + lang)\n    }\n    render() {\n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n                    \n                        <ul>\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"#\">Learn</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"/sd\">What is Social Distancing?</Link>\n                                        {/* <a href=\"https://www.mohfw.gov.in/pdf/SocialDistancingAdvisorybyMOHFW.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">What is Social Distancing and Janata Curfew?</a> */}\n                                        <Link to=\"/sq\">How one should practice Self Quarantine</Link>\n                                        <a href=\"https://www.mohfw.gov.in/pdf/Mask-Eng.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to wear a mask?</a>\n                                        <a href=\"https://www.mohfw.gov.in/pdf/FINAL_14_03_2020_ENg.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to get tested for covid-19?</a>\n                                        {/* <Link to=\"/myths\">Myths</Link> */}\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"#\">Get Help</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"\">WHO</Link>\n                                        <Link to=\"\">Ministry of Health</Link>\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"/us\">Contribute</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"/us\">Get involved with us</Link>\n                                        <Link to=\"/funds\">Active Funds</Link>\n                                        <Link to=\"/volunteer\">Volunteer</Link>\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <Link to=\"/stories\">Citizen Stories</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/simulation\">Simulation</Link>\n                            </li>\n                            \n                            \n                            \n                            \n                        </ul>\n                        <div>\n                            {/* Language:\n                            <select onChange={(e) => this.changeLanguage(e, this.props.i18n)} defaultValue={this.props.i18n.language}>\n                                <option value=\"en\">English</option>\n                                <option value=\"in_urd\">اردو</option>\n                                <option value=\"in_hi\">हिंदी</option>\n                                <option value=\"in_knn\">ಕೆನಡಾ</option>\n                                <option value=\"in_tam\">தமிழ்</option>\n                                <option value=\"in_od\">ଓଡ଼ିଆ</option>\n                                <option value=\"in_punjabi\">ਪੰਜਾਬੀ</option>\n                            </select> */}\n                            <FormControl variant=\"outlined\" className=\"header-box\" margin='dense'>\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Language</InputLabel>\n                            <Select\n                                native\n                                value={this.props.i18n.language}\n                                onChange={(e) => this.changeLanguage(e, this.props.i18n)}\n                                label=\"Language\"\n                                inputProps={{\n                                    name: 'language',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                            <option value=\"en\">English</option>\n                            <option value=\"in_urd\">اردو</option>\n                            <option value=\"in_hi\">हिंदी</option>\n                            <option value=\"in_knn\">ಕೆನಡಾ</option>\n                            <option value=\"in_tam\">தமிழ்</option>\n                            <option value=\"in_od\">ଓଡ଼ିଆ</option>\n                            <option value=\"in_punjabi\">ਪੰਜਾਬੀ</option>\n                            </Select>\n                        </FormControl>\n                        </div>\n\n                        <div>\n                            {/* District: */}\n                            <TextField\n                                label=\"District\"\n                                id=\"outlined-size-small\"\n                                defaultValue=\"\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                className=\"header-text header-box\"\n                            />\n                        </div>\n\n\n                    </div>\n                </nav>\n                \n            </header>\n            \n        )\n    }\n}\n\nconst HeaderTrans = withTranslation()(HeaderComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Header() {\n  return (\n    <Suspense fallback=\"loading\">\n      <HeaderTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './Footer.scss'\n\nclass FooterComponent extends React.Component {\n    render() {\n        return (\n            <footer>\n                A volunteer driven initiative\n            </footer>\n            \n        )\n    }\n}\n\nconst FooterTrans = withTranslation()(FooterComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Footer() {\n  return (\n    <Suspense fallback=\"loading\">\n      <FooterTrans />\n    </Suspense>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom'\n\nimport LocationServices from './utils/LocationServices';\n\nimport './App.scss';\n\n\nimport Home from './userpages/home/Home'\nimport MapList from './userpages/list/MapListPage'\nimport Fraud from './userpages/fraud/Fraud'\n// import SD from './userpages/social_distancing/SocialDistancing'\n// import SQ from './userpages/self_quarantine/SelfQuarantine'\n// import Myths from './userpages/myths/Myths'\n// import Simulation from './userpages/simulation/Simulation'\n// import Funds from './userpages/funds/Funds'\n// import Volunteer from './userpages/volunteer/Volunteer'\n// import Stories from './userpages/stories/Stories'\n// import Us from './userpages/us/Us'\n// import MapDistrict from './userpages/map/MapDistrict'\n\nimport Header from './views/header/Header'\nimport Footer from './views/footer/Footer'\n\n// import Data from './utils/Data'\n\nfunction App() {\n\n\tlet [locationState, setLocationState] = useState({})\n\n  \tuseEffect(() => {\n\t\tlet locationServices = new LocationServices()\n        locationServices.getDistrict((res) => {\n\t\t\tsetLocationState(res)\n\t\t})\n\t}, [])\n\n  \treturn (\n\t\t<div className=\"App\">\n\t\t\n\t\t\t<Router basename='/'>\n\t\t\t\t{/* <Header/> */}\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact \n\t\t\t\t\t\tpath=\"/\" \n\t\t\t\t\t\trender={(props) => <Home {...props} locationState={locationState}  /> }\n\t\t\t\t\t/>\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath=\"/list/:item\"\n\t\t\t\t\t\trender={(props) => <MapList {...props} locationState={locationState}  /> }\n\t\t\t\t\t/>\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath=\"/fraud\"\n\t\t\t\t\t\trender={(props) => <Fraud {...props} locationState={locationState}  /> }\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <Route path=\"/sd\" component={SD} />\n\t\t\t\t\t<Route path=\"/sq\" component={SQ} />\n\t\t\t\t\t<Route path=\"/myths\" component={Myths} />\n\t\t\t\t\t<Route path=\"/simulation\" component={Simulation} />\n\t\t\t\t\t<Route path=\"/funds\" component={Funds} />\n\t\t\t\t\t<Route path=\"/volunteer\" component={Volunteer} />\n\t\t\t\t\t<Route path=\"/stories\" component={Stories} />\n\t\t\t\t\t<Route path=\"/us\" component={Us} />\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath=\"/map\" \n\t\t\t\t\t\trender={(props) => <MapDistrict {...props} data={this.state.data}/>}\n\t\t\t\t\t/> */}\n\t\t\t\t</Switch>\n\t\t\t\t<Footer/>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    backend: {\n        loadPath: '/locales/{{lng}}/{{ns}}.json'\n    },\n    fallbackLng: 'en',\n    debug: false,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}