{"version":3,"sources":["userpages/home/coronavirus.svg","userpages/list/scene.yaml","userpages/fraud/fraud.svg","images/cover_face.svg","images/handwash.svg","images/dont_touch_face.svg","images/handrub.svg","images/face_mask.svg","images/social_distancing.svg","views/CurfewMessage.js","userpages/home/Home.jsx","userpages/list/MapListPage.jsx","userpages/fraud/Fraud.jsx","views/header/Header.js","views/footer/Footer.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["module","exports","JanataCurfewComponent","t","this","props","className","React","Component","withTranslation","searchOptions","title","short","chipArr","forEach","s","idx","push","key","to","Chip","avatar","Avatar","label","onClick","district","undefined","data","locationState","src","CovidIcon","alt","Autocomplete","id","options","getOptionLabel","option","style","renderInput","params","TextField","fullWidth","placeholder","required","variant","size","icon","color","MapListPage","FraudTrans","api","searchInput","useRef","useState","searchResults","setSearchResults","disabled","message","submitButtonState","setSubmitButtonState","openSnackbar","type","snackbar","setSnackbar","openDialog","setOpenDialog","name","phone","account","upi","details","region","r_email","r_phone","formValues","setFormValues","stats","setStats","useEffect","fetch","then","res","json","handleChangeForm","event","target","value","handleClose","reason","handleCloseDialog","href","FraudLogo","count","renderStats","Grid","container","spacing","item","xs","md","inputRef","Button","current","length","val","replace","method","headers","body","JSON","stringify","renderSearchSummary","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","r","d","Date","date_added","toLocaleDateString","toLocaleTimeString","entity_name","comment","renderSearchResult","renderTable","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","autoFocus","margin","onChange","multiline","rows","defaultValue","marginTop","fontFamily","DialogContentText","DialogActions","msg","test","console","log","_id","Snackbar","autoHideDuration","elevation","severity","Fraud","fallback","HeaderComponent","i18n","lang","changeLanguage","data-toggle","data-target","aria-controls","aria-expanded","rel","FormControl","InputLabel","htmlFor","Select","native","language","e","inputProps","FooterComponent","FooterTrans","Footer","App","basename","path","render","Boolean","window","location","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","interpolation","escapeValue","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eee7eac6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coronavirus.69dd660c.svg\";","module.exports = __webpack_public_path__ + \"static/media/scene.8eebac77.yaml\";","module.exports = __webpack_public_path__ + \"static/media/fraud.334eb474.svg\";","module.exports = __webpack_public_path__ + \"static/media/cover_face.8458c828.svg\";","module.exports = __webpack_public_path__ + \"static/media/handwash.2708ccaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/dont_touch_face.2f3c3d90.svg\";","module.exports = __webpack_public_path__ + \"static/media/handrub.f0a5d838.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_mask.0a2b4dab.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_distancing.f11225ad.svg\";","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nclass JanataCurfewComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"imp-message\">\n                    <h1>{t('sd.jan_curfew_message')}</h1>\n                    {<span>{t('sd.jan_curfew_submessage')}</span>}\n                </div>\n            </>\n        );\n    }\n}\n\nconst JanataCurfewTrans = withTranslation()(JanataCurfewComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function JanataCurfew() {\n  return (\n    <Suspense fallback=\"loading\">\n      <JanataCurfewTrans />\n    </Suspense>\n  );\n}\n","import React, { useState, Suspense } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { withTranslation } from 'react-i18next';\nimport {Pie} from 'react-chartjs-2';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\n\nimport CurfewMessage from '../../views/CurfewMessage';\nimport LocationServices from '../../utils/LocationServices';\n\nimport './Home.scss'\n// import Content from './mk.md'\n\nimport CovidIcon from './coronavirus.svg';\nimport stateColour from './state_code_to_colour.json'\nimport coverFace from '../../images/cover_face.svg'\nimport handwash from '../../images/handwash.svg'\nimport dTouchFace from '../../images/dont_touch_face.svg'\nimport handRub from '../../images/handrub.svg'\nimport faceMask from '../../images/face_mask.svg'\nimport socialDistancing from '../../images/social_distancing.svg'\n\nfunction HomeComponent(props) {\n    const searchOptions = [\n        { title: 'Oxygen Cylinder', short: 'O2'},\n        { title: 'ICU Bed', short: 'I'},\n        { title: 'Ventilator Bed', short: 'V'}\n    ]\n\n        \n    var chipArr = []\n    searchOptions.forEach((s, idx) => {\n        chipArr.push(\n            <Link key={idx} to={'/list/' + s.title}>\n                <Chip avatar={<Avatar>{s.short}</Avatar>} label={s.title} onClick={() => {}} />\n            </Link>\n        )\n    })\n    let district = 'Identifying...';\n    if(props.data.locationState.district != undefined) {\n        district = props.data.locationState.district;\n    }\n\n\n    return (\n        <section className=\"Home\">\n            <div className=\"container\">\n                {/* <CurfewMessage/> */}\n\n                <img src={CovidIcon} alt=\"\"/>\n\n                <div className=\"seek-container\">\n                    <h1 className=\"seek-message\">I am looking for </h1>\n                    <Autocomplete\n                        id=\"seek-input\"\n                        options={searchOptions}\n                        getOptionLabel={(option) => option.title}\n                        style={{}}\n                        renderInput={(params) => <TextField {...params} fullWidth={true} placeholder=\"Start typing for suggestions\" required={true} label=\"\" variant=\"outlined\" />}\n                    />\n                    <div className=\"chip-container\">\n                        {chipArr}\n                    </div>\n                </div>\n\n                <div className=\"location-identification-container\">\n                    <p>We need your location to give you good search results. You location is neither saved or shared with anyone.</p>\n                    {/* <p>Your District: </p> */}\n                    <Chip\n                        variant=\"outlined\"\n                        size=\"small\"\n                        icon={<MyLocationIcon />}\n                        label={district}\n                        color=\"primary\"\n                    />\n                </div>\n                \n                \n                {/* <div className=\"stats-container\">\n                    \n                    <p className=\"update-date\">Updated at: {updateDate.toLocaleString()} [changes since {(diffTimestamp / (3600)).toFixed(1)} hours]</p>\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                            <div className=\"stats-box active\">\n                                <span className=\"title\">Active Cases</span>\n                                <span className=\"number\">{data.activePositiveCases || '-'}\n                                    <span className=\"change-in-value\"> [{this.changeValue(diffCountry.activePositiveCases)}]</span>\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className=\"stats-box cured\">\n                                <span className=\"title\">Cured Cases</span>\n                                <span className=\"number\">{data.curedCases || '-'}\n                                    <span className=\"change-in-value\"> [{this.changeValue(diffCountry.curedCases)}]</span>\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className=\"stats-box death\">\n                                <span className=\"title\">Deaths</span>\n                                <span className=\"number\">{data.deathCases || '-'}\n                                    <span className=\"change-in-value\"> [{this.changeValue(diffCountry.deathCases)}]</span>\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className=\"stats-box others\">\n                                <span className=\"title\">Total Cases</span>\n                                <span className=\"number\">{data.totalPositiveCases || '-'}\n                                    <span className=\"change-in-value\"> [{this.changeValue(diffCountry.totalPositiveCases)}]</span>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <p className=\"other-cases\">Other Cases: {data.otherCases}</p>\n                    <div className=\"source\"><a href=\"https://www.mohfw.gov.in/\" rel=\"noopener noreferrer\" target=\"_blank\">Ministry of Health and Family Welfare</a></div>\n                    \n                </div>\n\n                <div className=\"summary\">\n                    <div className=\"affected-region\">\n                        {this.mostAffectedView(affectedStates.leastAffectStates, stateCodeNameMap, 'blue', 'Least Affected States (Active  Cases)')}\n                        <br/>\n                        {this.mostAffectedView(affectedStates.worstAffectedStates, stateCodeNameMap, 'red', 'Most Affected States (Active  Cases)')}\n                    </div>\n                    <hr/>\n                    {this.updatesView(\n                        affectedStates.worstAffectedStates, \n                        stateCodeNameMap,\n                        diffData,\n                        data,\n                        worldStats,\n                        diffTimestamp,\n                        recoveryPath,\n                        worstHit\n                    )}\n                </div>\n\n                <div className=\"row stats-viz\">\n                    <div className=\"col-md-6 viz-chart\">\n                        <h4 className=\"center\">Total Cases </h4>\n                        <h6 className=\"center\"> 8 States with most cases </h6>\n                        <Pie data={pie1} />\n                    </div>\n                    <div className=\"col-md-6 viz-chart\">\n                        <h4 className=\"center\">Active Positive Cases</h4>\n                        <h6 className=\"center\"> 8 States with most cases </h6>\n                        <Pie data={pie2} />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <iframe className=\"embed-video\" title=\"Information WHO\" src={t('home.resources.who')} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                    </div>\n                    <div className=\"col-md-6 info-box\">\n                        <h2>{t('home.what_is_corona')}</h2>\n                        {t('home.what_is_corona_answer')} <code>{t('home.what_is_corona_punch')}</code>\n                        <div className=\"source\"><a href=\"https://www.who.int/news-room/q-a-detail/q-a-coronaviruses\" rel=\"noopener noreferrer\" target=\"_blank\">World Health Organization</a></div>\n                    </div>\n                </div>\n                <div className=\"prevent-box\">\n                    <h1>{t('home.how_to_prevent_infection')}</h1>\n                    <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            <img className=\"minor-image\" src={handwash} alt=\"Handwash\"/>\n                            <h3>{t('home.handwash')}</h3>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <img className=\"minor-image\" src={coverFace} alt=\"cover your face\"/>\n                            <h3>{t('home.cover_face')}</h3>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <img className=\"minor-image\" src={dTouchFace} alt=\"Handwash\"/>\n                            <h3>{t('home.dont_touch_face')}</h3>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            <img className=\"minor-image\" src={handRub} alt=\"Handwash\"/>\n                            <h3>{t('home.handrub')}</h3>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <img className=\"minor-image\" src={socialDistancing} alt=\"Handwash\"/>\n                            <h3>{t('home.social_distancing')}</h3>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <img className=\"minor-image\" src={faceMask} alt=\"Handwash\"/>\n                            <h3>{t('home.mask')}</h3>\n                        </div>\n                    </div>\n                </div> */}\n            </div>\n            \n        </section>\n    );\n}\n\nconst HomeTrans = withTranslation()(HomeComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Home(props) {\n    console.log(props)\n    return (\n        <Suspense fallback=\"loading\">\n        <HomeTrans data={props}/>\n        </Suspense>\n    );\n}\n","import React, { Suspense } from 'react';\nimport Map from './Map';\n\nfunction MapListPage(props) {\n    console.log(props)\n    return (\n        <Map locationState={props.locationState} item={props.match.params.item}/>\n    )\n}\n\nexport default MapListPage;\n","import React, { useRef, useState, Suspense, useEffect } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport FraudLogo from './fraud.svg';\n\nimport './Fraud.scss'\n\nfunction FraudComponent(props) {\n\n    const api = 'https://api.cov.social'\n    const searchInput = useRef('')\n    const [searchResults, setSearchResults] = useState(undefined)\n    const [submitButtonState, setSubmitButtonState] = useState({\n        disabled: false,\n        message: 'Submit'\n    })\n    const [snackbar, setSnackbar] = useState({\n        openSnackbar: false,\n        type: '',\n        message: ''\n    });\n    const [openDialog, setOpenDialog] = useState(false);\n    const [formValues, setFormValues] = useState({\n        name: '',\n        phone: '',\n        account: '',\n        upi: '',\n        details: '',\n        region: '',\n        r_email: '',\n        r_phone: '',\n    });\n    const [stats, setStats] = useState(undefined)\n\n    useEffect(() => {\n        fetch(api + '/v1/info/getStats')\n            .then(res => res.json())\n            .then(setStats)\n    }, [])\n\n    const handleChangeForm = name => event => {\n        setFormValues({ ...formValues, [name]: event.target.value });\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setSnackbar({...snackbar, openSnackbar: false});\n    };\n\n    const handleCloseDialog = () => {\n        setOpenDialog(false);\n    };\n\n    const handleClickOpenDialog = () => {\n        setFormValues({\n            name: '',\n            phone: '',\n            account: '',\n            upi: '',\n            details: '',\n            region: props.data.locationState.district,\n            r_email: '',\n            r_phone: '',\n        });\n        setOpenDialog(true);\n    };\n\n    const validateNewEntryForm = () => {\n        if(formValues.phone == '' && formValues.upi == '' && formValues.account == '') {\n            return {\n                val: false,\n                msg: 'One of the following should be set: Phone number, UPI or Account number'\n            }\n        } else if(\n            formValues.phone !== '' &&\n            (!/^\\d+$/.test(formValues.phone) ||\n            formValues.phone.length !== 10)\n        ) {\n\n            // (formValues.phone !== '' &&\n            // (formValues.phone.match(/^[0-9]+$/) !== null && \n            // formValues.phone.match(/^[0-9]+$/)[0].length !== 10) || \n            // formValues.phone.length !== 10)) {\n            return {\n                val: false,\n                msg: 'Phone number of the scammer should be 10 digits and numeric.'\n            }\n        } else if(\n                formValues.account !== '' &&\n                !/^\\d+$/.test(formValues.account)\n        ) {\n            return {\n                val: false,\n                msg: 'Account number should be numeric.'\n            }\n        }\n        console.log(formValues.phone.length)\n        return {\n            val: true\n        }\n    }\n\n    const handleNewSubmitButton = () => {\n        setSubmitButtonState({\n            disabled: true,\n            message: 'Submitting'\n        })\n        let res = validateNewEntryForm()\n        if(!res.val) {\n            setSnackbar({\n                openSnackbar: true,\n                type: 'error',\n                message: res.msg\n            })\n            setSubmitButtonState({\n                disabled: false,\n                message: 'Submit'\n            })\n            return\n        }\n        fetch(api + '/v1/info/addFraud', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"phone\": formValues.phone.replace(/\\s/g, ''),\n                \"upi\": formValues.upi.replace(/\\s/g, ''),\n                \"account_number\": formValues.account.replace(/\\s/g, ''),\n                \"comment\": formValues.details,\n                \"entity_name\": formValues.name,\n                \"region\": {\n                    \"name\": formValues.region,\n                },\n                \"reported_by\": {\n                    \"phone\": formValues.r_phone,\n                    \"email\": formValues.r_email\n                }\n            })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if(res._id != undefined) {\n                    setSnackbar({\n                        openSnackbar: true,\n                        type: 'success',\n                        message: 'Thanks for helping us out. Scam id: ' + res._id\n                    })\n                    handleCloseDialog()\n                    setSubmitButtonState({\n                        disabled: false,\n                        message: 'Submit'\n                    })\n                } else {\n                    setSnackbar({\n                        openSnackbar: true,\n                        type: 'error',\n                        message: 'Some error submitting this entry. Please retry.'\n                    })\n                    setSubmitButtonState({\n                        disabled: false,\n                        message: 'Submit'\n                    })\n                }\n             })\n    }\n\n    function getFraudSearchResults() {\n        if(searchInput.current.value == '') {\n            setSnackbar({\n                openSnackbar: true,\n                type: 'error',\n                message: 'Search query is empty'\n            })\n            return\n        } else if(searchInput.current.value.length <= 5) {\n            setSnackbar({\n                openSnackbar: true,\n                type: 'error',\n                message: 'This doesn\\'t look like a phone number, account number of a UPI ID. Check it again.'\n            })\n            return\n        }\n        let val = searchInput.current.value.replace(/\\s/g, '')\n        fetch(api + '/v1/info/findFraud', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"phone\": val,\n                \"upi\": val,\n                \"account_number\": val\n            })\n        })\n            .then(res => res.json())\n            .then(setSearchResults)\n    }\n\n    function renderSearchSummary() {\n        let res = ''\n        if(searchResults != undefined) {\n            if(searchResults.length == 0) {\n                res = <div className=\"result-summary result-summary-ok\">\n                    There are no reports for this search query in our database. <b>You should verify the entiity before making any transaction.</b>\n                </div>\n            } else if(searchResults.length == 1) {\n                res = <div className=\"result-summary result-summary-fraud\">\n                    There is <b>1 report</b> against this search query.\n                </div>\n            } else if(searchResults.length > 1){\n                res = <div className=\"result-summary result-summary-fraud\">\n                    There are <b>{searchResults.length} reports</b> against this search query.\n                </div>\n            }\n            return res\n        }\n    }\n\n    function renderSearchResult() {\n        let res = []\n\n        if(searchResults != undefined) {\n            searchResults.forEach((r, idx) => {\n                let d = new Date(r.date_added)\n                res.push(\n                    <TableRow key={idx}>\n                        <TableCell align=\"right\">{idx + 1}</TableCell>\n                        <TableCell align=\"right\">{d.toLocaleDateString() + ' ' + d.toLocaleTimeString('en-US')}</TableCell>\n                        <TableCell align=\"right\">{r.entity_name || 'Unknown entity '}</TableCell>\n                        <TableCell align=\"right\">{r.region.name || 'Unknown '}</TableCell>\n                        <TableCell align=\"right\">{r.comment.replace(/\\n/g, ' ')}</TableCell>\n                    </TableRow>\n                )\n            })\n        }\n\n        return res\n    }\n\n    function renderTable() {\n        if(searchResults != undefined && searchResults.length > 0) {\n            return (\n                <div className=\"result-list\">\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"right\">#</TableCell>\n                                <TableCell align=\"right\">Date Reported</TableCell>\n                                <TableCell align=\"right\">Name</TableCell>\n                                <TableCell align=\"right\">City</TableCell>\n                                <TableCell align=\"right\">Comment</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {renderSearchResult()}\n                        </TableBody>\n                    </Table>\n                </div>\n            )\n        } \n    }\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    function renderStats() {\n        if(stats === undefined) \n            return\n        return (\n            <div className=\"fraud-stats-container\">\n                <div className=\"stats\">\n                    <span className=\"label\">Total Records</span>\n                    <span className=\"value\">{stats.count}</span>\n                </div>\n                <div className=\"stats\">\n                    <span className=\"label\">Unique Phone Numbers</span>\n                    <span className=\"value\">{stats.phone}</span>\n                </div>\n                <div className=\"stats\">\n                    <span className=\"label\">Unique Account Numbers</span>\n                    <span className=\"value\">{stats.account}</span>\n                </div>\n                <div className=\"stats\">\n                    <span className=\"label\">Unique UPI IDs</span>\n                    <span className=\"value\">{stats.upi}</span>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <section className=\"Fraud\">\n            <div className=\"disclaimer\">\n                This is <span className=\"important\">not an official platform</span> for filing / registering complaints. To file a cyber crime complaint, visit <a href=\"https://cybercrime.gov.in\" target=\"_blank\">cybercrime.gov.in</a> or <a href=\"tel:155260\" target=\"_blank\">155260</a> and adhere to the guidelines given by them.\n            </div>\n            <div className=\"container\">\n                <img className=\"fraud-logo\" src={FraudLogo} alt=\"\"/>\n                <h1>CoViD Scam Directory</h1>\n                <p>This is an initiative to help you identify fraud entities.</p>\n                <p className=\"click-link\" onClick={handleClickOpenDialog}>Add a new record</p>\n                <a href=\"https://github.com/upperwal/covid19/wiki\" target=\"_blank\" className=\"click-link\">API Access</a>\n                <br/>\n                <br/>\n                {renderStats()}\n                <br/>\n                <div className=\"search-bar\">\n                    <Grid container spacing={1}>\n                        <Grid item xs={12} md={11}>\n                            <TextField \n                                fullWidth={true} \n                                placeholder=\"Enter a phone number, account number or UPI ID\" \n                                required={true} \n                                label=\"\" \n                                variant=\"outlined\" \n                                inputRef={searchInput}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md={1}>\n                            <Button variant=\"outlined\" color=\"primary\" onClick={getFraudSearchResults}>\n                                GO\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </div>\n                <small>Please remove +91 from the phone number.</small>\n                {renderSearchSummary()}\n                {renderTable()}\n            </div>\n            <Dialog open={openDialog} onClose={handleCloseDialog} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">New Scam Entry</DialogTitle>\n                <DialogContent>\n                    {/* <DialogContentText>\n                        To subscribe to this website, please enter your email address here. We will send updates\n                        occasionally.\n                    </DialogContentText> */}\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Name of the scammer\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('name')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"phone\"\n                        label=\"Mobile number of the scammer\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('phone')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"account\"\n                        label=\"Account number of the scammer\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('account')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"upi\"\n                        label=\"UPI of the scammer\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('upi')}\n                        fullWidth\n                    />\n                    <TextField\n                        multiline\n                        margin=\"dense\"\n                        id=\"details\"\n                        label=\"Details of the scam\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('details')}\n                        fullWidth\n                        rows={4}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"region\"\n                        label=\"City\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('region')}\n                        defaultValue={props.data.locationState.district}\n                        fullWidth\n                    />\n                    <h6 className=\"personal-details\" style={{marginTop: '30px', fontFamily: \"Roboto\"}}>Your details (Optional)</h6>\n                    <DialogContentText>\n                        These details will not be shared with the public but it might be used to file FIRs with the respective police department.\n                    </DialogContentText>\n                    <TextField\n                        margin=\"dense\"\n                        id=\"r_email\"\n                        label=\"Your email\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('r_email')}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"r_phone\"\n                        label=\"You phone\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        onChange={handleChangeForm('r_phone')}\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={handleCloseDialog} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={handleNewSubmitButton} color=\"primary\" disabled={submitButtonState.disabled}>\n                    {submitButtonState.message}\n                </Button>\n                </DialogActions>\n            </Dialog>\n            <Snackbar open={snackbar.openSnackbar} autoHideDuration={5000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity={snackbar.type}>\n                    {snackbar.message}\n                </Alert>\n            </Snackbar>\n        </section>\n    );\n}\n\nconst FraudTrans = withTranslation()(FraudComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Fraud(props) {\n    return (\n        <Suspense fallback=\"loading\">\n        <FraudTrans data={props}/>\n        </Suspense>\n    );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport './Header.scss'\n\nclass HeaderComponent extends React.Component {\n\n    changeLanguage(event, i18n) {\n        let lang = event.target.value\n        i18n.changeLanguage(lang);\n        console.log('language: ' + lang)\n    }\n    render() {\n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-lg navbar-light\">\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n                    \n                        <ul>\n                            <li>\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"#\">Learn</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"/sd\">What is Social Distancing?</Link>\n                                        {/* <a href=\"https://www.mohfw.gov.in/pdf/SocialDistancingAdvisorybyMOHFW.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">What is Social Distancing and Janata Curfew?</a> */}\n                                        <Link to=\"/sq\">How one should practice Self Quarantine</Link>\n                                        <a href=\"https://www.mohfw.gov.in/pdf/Mask-Eng.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to wear a mask?</a>\n                                        <a href=\"https://www.mohfw.gov.in/pdf/FINAL_14_03_2020_ENg.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to get tested for covid-19?</a>\n                                        {/* <Link to=\"/myths\">Myths</Link> */}\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"#\">Get Help</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"\">WHO</Link>\n                                        <Link to=\"\">Ministry of Health</Link>\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <div className=\"dropdown\">\n                                    <div className=\"dropdown-button\">\n                                        <Link to=\"/us\">Contribute</Link>\n                                    </div>\n                                    <div className=\"dropdown-content\">\n                                        <Link to=\"/us\">Get involved with us</Link>\n                                        <Link to=\"/funds\">Active Funds</Link>\n                                        <Link to=\"/volunteer\">Volunteer</Link>\n                                    </div>\n                                </div>\n                            </li>\n                            <li>\n                                <Link to=\"/stories\">Citizen Stories</Link>\n                            </li>\n                            <li>\n                                <Link to=\"/simulation\">Simulation</Link>\n                            </li>\n                            \n                            \n                            \n                            \n                        </ul>\n                        <div>\n                            {/* Language:\n                            <select onChange={(e) => this.changeLanguage(e, this.props.i18n)} defaultValue={this.props.i18n.language}>\n                                <option value=\"en\">English</option>\n                                <option value=\"in_urd\">اردو</option>\n                                <option value=\"in_hi\">हिंदी</option>\n                                <option value=\"in_knn\">ಕೆನಡಾ</option>\n                                <option value=\"in_tam\">தமிழ்</option>\n                                <option value=\"in_od\">ଓଡ଼ିଆ</option>\n                                <option value=\"in_punjabi\">ਪੰਜਾਬੀ</option>\n                            </select> */}\n                            <FormControl variant=\"outlined\" className=\"header-box\" margin='dense'>\n                            <InputLabel htmlFor=\"outlined-age-native-simple\">Language</InputLabel>\n                            <Select\n                                native\n                                value={this.props.i18n.language}\n                                onChange={(e) => this.changeLanguage(e, this.props.i18n)}\n                                label=\"Language\"\n                                inputProps={{\n                                    name: 'language',\n                                    id: 'outlined-age-native-simple',\n                                }}\n                            >\n                            <option value=\"en\">English</option>\n                            <option value=\"in_urd\">اردو</option>\n                            <option value=\"in_hi\">हिंदी</option>\n                            <option value=\"in_knn\">ಕೆನಡಾ</option>\n                            <option value=\"in_tam\">தமிழ்</option>\n                            <option value=\"in_od\">ଓଡ଼ିଆ</option>\n                            <option value=\"in_punjabi\">ਪੰਜਾਬੀ</option>\n                            </Select>\n                        </FormControl>\n                        </div>\n\n                        <div>\n                            {/* District: */}\n                            <TextField\n                                label=\"District\"\n                                id=\"outlined-size-small\"\n                                defaultValue=\"\"\n                                variant=\"outlined\"\n                                size=\"small\"\n                                className=\"header-text header-box\"\n                            />\n                        </div>\n\n\n                    </div>\n                </nav>\n                \n            </header>\n            \n        )\n    }\n}\n\nconst HeaderTrans = withTranslation()(HeaderComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Header() {\n  return (\n    <Suspense fallback=\"loading\">\n      <HeaderTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './Footer.scss'\n\nclass FooterComponent extends React.Component {\n    render() {\n        return (\n            <footer>\n                A volunteer driven initiative. Contribute on <a href=\"https://github.com/upperwal/covid19\" target=\"_blank\">Github</a>. Write to us at hi@cov.social\n            </footer>\n            \n        )\n    }\n}\n\nconst FooterTrans = withTranslation()(FooterComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Footer() {\n  return (\n    <Suspense fallback=\"loading\">\n      <FooterTrans />\n    </Suspense>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom'\n\nimport LocationServices from './utils/LocationServices';\n\nimport './App.scss';\n\n\nimport Home from './userpages/home/Home'\nimport MapList from './userpages/list/MapListPage'\nimport Fraud from './userpages/fraud/Fraud'\n// import SD from './userpages/social_distancing/SocialDistancing'\n// import SQ from './userpages/self_quarantine/SelfQuarantine'\n// import Myths from './userpages/myths/Myths'\n// import Simulation from './userpages/simulation/Simulation'\n// import Funds from './userpages/funds/Funds'\n// import Volunteer from './userpages/volunteer/Volunteer'\n// import Stories from './userpages/stories/Stories'\n// import Us from './userpages/us/Us'\n// import MapDistrict from './userpages/map/MapDistrict'\n\nimport Header from './views/header/Header'\nimport Footer from './views/footer/Footer'\n\n// import Data from './utils/Data'\n\nfunction App() {\n\n\tlet [locationState, setLocationState] = useState({})\n\n  \t// useEffect(() => {\n\t// \tlet locationServices = new LocationServices()\n    //     locationServices.getDistrict((res) => {\n\t// \t\tsetLocationState(res)\n\t// \t})\n\t// }, [])\n\n  \treturn (\n\t\t<div className=\"App\">\n\t\t\n\t\t\t<Router basename='/'>\n\t\t\t\t{/* <Header/> */}\n\t\t\t\t<Switch>\n\t\t\t\t\t{/* <Route exact \n\t\t\t\t\t\tpath=\"/\" \n\t\t\t\t\t\trender={(props) => <Home {...props} locationState={locationState}  /> }\n\t\t\t\t\t/>\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath=\"/list/:item\"\n\t\t\t\t\t\trender={(props) => <MapList {...props} locationState={locationState}  /> }\n\t\t\t\t\t/> */}\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\trender={(props) => <Fraud {...props} locationState={locationState}  /> }\n\t\t\t\t\t/>\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath=\"/scam\"\n\t\t\t\t\t\trender={(props) => <Fraud {...props} locationState={locationState}  /> }\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <Route path=\"/sd\" component={SD} />\n\t\t\t\t\t<Route path=\"/sq\" component={SQ} />\n\t\t\t\t\t<Route path=\"/myths\" component={Myths} />\n\t\t\t\t\t<Route path=\"/simulation\" component={Simulation} />\n\t\t\t\t\t<Route path=\"/funds\" component={Funds} />\n\t\t\t\t\t<Route path=\"/volunteer\" component={Volunteer} />\n\t\t\t\t\t<Route path=\"/stories\" component={Stories} />\n\t\t\t\t\t<Route path=\"/us\" component={Us} />\n\t\t\t\t\t<Route \n\t\t\t\t\t\tpath=\"/map\" \n\t\t\t\t\t\trender={(props) => <MapDistrict {...props} data={this.state.data}/>}\n\t\t\t\t\t/> */}\n\t\t\t\t</Switch>\n\t\t\t\t<Footer/>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    backend: {\n        loadPath: '/locales/{{lng}}/{{ns}}.json'\n    },\n    fallbackLng: 'en',\n    debug: false,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}